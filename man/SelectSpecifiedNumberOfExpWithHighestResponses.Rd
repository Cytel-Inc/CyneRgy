% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/SelectSpecifiedNumberOfExpWithHighestResponses.R
\name{SelectSpecifiedNumberOfExpWithHighestResponses}
\alias{SelectSpecifiedNumberOfExpWithHighestResponses}
\title{Select user-specified number of treatments to advance that have the largest number of responses.}
\usage{
SelectSpecifiedNumberOfExpWithHighestResponses(
  SimData,
  DesignParam,
  LookInfo = NULL,
  UserParam = NULL
)
}
\arguments{
\item{SimData}{Dataframe which consists of data generated in current simulation}

\item{DesignParam}{List of Design and Simulation Parameters required to perform treatment selection.}

\item{LookInfo}{List containing Design and Simulation Parameters, which might be required to perform treatment selection}

\item{UserParam}{A list of user defined parameters in East or East Horizon. The default must be NULL.
If UserParam is supplied, the list must contain the following named elements:
\describe{
\item{UserParam$QtyOfArmsToSelect}{A value that defines how many treatment arms are chosen to advance. 
                         Note this number must match the number of user-specified allocation values.}  
\item{UserParam$Rank1AllocationRatio}{A value that specifies the allocation to the arm with the highest response}
\item{UserParam$Rank2AllocationRatio}{A value that specifies the allocation to the arm with the next highest response}
         }}
}
\value{
TreatmentID  A vector that consists of the experimental treatments that were selected and carried forward. Experimental treatment IDs are 1, 2, ..., number of experimental treatments

AllocRatio A vector that consists of the allocation for all experimental treatments that continue to the next phase.

ErrorCode An integer value:  ErrorCode = 0 --> No Error
                                      ErrorCode > 0 --> Nonfatal error, current simulation is aborted but the next simulations will run
                                      ErrorCode < 0 --> Fatal error, no further simulation will be attempted
}
\description{
This function is used for the MAMS design with a binary outcome and will perform treatment selection at the interim analysis (IA).   
At the IA, the user-specified number of experimental treatments (QtyOfArmsToSelect) that have the largest number of responses are selected.
After the IA, we would like to randomize based on user specified inputs: 1:Rank1AllocationRatio:Rank2AllocationRatio (control, selected experimental arm with highest number of responses, selected experimental arm with the second highest number of responses)
}
\note{
The length of TreatmentID and AllocRatio must be the same.

The allocation ratio for control will be 1, AllocRatio are relative to this value.  So, a 2 will randomize twice as many to experimental

The order of AllocRatio should be the same as TreatmentID, and the  corresponding elements will have the assigned allocation ratio

The returned vector ONLY includes TreatmentIDs for experimental treatments, eg TreatmentID = c( 0, 1, 2 ) is invalid, because you do NOT need to include 0 for control.

You must return at LEAST one treatment and one allocation ratio
}
\examples{
 Example Output Object:
      Example 1: Assuming the allocation in 2nd part of the trial is 1:2:2 for Control:Experimental 1:Experimental 2
      vSelectedTreatments <- c( 1, 2 )  # Experimental 1 and 2 both have an allocation ratio of 2. 
      vAllocationRatio    <- c( 2, 2 )
      nErrorCode          <- 0
      lReturn             <- list( TreatmentID = vSelectedTreatments, 
                                   AllocRatio  = vAllocationRatio,
                                   ErrorCode   = nErrorCode )
      return( lReturn )
      
     Example 2: Assuming the allocation in 2nd part of the trial is 1:1:2 for Control:Experimental 1:Experimental 2
      vSelectedTreatments <- c( 1, 2 )  # Experimental 2 will receive twice as many as Experimental 1 or Control. 
      vAllocationRatio    <- c( 1, 2 )
      nErrorCode          <- 0
      lReturn             <- list( TreatmentID = vSelectedTreatments, 
                                   AllocRatio  = vAllocationRatio,
                                   ErrorCode   = nErrorCode )
      return( lReturn )
}
