[{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomeAnalysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2-Arm, Binary Outcome - Analysis","text":"following examples illustrate integrate new analysis capabilities East Horizon East using R functions context two-arm trial. example, trial design includes standard--care control arm experimental treatment arm, patient outcomes modeled binary data. design includes two interim analyses (IA) one final analysis (FA). IA, analysis conducted may lead early stopping efficacy futility, depending predefined design criteria. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. East Workbook: 2ArmBinaryOutcomeAnalysis.cywx RStudio Project File: 2ArmBinaryOutcomeAnalysis.Rproj R directory example find following R files: AnalyzeUsingEastManualFormula.R - Contains function named AnalyzeUsingEastManualFormula demonstrate R code necessary Example 1 described . AnalyzeUsingPropTest.R - Contains function named AnalyzeUsingPropTest demonstrate R code necessary Example 2 described . AnalyzeUsingPropLimitsOfCI.R - Contains function named AnalyzeUsingPropLimitsOfCI demonstrate R code necessary Example 3 described . AnalyzeUsingBetaBinomial.R - Contains function named AnalyzeUsingBetaBinomial demonstrate R code necessary Example 4 described . addition, like experiment examples like code help get started provided fill---blank type code files FillInTheBlankR directory.","code":"CyneRgy::RunExample( \"2ArmBinaryOutcomeAnalysis\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomeAnalysis.html","id":"example-1---using-formula-24-2-from-the-east-manual","dir":"Articles","previous_headings":"","what":"Example 1 - Using Formula 24.2 from the East manual","title":"2-Arm, Binary Outcome - Analysis","text":"example related R file: AnalyzeUsingEastManualFormula.R example, analysis customized replacing default method user-defined calculation based formulas Chapter 24: Binomial Superiority Two‐Sample East manual (24.2). Test Statistic: Zj=π̂tj−π̂cjπ̂j⋅(1−π̂j)⋅(1ntj+1ncj)Z_j = \\frac{\\hat{\\pi}_{tj} - \\hat{\\pi}_{cj}}{\\sqrt{\\hat{\\pi}_j \\cdot (1 - \\hat{\\pi}_j) \\cdot ( \\frac{1}{n_{tj}} + \\frac{1}{n_{cj}} )}} : π̂tj\\hat{\\pi}_{tj} π̂cj\\hat{\\pi}_{cj} observed response rate jth interim look treatment control groups, respectively. ntjn_{tj} ncjn_{cj} numbers patients jth interim look treatment control groups, respectively. π̂j=ntj⋅π̂tj+ncj⋅π̂cjntj+ncj\\hat{\\pi}_{j} = \\frac{n_{tj} \\cdot \\hat{\\pi}_{tj} + n_{cj} \\cdot \\hat{\\pi}_{cj}}{n_{tj} + n_{cj}} pooled response rate estimate. objective demonstrate straightforward way modify analysis decision-making process. computed test statistic compared efficacy boundary provided East Horizon East input. example include futility rule use user-defined parameters. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomeAnalysis.html","id":"example-2---using-the-prop-test-function-in-r","dir":"Articles","previous_headings":"","what":"Example 2 - Using the prop.test() Function in R","title":"2-Arm, Binary Outcome - Analysis","text":"example related R file: AnalyzeUsingPropTest.R example utilizes base R prop.test() function perform interim final analyses. p-value used compute Z-statistic, compared efficacy boundary provided East Horizon East. Like Example 1, example include futility rule use user-defined parameters. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomeAnalysis.html","id":"example-3---utilization-of-confidence-interval-limits-for-gono-go-decision-making","dir":"Articles","previous_headings":"","what":"Example 3 - Utilization of Confidence Interval Limits for Go/No-Go Decision-Making","title":"2-Arm, Binary Outcome - Analysis","text":"example related R file: AnalyzeUsingPropLimitsOfCI.R many Phase II trials, Go/-Go decisions made based whether treatment shows sufficient promise justify development. decisions often guided two key thresholds: Minimum Acceptable Value (MAV): smallest treatment effect considered meaningful. Target Value (TV): highly desirable treatment effect based clinical strategic considerations. example demonstrates approximate probabilistic decision-making using frequentist confidence intervals (CIs), ignoring boundaries provided East Horizon East favor CI-based logic. use function prop.test() base R analyze data compute desired confidence intervals. treatment difference likely exceed MAV, Go decision made. , unlikely exceed TV, -Go decision made. Specifically: Interim Analysis Let LL UL lower upper limits confidence interval treatment effect. LL>MAV→GoLL > \\text{MAV} \\rightarrow \\text{Go} UL<TV→-GoUL < \\text{TV} \\rightarrow \\text{-Go} Otherwise →\\rightarrow Continue next analysis Final Analysis LL>MAV→GoLL > \\text{MAV} \\rightarrow \\text{Go} Otherwise →\\rightarrow -Go Refer table definitions user-defined parameters used example. Note: example, boundary information computed East Horizon East ignored. User-defined parameters function prop.test() base R used analyze data compute desired confidence intervals. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomeAnalysis.html","id":"example-4---bayesian-analysis","dir":"Articles","previous_headings":"","what":"Example 4 - Bayesian Analysis","title":"2-Arm, Binary Outcome - Analysis","text":"example related R file: AnalyzeUsingBetaBinomial.R example illustrates prior data patients can incorporated directly Bayesian model. user can specify Beta prior distributions standard care experimental arms, well set decision thresholds efficacy futility. Refer table definitions values user-defined parameters used example. example values specified , prior data includes 10 responders 40 non-responders. Let πS\\pi_S denote response rate standard care, πE\\pi_E response rate experimental treatment. prior distributions defined : πS∼Beta(10,40)\\pi_S \\sim \\text{Beta}(10, 40): implies prior mean 20%, equivalent observing 50 prior patients 10 responses. πE∼Beta(0.2,0.8)\\pi_E \\sim \\text{Beta}(0.2, 0.8): implies prior mean 20%, corresponds just 1 prior patient, reflecting weakly informative prior. Beta distribution conjugate binary (binomial) data, making convenient Bayesian updating. Suppose NCtrlN_{\\text{Ctrl}} NExpN_{\\text{Exp}} patients enrolled control experimental arms, respectively, observe interim analysis: posterior distributions response rates become: πCtrl∣XCtrl,NCtrl∼Beta(10+XCtrl,40+NCtrl−XCtrl)\\pi_{\\text{Ctrl}} \\mid X_{\\text{Ctrl}}, N_{\\text{Ctrl}} \\sim \\text{Beta}(10 + X_{\\text{Ctrl}},\\ 40 + N_{\\text{Ctrl}} - X_{\\text{Ctrl}}) πExp∣XExp,NExp∼Beta(0.2+XExp,0.8+NExp−XExp)\\pi_{\\text{Exp}} \\mid X_{\\text{Exp}}, N_{\\text{Exp}} \\sim \\text{Beta}(0.2 + X_{\\text{Exp}},\\ 0.8 + N_{\\text{Exp}} - X_{\\text{Exp}}) analysis decision-making, posterior distributions used determine whether stop trial early. trial stopped efficacy strong evidence response rate experimental group higher control group, futility little evidence support benefit experimental treatment standard care. primary quantity interest posterior probability experimental treatment higher response rate standard care: ρ=Pr(πExp>πCtrl∣XCtrl,NCtrl,XExp,NExp)\\rho = \\Pr(\\pi_{\\text{Exp}} > \\pi_{\\text{Ctrl}} \\mid X_{\\text{Ctrl}}, N_{\\text{Ctrl}}, X_{\\text{Exp}}, N_{\\text{Exp}}) Specifically, Interim Analysis ρ>0.975→\\rho > 0.975 \\rightarrow Make early efficacy (Go) decision. ρ<0.10→\\rho < 0.10 \\rightarrow Make early futility (-Go) decision. Final Analysis ρ>0.95→\\rho > 0.95 \\rightarrow Make efficacy decision. Otherwise →\\rightarrow Make futility decision. Note values can user-specified. example demonstrates incorporating prior information πS\\pi_S can influence decision-making trial. However, essential conduct sensitivity analyses assess choice priors affects operating characteristics overall conclusions. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomePatientSimulation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2-Arm, Binary Outcome - Patient Simulation","text":"following examples illustrate integrate new patient outcome simulation (response) capabilities East Horizon East using R functions context two-arm trial. example, trial design includes standard--care control arm experimental treatment arm, patient outcomes modeled binary data. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. East Workbook: 2ArmBinaryOutcomePatientSimulation.cywx RStudio Project File: 2ArmBinaryOutcomePatientSimulation.Rproj R directory example find following R files: SimulatePatientOutcomePercentAtZero.Binary.R - file provides example R function simulate patient data mixture distribution proportion patients respond treatment. code Example 1 can used proportion patients don’t respond treatment fixed value. SimulatePatientOutcomePercentAtZeroBetaDist.Binary.R - file provides example R function simulate patient data mixture distribution proportion patients respond treatment. approach assumes percentage patients respond treatment unknown must first drawn Beta distribution.","code":"CyneRgy::RunExample( \"2ArmBinaryOutcomePatientSimulation\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomePatientSimulation.html","id":"example-1---simulate-binary-data-from-a-mixture-distribution","dir":"Articles","previous_headings":"","what":"Example 1 - Simulate Binary Data from a Mixture Distribution","title":"2-Arm, Binary Outcome - Patient Simulation","text":"example related R file: SimulatePatientOutcomePercentAtZero.Binary.R example, patient outcome binary, 0 represents treatment failure (non-response), 1 indicates successful response. However, unknown proportion patients treatment-resistant respond, resulting outcome 0. Based historical data, estimated 20% 40% patients fall category. R function SimulatePatientOutcomePercentAtZero.Binary provided explore proportion treatment-resistant patients assess impact expected study power. examples, binomial distribution used determine whether patient treatment-resistant. patient treatment-resistant, outcome simulated binomial distribution based response probability specified East Horizon East sent R. Refer table definitions user-defined parameters used example. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomePatientSimulation.html","id":"example-1-1---all-patients-respond","dir":"Articles","previous_headings":"Example 1 - Simulate Binary Data from a Mixture Distribution","what":"Example 1.1 - All Patients Respond","title":"2-Arm, Binary Outcome - Patient Simulation","text":"Assume patient treatment-resistant. binomial distribution used determine whether patient treatment-resistant . patient treatment-resistant, outcome simulated binomial distribution using parameters specified East Horizon East sent R. example, probability patient treatment-resistant set zero. Refer table values user-defined parameters used example. demonstrates using R function treatment resistance probability zero produces results simulating data directly default engine East Horizon East.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomePatientSimulation.html","id":"example-1-2---20-of-treatment-resistant-patients","dir":"Articles","previous_headings":"Example 1 - Simulate Binary Data from a Mixture Distribution","what":"Example 1.2 - 20% of Treatment-Resistant Patients","title":"2-Arm, Binary Outcome - Patient Simulation","text":"Now, assume , average, 20% patients treatment-resistant. binomial distribution used determine whether patient treatment-resistant . patient treatment-resistant, outcome simulated binomial distribution using parameters specified East Horizon East sent R. Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomePatientSimulation.html","id":"example-1-3---40-of-treatment-resistant-patients","dir":"Articles","previous_headings":"Example 1 - Simulate Binary Data from a Mixture Distribution","what":"Example 1.3 - 40% of Treatment-Resistant Patients","title":"2-Arm, Binary Outcome - Patient Simulation","text":"example similar previous one, assume , average, 40% patients treatment-resistant. Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomePatientSimulation.html","id":"example-2---simulation-of-patient-data-from-a-mixture-distribution-with-mixture-percent-sampled-from-a-beta-distribution","dir":"Articles","previous_headings":"","what":"Example 2 - Simulation of Patient Data from a Mixture Distribution with Mixture Percent Sampled from a Beta Distribution","title":"2-Arm, Binary Outcome - Patient Simulation","text":"example related R file: SimulatePatientOutcomePercentAtZeroBetaDist.Binary.R Similarly Example 1, function models binary patient outcome, 0 represents treatment failure (non-response) 1 indicates successful response, unknown proportion patients treatment-resistant respond, resulting outcome 0. Now, function SimulatePatientOutcomePercentAtZeroBetaDist.Binary assumes probability patient treatment-resistant random follows Beta distribution, incorporating variability unknown probability treatment resistance. Additionally, function allows different Beta distribution treatment arm, enabling evaluation treatment reduces likelihood failure perform trial. examples, Beta distribution used determine whether patient treatment-resistant. patient treatment-resistant, outcome simulated binomial distribution based response probability specified East Horizon East, data sent R analysis. Refer table definitions user-defined parameters used example. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomePatientSimulation.html","id":"example-2-1---20-40-95-ci-of-treatment-resistant-patients","dir":"Articles","previous_headings":"Example 2 - Simulation of Patient Data from a Mixture Distribution with Mixture Percent Sampled from a Beta Distribution","what":"Example 2.1 - 20%-40% (95% CI) of Treatment-Resistant Patients","title":"2-Arm, Binary Outcome - Patient Simulation","text":"example, independent Beta(23.1,55.2)\\text{Beta} ( 23.1, 55.2 ) distributions used, 95% credible interval (0.2, 0.4). function first simulates probability treatment resistance control experimental arms using Beta distributions. uses simulated probabilities determine proportion treatment-resistant patients. Refer table values user-defined parameters used example. example, assumed two probabilities sampled distribution identical within given simulation. R code can easily adapted modify assumption needed.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmBinaryOutcomePatientSimulation.html","id":"example-2-2---20-40-95-ci-of-control-treatment-resistant-patients-10-30-95-ci-of-experimental-treatment-resistant-patients","dir":"Articles","previous_headings":"Example 2 - Simulation of Patient Data from a Mixture Distribution with Mixture Percent Sampled from a Beta Distribution","what":"Example 2.2 - 20%-40% (95% CI) of Control Treatment-Resistant Patients, 10%-30% (95% CI) of Experimental Treatment-Resistant Patients","title":"2-Arm, Binary Outcome - Patient Simulation","text":"example, treatment reduces probability treatment resistance 10% average compared control. Specifically, assume probability treatment-resistant control group follows Beta(23.1,55.2)\\text{Beta} ( 23.1, 55.2 ) distribution, 95% credible interval (0.2, 0.4). experimental treatment, assume probability treatment-resistant follows Beta(10.8,46.3)\\text{Beta} ( 10.8, 46.3 ) distribution, 95% credible interval (0.1, 0.3). Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomeAnalysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2-Arm, Continuous Outcome - Analysis","text":"following examples illustrate integrate new analysis capabilities East Horizon East using R functions context two-arm trial. example, trial design includes standard--care control arm experimental treatment arm, patient outcomes assumed follow normal distribution. design includes two interim analyses (IA) one final analysis (FA). IA, analysis conducted may lead early stopping efficacy futility, depending predefined design criteria. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. East Workbook: 2ArmNormalOutcomeAnalysis.cywx RStudio Project File: 2ArmNormalOutcomeAnalysis.Rproj R directory example find following R files: AnalyzeUsingEastManualFormulaNormal.R - Contains function named AnalyzeUsingEastManualFormulaNormal demonstrate R code necessary Example 1 described . AnalyzeUsingTTestNormal.R - Contains function named AnalyzeUsingTTestNormal demonstrate R code necessary Example 2 described . AnalyzeUsingMeanLimitsOfCI.R - Contains function named AnalyzeUsingMeanLimitsOfCI demonstrate R code necessary Example 3 described .","code":"CyneRgy::RunExample( \"2ArmNormalOutcomeAnalysis\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomeAnalysis.html","id":"example-1---using-formulas-q-3-3-from-the-east-manual","dir":"Articles","previous_headings":"","what":"Example 1 - Using Formulas Q.3.3 from the East manual","title":"2-Arm, Continuous Outcome - Analysis","text":"example related R file: AnalyzeUsingEastManualFormulaNormal.R example, analysis customized replacing default method user-defined calculation based formulas Appendix Q.3.3 - Parallel Design: Difference Means East manual. Estimate pooled standard deviation: σ̂2=(nt−1)⋅σt2+(nc−1)⋅σc2n−2\\hat\\sigma^{2} = \\sqrt{  \\frac{(n_t - 1) \\cdot \\sigma_t^2 + (n_c - 1) \\cdot \\sigma_c^2} {n - 2} } : ntn_t ncn_c number patients treatment control groups, respectively. σ̂t\\hat\\sigma_t σ̂e\\hat\\sigma_e standard deviations responses treatment control groups, respectively. n=nt+ncn = n_t + n_c total number patients. Test Statistic: Z=μ̂t−μ̂cσ̂2⋅(1nc+1nt)Z = \\frac{\\hat{\\mu}_t - \\hat{\\mu}_c} { \\sqrt{\\hat\\sigma^{2} \\cdot (\\frac{1}{n_c} + \\frac{1}{n_t})}} : μ̂t\\hat{\\mu}_t μ̂e\\hat{\\mu}_e means responses treatment control groups, respectively. σ̂2\\hat\\sigma^{2} estimate pooled standard deviation. ntn_t ncn_c numbers patients treatment control groups, respectively. objective demonstrate straightforward way modify analysis decision-making process. computed test statistic compared efficacy boundary provided East Horizon East input. example include futility rule use user-defined parameters. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomeAnalysis.html","id":"example-2---using-the-t-test-function-in-r","dir":"Articles","previous_headings":"","what":"Example 2 - Using the t.test() Function in R","title":"2-Arm, Continuous Outcome - Analysis","text":"example related R file: AnalyzeUsingTTestNormal.R example utilizes base R t.test() function perform interim final analyses. resulting t-statistic compared efficacy boundary provided East Horizon East. Like Example 1, example include futility rule use user-defined parameters. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomeAnalysis.html","id":"example-3---utilization-of-confidence-interval-limits-for-gono-go-decision-making","dir":"Articles","previous_headings":"","what":"Example 3 - Utilization of Confidence Interval Limits for Go/No-Go Decision-Making","title":"2-Arm, Continuous Outcome - Analysis","text":"example related R file: AnalyzeUsingMeanLimitsOfCI.R many Phase II trials, Go/-Go decisions made based whether treatment shows sufficient promise justify development. decisions often guided two key thresholds: Minimum Acceptable Value (MAV): smallest treatment effect considered meaningful. Target Value (TV): highly desirable treatment effect based clinical strategic considerations. example demonstrates approximate probabilistic decision-making using frequentist confidence intervals (CIs), ignoring boundaries provided East Horizon East favor CI-based logic. use function t.test() base R analyze data compute desired confidence intervals. treatment difference likely exceed MAV, Go decision made. , unlikely exceed TV, -Go decision made. Specifically: Interim Analysis Let LL UL lower upper limits confidence interval treatment effect. LL>MAV→GoLL > \\text{MAV} \\rightarrow \\text{Go} UL<TV→-GoUL < \\text{TV} \\rightarrow \\text{-Go} Otherwise →\\rightarrow Continue next analysis Final Analysis LL>MAV→GoLL > \\text{MAV} \\rightarrow \\text{Go} Otherwise →\\rightarrow -Go example, team resources 100 patients comparing two fixed designs one group sequential design single interim analysis. Refer table definitions user-defined parameters used example. Note: example, boundary information computed East Horizon East ignored. User-defined parameters function t.test() base R used analyze data compute desired confidence intervals. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomeAnalysis.html","id":"option-1---fixed-design-80-ci","dir":"Articles","previous_headings":"Example 3 - Utilization of Confidence Interval Limits for Go/No-Go Decision-Making","what":"Option 1 - Fixed Design (80% CI)","title":"2-Arm, Continuous Outcome - Analysis","text":"decisions made follows: Go: least 90% probability treatment effect exceeds MAV = 0.1 (approximated lower bound 80% CI > MAV). -Go: Go decision made, less 10% probability effect exceeds TV = 0.3 (approximated upper bound 80% CI < TV). framework can approximated using frequentist logic applying decision rules 80% confidence interval assuming range 10th 90th percentile. Refer table values user-defined parameters used option.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomeAnalysis.html","id":"option-2---fixed-design-70-ci","dir":"Articles","previous_headings":"Example 3 - Utilization of Confidence Interval Limits for Go/No-Go Decision-Making","what":"Option 2 - Fixed Design (70% CI)","title":"2-Arm, Continuous Outcome - Analysis","text":"decisions made follows: Go: least 85% probability treatment effect exceeds MAV = 0.1 (approximated lower bound 70% CI > MAV). -Go: Go decision made, less 15% probability effect exceeds TV = 0.3 (approximated upper bound 70% CI < TV). framework can approximated using frequentist logic applying decision rules 80% confidence interval assuming range 15th 85th percentile. Refer table values user-defined parameters used option.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomeAnalysis.html","id":"option-3---group-sequential-design","dir":"Articles","previous_headings":"Example 3 - Utilization of Confidence Interval Limits for Go/No-Go Decision-Making","what":"Option 3 - Group Sequential Design","title":"2-Arm, Continuous Outcome - Analysis","text":"option, interim analysis 50 patients included option stop early Go -Go decision. decisions made follows: Go (continue next analysis IA): least 92.5% probability treatment effect exceeds MAV = 0.1 (approximated lower bound 85% CI > MAV). -Go (stop futility IA): Go decision made, less 7.5% probability effect exceeds TV = 0.3 (approximated upper bound 85% CI < TV). framework can approximated using frequentist logic applying decision rules 85% confidence interval assuming range 7.5 92.5th percentile. Refer table values user-defined parameters used option.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomePatientSimulation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2-Arm, Continuous Outcome - Patient Simulation","text":"following examples illustrate integrate new patient outcome simulation (response) capabilities East Horizon East using R functions context two-arm trial. example, trial design includes standard--care control arm experimental treatment arm, patient outcomes assumed follow normal distribution. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. East Workbook: 2ArmNormalOutcomePatientSimulation.cywx RStudio Project File: 2ArmNormalOutcomePatientSimulation.Rproj R directory example find following R files: SimulatePatientOutcomePercentAtZero.R - file provides example R function simulate patient data mixture distribution proportion patients null response. code Example 1 can used proportion patients null response fixed value. SimulatePatientOutcomePercentAtZeroBetaDist.R - file provides example R function simulate patient data mixture distribution proportion patients null response. approach assumes probability null response unknown must first drawn Beta distribution. TestingAndExploration.R - file provides example loading East output calling R functions Example 1 within R. intent file help users call test function Example 1. addition, like experiment examples without looking complete solution, can find fill---blank-type code files FillInTheBlankR directory.","code":"CyneRgy::RunExample( \"2ArmNormalOutcomePatientSimulation\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomePatientSimulation.html","id":"example-1---simulation-of-patient-normal-data-from-a-mixture-distribution","dir":"Articles","previous_headings":"","what":"Example 1 - Simulation of Patient Normal Data from a Mixture Distribution","title":"2-Arm, Continuous Outcome - Patient Simulation","text":"example related R file: SimulatePatientOutcomePercentAtZero.R example, patient outcome measured change baseline. However, certain proportion patients respond treatment, resulting change baseline (.e., non-responders). Based historical data, proportion estimated 20% 40%. R function SimulatePatientOutcomePercentAtZero, provided R file, allows users explore impact varying proportions non-responders expected study power. Refer table definitions user-defined parameters used example. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomePatientSimulation.html","id":"example-1-1---all-patients-respond","dir":"Articles","previous_headings":"Example 1 - Simulation of Patient Normal Data from a Mixture Distribution","what":"Example 1.1 - All Patients Respond","title":"2-Arm, Continuous Outcome - Patient Simulation","text":"Assume patients respond treatment. binomial distribution used determine whether patient responder non-responder. patient responder, outcome simulated normal distribution using mean standard deviation specified East Horizon East sent R. example, probability patient non-responder set zero. Refer table values user-defined parameters used example. demonstrates using R function non-responder probability zero produces results simulating data directly default engine East Horizon East.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomePatientSimulation.html","id":"example-1-2---20-of-non-responders","dir":"Articles","previous_headings":"Example 1 - Simulation of Patient Normal Data from a Mixture Distribution","what":"Example 1.2 - 20% of Non-Responders","title":"2-Arm, Continuous Outcome - Patient Simulation","text":"Now, assume , average, 20% patients respond treatment. binomial distribution used determine whether patient non-responder. patient responder, outcome simulated normal distribution using mean standard deviation specified East East Horizon sent R. Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomePatientSimulation.html","id":"example-1-3---40-of-non-responders","dir":"Articles","previous_headings":"Example 1 - Simulation of Patient Normal Data from a Mixture Distribution","what":"Example 1.3 - 40% of Non-Responders","title":"2-Arm, Continuous Outcome - Patient Simulation","text":"example similar previous one, assume , average, 40% patients respond treatment. Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomePatientSimulation.html","id":"example-2---simulation-of-patient-normal-data-from-a-mixture-distribution-with-mixture-percent-sampled-from-a-beta-distribution","dir":"Articles","previous_headings":"","what":"Example 2 - Simulation of Patient Normal Data from a Mixture Distribution with Mixture Percent Sampled from a Beta Distribution","title":"2-Arm, Continuous Outcome - Patient Simulation","text":"example related R file: SimulatePatientOutcomePercentAtZeroBetaDist.R Now, probability patient non-responder treated random variable following Beta distribution. approach accounts uncertainty true probability non-response. Additionally, R function SimulatePatientOutcomePercentAtZeroBetaDist, provided script, allows different Beta distributions assigned treatment. feature can help assess treatment reduces likelihood non-response impact trial outcomes. Refer table definitions user-defined parameters used example. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomePatientSimulation.html","id":"example-2-1---20-40-95-ci-of-non-responders","dir":"Articles","previous_headings":"Example 2 - Simulation of Patient Normal Data from a Mixture Distribution with Mixture Percent Sampled from a Beta Distribution","what":"Example 2.1 - 20%-40% (95% CI) of Non-Responders","title":"2-Arm, Continuous Outcome - Patient Simulation","text":"example, independent Beta(23.1,55.2)\\text{Beta} ( 23.1, 55.2 ) distributions used, 95% credible interval (0.2, 0.4). function first simulates probability non-response control experimental arms using Beta distributions. uses simulated probabilities determine proportion patients null response. Refer table values user-defined parameters used example. example, assumed two probabilities sampled distribution identical within given simulation. R code can easily adapted modify assumption needed.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalOutcomePatientSimulation.html","id":"example-2-2---20-40-95-ci-of-control-non-responders-10-30-95-ci-of-experimental-non-responders","dir":"Articles","previous_headings":"Example 2 - Simulation of Patient Normal Data from a Mixture Distribution with Mixture Percent Sampled from a Beta Distribution","what":"Example 2.2 - 20%-40% (95% CI) of Control Non-Responders, 10%-30% (95% CI) of Experimental Non-Responders","title":"2-Arm, Continuous Outcome - Patient Simulation","text":"example, treatment reduces probability non-response 10% average compared control. Specifically, assume probability non-response control group follows Beta(23.1,55.2)\\text{Beta} ( 23.1, 55.2 ) distribution, 95% credible interval (0.2, 0.4). experimental treatment, assume probability non-response follows Beta(10.8,46.3)\\text{Beta} ( 10.8, 46.3 ) distribution, 95% credible interval (0.1, 0.3). Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalRepeatedMeasuresAnalysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2-Arm, Continuous Outcome, Repeated Measures - Analysis","text":"Repeated measures analyses used multiple observations endpoint collected subject time. design provides insights responses evolve across visits allows within-subject correlation modeling. example, demonstrate integrate custom repeated-measures analysis East Horizon R integration. example focuses two-arm (treatment vs. control) continuous outcome trial. R directory example find following R file: Analyze.RepeatedMeasures.R - R function named Analyze.RepeatedMeasures file used perform repeated measures analysis described Example 1 .","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalRepeatedMeasuresAnalysis.html","id":"example-1---continuous-endpoint","dir":"Articles","previous_headings":"","what":"Example 1 - Continuous Endpoint","title":"2-Arm, Continuous Outcome, Repeated Measures - Analysis","text":"example related R file: Analyze.RepeatedMeasures.R example demonstrates analyze continuous repeated-measures endpoint within two-arm clinical trial. preceding data generation step returns list containing one response variable per visit: Response1, Response2, etc., stored numeric vector. responses outputs data generation step inputs current analysis step. can accessed using SimData object (list-like data frame) via $ operator, example: SimData$Response1, SimData$Response2, etc. analysis performed using nlme::gls() model, accounts within-subject correlations across repeated visits compares treatment effects using model’s estimated parameters. analysis automatically adapts interim final looks depending availability LookInfo. analysis integration examples, decision logic uses helper functions (GetDecisionString() GetDecision()) determine whether efficacy futility boundaries crossed based computed test statistic. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalRepeatedMeasuresResponseGeneration.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2-Arm, Continuous Outcome, Repeated Measures - Patient Simulation","text":"Repeated measures involve collecting multiple data points variable subjects across multiple time periods. method provides insights subjects’ development changes time. context, single subject can multiple responses time, responses can correlated across different visits. following example illustrates integrate new patient outcome simulation (response) capabilities East Horizon East using R functions context two-arm trial repeated measures. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. RStudio Project File: 2ArmNormalRepeatedMeasuresResponseGeneration.Rproj R directory example find following R files: GenerateResponseDiffOfMeansRepeatedMeasures.R - R function named GenRespDiffOfMeansRepMeasures file used generate normal responses across multiple visits 2-arm normal repeated measures design. LibraryMASS.R - file used load library MASS run mvrnorm function.","code":"CyneRgy::RunExample( \"2ArmNormalRepeatedMeasuresResponseGeneration\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalRepeatedMeasuresResponseGeneration.html","id":"example-1---continuous-endpoint","dir":"Articles","previous_headings":"","what":"Example 1 - Continuous Endpoint","title":"2-Arm, Continuous Outcome, Repeated Measures - Patient Simulation","text":"example related R file: GenerateResponseDiffOfMeansRepeatedMeasures.R continuous endpoint repeated measures, generation responses primarily depends mean standard deviation across visits, well correlation visits. examples uses built-input variables coming East Horizon East simulate repeated measures data. uses MASS::mvrnorm function. example use user-defined parameters. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmNormalRepeatedMeasuresResponseGeneration.html","id":"accessing-responses-in-analysis","dir":"Articles","previous_headings":"","what":"Accessing Responses in Analysis","title":"2-Arm, Continuous Outcome, Repeated Measures - Patient Simulation","text":"data generation function returns list object includes multiple repeated response variables, corresponding specified visit. responses stored numeric vectors labeled sequentially Response1, Response2 , depending number visits specified. Response variables serve outputs data generation step inputs subsequent analyses. analysis, data combined SimData object (list variables), therefore response can accessed directly using $ operator, example: SimData$Response1, SimData$Response2, etc. structure facilitates handling multiple outcomes repeated measures analyses. details incorporate multiple responses analysis, refer Integration Point: Analysis - Continuous Outcome Repeated Measures.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmPatientDropout.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2-Arm, Single Endpoint - Simulate Patient Dropout","text":"following examples illustrate customize dropout distribution East Horizon East using R functions. Patients may drop trial various reasons, including safety concerns, treatment burden, non-trial-related factors. cases, dropout rates can reach 30%, particularly drug adverse side effects. Incorporating dropout probabilities hazard rates crucial data generation can significantly impact subsequent analysis. examples, assume trial design consisting control group experimental treatment. CyneRgy installed, can load example RStudio following command: Running command load RStudio project RStudio. RStudio Project File: 2ArmPatientDropout.Rproj R directory example find following R files: GenerateCensoringUsingBinomialProportion.R - Contains function named GenerateCensoringUsingBinomialProportion demonstrate R code necessary Example 1 described . GenerateDropoutTimeForSurvival.R - Contains function named GenerateDropoutTimeForSurvival demonstrate R code necessary Example 2 described . GenerateDropoutTimeForRM - Contains function named GenerateDropoutTimeForRM demonstrate R code necessary Example 3 described .","code":"CyneRgy::RunExample( \"2ArmPatientDropout\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmPatientDropout.html","id":"example-1---dropout-using-binomial-proportion-continuous-or-binary-outcome","dir":"Articles","previous_headings":"","what":"Example 1 - Dropout Using Binomial Proportion (Continuous or Binary Outcome)","title":"2-Arm, Single Endpoint - Simulate Patient Dropout","text":"example related R file: GenerateCensoringUsingBinomialProportion.R R function GenerateCensoringUsingBinomialProportion generates censoring indicator using dropout probability specified East Horizon (ProbDrop script, Probability Dropout East Horizon) continuous binary outcome. function applies binomial distribution using rbinom() function R determine dropout status. case, dropout probability across treatment groups, can customized using user-defined parameters. function use user-defined parameters, uses parameters specified East Horizon. Refer table information. Steps: Let pdpd dropout probability. Draw random sample Bernoulli distribution p=1−pdp = 1 - pd, .e., Binomial(1,pd)Binomial(1, pd), size n=NumSubn = NumSub. 1 indicates patient completes trial (drop ). 0 indicates patient drops (non-completer). figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmPatientDropout.html","id":"example-2---dropout-time-for-time-to-event-outcome","dir":"Articles","previous_headings":"","what":"Example 2 - Dropout Time For Time-to-Event Outcome","title":"2-Arm, Single Endpoint - Simulate Patient Dropout","text":"example related R file: GenerateDropoutTimeForSurvival.R function GenerateDropoutTimeForSurvival generates dropout times two-arm time--event design. case, dropout information can specified separately arm (East Horizon, Control Treatment Dropout Rate tab), dropout times drawn exponential distribution accordingly. number periods fixed 1. function use user-defined parameters, uses parameters specified East Horizon. Refer table information. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmPatientDropout.html","id":"example-3---dropout-time-for-repeated-measures","dir":"Articles","previous_headings":"","what":"Example 3 - Dropout Time for Repeated Measures","title":"2-Arm, Single Endpoint - Simulate Patient Dropout","text":"example related R file: GenerateDropoutTimeForRM.R function GenerateDropoutTimeForRM generates dropout times continuous outcome repeated measures design. case, dropout information can specified separately arm (East Horizon, Control Treatment Dropout Rate tab), dropout times drawn exponential distribution accordingly. Input Method East Horizon set Cumulative Probability Dropout Time. function use user-defined parameters, uses parameters specified East Horizon. Refer table information. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomeAnalysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2-Arm, Time-To-Event Outcome - Analysis","text":"following examples illustrate integrate new analysis capabilities East Horizon East using R functions context two-arm trial. example, trial design includes standard--care control arm experimental treatment arm, patient outcomes modeled time--event data. design includes two interim analyses (IA) one final analysis (FA). IA, analysis conducted may lead early stopping efficacy futility, depending predefined design criteria. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. RStudio Project File: 2ArmTimeToEventOutcomeAnalysis.Rproj R directory example find following R files: AnalyzeUsingEastLogrankFormula.R - Contains function named AnalyzeUsingEastLogrankFormula demonstrate R code necessary Example 1 described . AnalyzeUsingSurvivalPackage.R - Contains function named AnalyzeUsingSurvivalPackage demonstrate R code necessary Example 2 described . AnalyzeUsingHazardRatioLimitsOfCI.R - Contains function named AnalyzeUsingHazardRatioLimitsOfCI demonstrate R code necessary Example 3 described .","code":"CyneRgy::RunExample( \"2ArmTimeToEventOutcomeAnalysis\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomeAnalysis.html","id":"example-1---using-formulas-q-242-and-q-243-from-the-east-manual","dir":"Articles","previous_headings":"","what":"Example 1 - Using Formulas Q.242 and Q.243 from the East manual","title":"2-Arm, Time-To-Event Outcome - Analysis","text":"example related R file: AnalyzeUsingEastLogrankFormula.R example, analysis customized replacing default method user-defined calculation based formulas Appendix Q.8 - Survival : Two Samples East manual (Q.242 Q.243). Numerator Test Statistic: Num=∑=1MWi⋅Numi\\text{Num} = \\sum_{=1}^M W_i \\cdot \\text{Num}_i : Numi=di,t−ni,t⋅dini\\text{Num}_i = d_{,t} - n_{,t} \\cdot \\frac{d_i}{n_i} : Wi=1W_i = 1 weight Logrank Test. di,td_{,t} di,cd_{,c} numbers events time tit_i treatment control groups, respectively. ni,tn_{,t} ni,cn_{,c} numbers subjects risk just time tit_i treatment control groups, respectively. di=di,t+di,cd_i = d_{,t} + d_{,c} total number events time tit_i. ni=ni,c+ni,cn_i = n_{,c} + n_{,c} total number subjects risk just time tit_i. Denominator Test Statistic: Den=∑=1MWi2⋅Deni\\text{Den} = \\sum_{=1}^MW_i^2 \\cdot \\text{Den}_i : Deni=ni,t⋅ni,c⋅(ni−di)⋅dini2⋅(ni−1)\\text{Den}_i = \\frac{n_{,t} \\cdot n_{,c} \\cdot (n_i - d_i) \\cdot d_i}{n_i^2 \\cdot (n_i - 1)} objective demonstrate straightforward way modify analysis decision-making process. computed test statistic compared efficacy boundary provided East Horizon East input. example include futility rule use user-defined parameters. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomeAnalysis.html","id":"example-2---using-the-survivalsurvdiff-function","dir":"Articles","previous_headings":"","what":"Example 2 - Using the survival::survdiff() Function","title":"2-Arm, Time-To-Event Outcome - Analysis","text":"example related R file: AnalyzeUsingSurvivalPackage.R example utilizes survival::survdiff() function survival package perform log-rank test. resulting chi-square statistic used compute log-rank value, compared lower efficacy boundary provided East Horizon East. Like Example 1, example include futility rule use user-defined parameters. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomeAnalysis.html","id":"example-3---utilization-of-confidence-interval-limits-for-gono-go-decision-making","dir":"Articles","previous_headings":"","what":"Example 3 - Utilization of Confidence Interval Limits for Go/No-Go Decision-Making","title":"2-Arm, Time-To-Event Outcome - Analysis","text":"example related R file: AnalyzeUsingHazardRatioLimitsOfCI.R many Phase II trials, Go/-Go decisions made based whether treatment shows sufficient promise justify development. decisions often guided two key thresholds: Minimum Acceptable Value (MAV): smallest treatment effect (e.g., hazard ratio) considered meaningful. Target Value (TV): highly desirable treatment effect based clinical strategic considerations. example demonstrates approximate probabilistic decision-making using frequentist confidence intervals (CIs), ignoring boundaries provided East Horizon East favor CI-based logic. hazard ratio likely MAV, Go decision made. , unlikely TV, -Go decision made. use Cox proportional hazards model via survival::coxph() function estimate log hazard ratio (log HR) standard error. Based estimates, frequentist CIs constructed inform decision-making. Specifically: Interim Analysis Let LL UL lower upper limits confidence interval log HR. UL<log(MAV)→GoUL < \\log(\\text{MAV}) \\rightarrow \\text{Go} LL>log(TV)→-GoLL > \\log(\\text{TV}) \\rightarrow \\text{-Go} Otherwise →\\rightarrow Continue next analysis Final Analysis UL<log(MAV)→GoUL < \\log(\\text{MAV}) \\rightarrow \\text{Go} Otherwise →\\rightarrow -Go Refer table definitions user-defined parameters used example. Note: example, boundary information computed East Horizon East ignored. User-defined parameters Cox model used analyze data compute desired confidence intervals. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomePatientSimulation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2 Arm, Time-To-Event Outcome - Patient Simulation","text":"following examples illustrate integrate new patient outcome simulation (response) capabilities East Horizon East using R functions context two-arm trial. example, trial design includes standard--care control arm experimental treatment arm, patient outcomes modeled time--event data. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. East Workbook: 2ArmTimeToEventOutcomePatientSimulation.cywx RStudio Project File: 2ArmTimeToEventOutcomePatientSimulation.Rproj R directory example find following R files: SimulatePatientSurvivalWeibull.R - file provides example R function simulate patient time--event data Weibull distribution. SimulatePatientSurvivalMixtureExponentials.R - file provides example R function simulate patient data mixture exponential distributions. mixture based number patient groups study group different exponential distribution simulating time--event .","code":"CyneRgy::RunExample( \"2ArmTimeToEventOutcomePatientSimulation\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomePatientSimulation.html","id":"example-1---simulation-of-patient-time-to-event-data-from-a-weibull-distribution","dir":"Articles","previous_headings":"","what":"Example 1 - Simulation of Patient Time-To-Event Data from a Weibull Distribution","title":"2 Arm, Time-To-Event Outcome - Patient Simulation","text":"example related R file: SimulatePatientSurvivalWeibull.R example, R function SimulatePatientSurvivalWeibull provided simulate patient data hazards hazard ratios change time, allowing exploration impact expected study power. Refer table definitions user-defined parameters used example. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomePatientSimulation.html","id":"example-1-1-constant-hazards","dir":"Articles","previous_headings":"Example 1 - Simulation of Patient Time-To-Event Data from a Weibull Distribution","what":"Example 1.1 – Constant Hazards","title":"2 Arm, Time-To-Event Outcome - Patient Simulation","text":"Assume difference risk death patients control arm compared risk death patients experimental arm remains time. time death progression patients simulated Weibull distribution shape scale arm provided East Horizon East sent R. Refer table values user-defined parameters used example. scale parameters calculated based median survival time arm. example demonstrates using R function parameters produces results simulating data directly East Horizon East without R function.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomePatientSimulation.html","id":"example-1-2-increasing-hazards","dir":"Articles","previous_headings":"Example 1 - Simulation of Patient Time-To-Event Data from a Weibull Distribution","what":"Example 1.2 – Increasing Hazards","title":"2 Arm, Time-To-Event Outcome - Patient Simulation","text":"function assumes hazard death disease progression increases time arms, different rates: control arm’s hazard increases slowly experimental arm. time death progression simulated using Weibull distribution, shape scale parameters specified arm East Horizon East sent R. Refer table values user-defined parameters used example. example demonstrates R function can used simulate data way differs East Horizon’s East’s default simulation approach.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomePatientSimulation.html","id":"example-1-3-decreasing-hazards","dir":"Articles","previous_headings":"Example 1 - Simulation of Patient Time-To-Event Data from a Weibull Distribution","what":"Example 1.3 – Decreasing Hazards","title":"2 Arm, Time-To-Event Outcome - Patient Simulation","text":"example similar previous one, function assumes hazards decrease time arms. However, control arm’s hazard decreases slower rate experimental arm. time death progression simulated using Weibull distribution, shape scale parameters specified arm East Horizon East sent R. Refer table values user-defined parameters used example. example demonstrates R function can used simulate data differently East Horizon’s East’s default simulation approach.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomePatientSimulation.html","id":"example-2---simulation-of-patient-time-to-event-data-from-a-mixture-of-distributions","dir":"Articles","previous_headings":"","what":"Example 2 - Simulation of Patient Time-To-Event Data from a Mixture of Distributions","title":"2 Arm, Time-To-Event Outcome - Patient Simulation","text":"example related R file: SimulatePatientSurvivalMixtureExponentials.R example simulates patient data using mixture exponential distributions, allowing multiple patient subgroups within study. subgroup follows distinct exponential distribution modeling TTE, capturing variability patient outcomes. Refer table definitions user-defined parameters used example. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomePatientSimulation.html","id":"example-2-1---no-group-difference","dir":"Articles","previous_headings":"Example 2 - Simulation of Patient Time-To-Event Data from a Mixture of Distributions","what":"Example 2.1 - No Group Difference","title":"2 Arm, Time-To-Event Outcome - Patient Simulation","text":"using two subgroups. subgroups Hazard Ratio (HR), HR=1216=0.75HR = \\frac{12}{16} = 0.75 median TTE, .e., subgroup impact. Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomePatientSimulation.html","id":"example-2-2---hr-0-75","dir":"Articles","previous_headings":"Example 2 - Simulation of Patient Time-To-Event Data from a Mixture of Distributions","what":"Example 2.2 - HR = 0.75","title":"2 Arm, Time-To-Event Outcome - Patient Simulation","text":"25% patients subgroup 1, median TTE lower group 2. subgroups HR=912=1216=0.75HR = \\frac{9}{12} = \\frac{12}{16} = 0.75. Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomePatientSimulation.html","id":"example-2-3---group-1-hr-0-8-prob-0-25-group-2-hr-0-75","dir":"Articles","previous_headings":"Example 2 - Simulation of Patient Time-To-Event Data from a Mixture of Distributions","what":"Example 2.3 - Group 1 HR = 0.8 (Prob = 0.25), Group 2 HR = 0.75","title":"2 Arm, Time-To-Event Outcome - Patient Simulation","text":"25% patients subgroup 1 HR=911.25=0.8HR = \\frac{9}{11.25} = 0.8. Subgroup 2 HR=1216=0.75HR = \\frac{12}{16} = 0.75. Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomePatientSimulation.html","id":"example-2-4---group-1-hr-0-8-prob-0-4-group-2-hr-0-75","dir":"Articles","previous_headings":"Example 2 - Simulation of Patient Time-To-Event Data from a Mixture of Distributions","what":"Example 2.4 - Group 1 HR = 0.8 (Prob = 0.4), Group 2 HR = 0.75","title":"2 Arm, Time-To-Event Outcome - Patient Simulation","text":"40% patients subgroup 1 HR=911.25=0.8HR = \\frac{9}{11.25} = 0.8. Subgroup 2 HR=1216=0.75HR = \\frac{12}{16} = 0.75. Refer table values user-defined parameters used example. intent example illustrate impact patient subgroup may operating characteristics design.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/2ArmTimeToEventOutcomePatientSimulation.html","id":"notes-about-the-exponential-and-weibull-distributions","dir":"Articles","previous_headings":"","what":"Notes about the Exponential and Weibull Distributions","title":"2 Arm, Time-To-Event Outcome - Patient Simulation","text":"R, Weibull distribution defined shape parameter α\\alpha scale parameter σ\\sigma, probability density function (PDF) given : f(x)=ασ(xσ)α−1e−(xσ)α f(x) = \\frac{\\alpha}{\\sigma} \\left(\\frac{x}{\\sigma}\\right)^{\\alpha-1} e^{-\\left(\\frac{x}{\\sigma}\\right)^\\alpha} corresponding hazard function : h(x)=ασ(xσ)α−1 h(x) = \\frac{\\alpha}{\\sigma} \\left(\\frac{x}{\\sigma}\\right)^{\\alpha-1} Exponential distribution R parameterized rate parameter λ\\lambda, PDF given : f(x)=λe−λx f(x) = \\lambda e^{-\\lambda x} hazard function remains constant: h(x)=λ h(x) = \\lambda can see Exponential distribution special case Weibull distribution, obtained setting shape parameter α=1\\alpha = 1 scale parameter σ=1λ\\sigma = \\frac{1}{\\lambda}. Functions assist computation Weibull parameters can found HelperFunctionsWeibull.R.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceContinuous.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Bayesian Assurance, Continuous Outcome","text":"intent following examples demonstrate computation Bayesian assurance, probability success, integration R Cytel products. examples feature two-arm trial normally distributed outcomes, using mixture normal distributions prior compute assurance. scenarios covered follows: Fixed sample design using mixture normal distributions compute Bayesian assurance. Group sequential design, expanding Example 1, interim analysis futility based Bayesian predictive probability. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. R directory example find R files used examples: SimulatePatientOutcomeNormalAssurance.R - Functions simulate patient outcomes normal distribution informed mixture priors. AnalyzeUsingBayesianNormals.R - Implements Bayesian analysis simulated outcomes using normal priors.","code":"CyneRgy::RunExample( \"BayesianAssuranceContinuous\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceContinuous.html","id":"example-1---fixed-sample-design","dir":"Articles","previous_headings":"","what":"Example 1 - Fixed Sample Design","title":"Bayesian Assurance, Continuous Outcome","text":"example considers two-arm fixed sample design normally distributed outcomes YY, 80 patients per treatment arm. demonstrates customize Response (Patient Simulation) element East Horizon’s simulation simulate mixture normal distributions, Analysis element East Horizon’s simulation compute probability success. integrating R function Analysis integration point, users can evaluate frequentist operating characteristics Bayesian design East Horizon. Additionally, modifying Response integration point, simulation incorporate Bayesian assurance. Specifically, R function first samples assurance prior, generates patient data. resulting power simulation reflects Bayesian assurance, assuming two-component prior. Often, important examine posterior distributions observed true treatment differences following Go decision. posterior distributions provide valuable insights planning subsequent study phases assessing potential risks. process obtaining posterior distributions detailed next example. figure illustrates example fits within R integration points Cytel products, accompanied flowcharts outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceContinuous.html","id":"response-patient-simulation-integration-point","dir":"Articles","previous_headings":"Example 1 - Fixed Sample Design","what":"Response (Patient Simulation) Integration Point","title":"Bayesian Assurance, Continuous Outcome","text":"endpoint related R file: SimulatePatientOutcomeNormalAssurance.R function simulates patient-level outcomes within Bayesian assurance framework, using two-component mixture prior reflect uncertainty true treatment effect. allows assessing probability trial success (assurance) uncertainty true treatment effect. Information generated simulation used later Analysis Integration Point. example, true treatment effect (μE−μS\\mu_E - \\mu_S) sampled mixture two normal priors: 25% weight 𝒩(0,0.052)\\mathcal{N}(0, 0.05^2). 75% weight 𝒩(0.7,0.32)\\mathcal{N}(0.7, 0.3^2). control mean fixed, experimental mean computed dMeanCtrl+treatment effectd\\text{MeanCtrl} + \\text{treatment effect}. patient’s response simulated normal distribution corresponding assigned treatment group, standard deviations defined separately arm.  Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceContinuous.html","id":"analysis-integration-point","dir":"Articles","previous_headings":"Example 1 - Fixed Sample Design","what":"Analysis Integration Point","title":"Bayesian Assurance, Continuous Outcome","text":"endpoint related R file: AnalyzeUsingBayesianNormals.R function evaluates posterior probability experimental treatment arm better control arm clinically meaningful threshold, returns Go/-Go decision based cutoff (PUP_U). uses information simulation generated Response element East Horizon’s simulation, explained . patients receiving treatment j∈{S,E}j \\\\{\\text{S}, \\text{E}\\} (S = standard/control, E = experimental), assume outcomes Y∼𝒩(μj,σ2)Y \\sim \\mathcal{N}(\\mu_j, \\sigma^2), μj\\mu_j unknown mean σ2\\sigma^2 known, fixed variance. assume priori : μj∼𝒩(θj,τj2=10002),j∈{S,E} \\mu_j \\sim \\mathcal{N}(\\theta_j, \\tau_j^2 = 1000^2), \\quad j \\\\{\\text{S}, \\text{E}\\} observing nn patients treatment jj, posterior distribution μj\\mu_j becomes: μj∣y‾∼𝒩(θj*,τj2*) \\mu_j \\mid \\bar{y} \\sim \\mathcal{N}(\\theta_j^*, \\tau_j^{2*}) : θj*=θjτj2+ny‾σ21τj2+nσ2,and1τj2*=1τj2+nσ2 \\theta_j^* = \\frac{\\frac{\\theta_j}{\\tau_j^2} + \\frac{n \\bar{y}}{\\sigma^2}}{\\frac{1}{\\tau_j^2} + \\frac{n}{\\sigma^2}}, \\quad \\text{} \\quad \\frac{1}{\\tau_j^{2*}} = \\frac{1}{\\tau_j^2} + \\frac{n}{\\sigma^2} conclusion study, posterior probability experimental arm exceeds control arm minimum acceptable value (MAV) calculated : ρ=Pr(μE>μS+MAV∣data) \\rho = \\Pr(\\mu_E > \\mu_S + \\text{MAV} \\mid \\text{data}) decision rule follows: ρ>PU→\\rho > P_U \\rightarrow Go. ρ≤PU→\\rho \\leq P_U \\rightarrow -Go. Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceContinuous.html","id":"results","dir":"Articles","previous_headings":"Example 1 - Fixed Sample Design","what":"Results","title":"Bayesian Assurance, Continuous Outcome","text":"probability Go 15.3% probability -Go 84.7%.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceContinuous.html","id":"example-2---group-sequential-design","dir":"Articles","previous_headings":"","what":"Example 2 - Group Sequential Design","title":"Bayesian Assurance, Continuous Outcome","text":"example follows structure uses code Example 1. However, introduces interim analysis (IA) futility assessment outcomes observed 50% enrolled patients. futility decision based Bayesian predictive probability -Go decision end trial. Specifically, predictive probability suggests -Go likely final analysis, trial stopped early futility. , trial continues final analysis (FA), uses R code. Analysis element East Horizon’s simulation thus customized handle case explained . figure illustrates example fits within R integration points Cytel products, accompanied flowcharts outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceContinuous.html","id":"response-patient-simulation-integration-point-1","dir":"Articles","previous_headings":"Example 2 - Group Sequential Design","what":"Response (Patient Simulation) Integration Point","title":"Bayesian Assurance, Continuous Outcome","text":"endpoint related R file: SimulatePatientOutcomeNormalAssurance.R function Response Integration Point Example 1. Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceContinuous.html","id":"analysis-integration-point-1","dir":"Articles","previous_headings":"Example 2 - Group Sequential Design","what":"Analysis Integration Point","title":"Bayesian Assurance, Continuous Outcome","text":"endpoint related R file: AnalyzeUsingBayesianNormals.R function Analysis Integration Point Example 1, addition dPUFutility variable incorporate interim analysis. dPUFutility user-defined threshold specifies minimum predictive probability -Go decision required stop trial early futility interim analysis. Let X1X_1 represent data available interim analysis X2X_2 data patients enrolled thereafter. predictive probability -Go decision end study, given X1X_1, exceeds pre-specified threshold PUFutility=90%PU_{\\text{Futility}} = 90\\%, trial stopped. Formally, stopping rule : Pr(-Go end study∣X1)>PUFutility=90%\\Pr( \\text{-Go end study} \\mid X_1 ) > PU_{\\text{Futility}} = 90\\% can expressed : Pr({Pr(μE>μS+MAV∣X1,X2)>PU}|X1)>PUFutility\\Pr\\left( \\left\\{ \\Pr( \\mu_E > \\mu_S + MAV \\mid X_1, X_2 ) > PU \\right\\} \\Big| X_1 \\right) > PU_{\\text{Futility}} Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceContinuous.html","id":"results-1","dir":"Articles","previous_headings":"Example 2 - Group Sequential Design","what":"Results","title":"Bayesian Assurance, Continuous Outcome","text":"results design follows: probability end study Go : 0.1478 probability end study -Go (Stop) : 0.2656 probability futility interim: 0.5866 probability Go conditional stopping interim: 0.357523 probability -Go conditional stopping interim: 0.642477 posterior mean true delta, μE−μS\\mu_E-\\mu_S, given Go decision : 0.992 summary true delta given Go decision : scaled posterior distribution true delta given Go decision :","code":"##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  ##   0.023   0.823   0.990   0.992   1.151   2.009"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceContinuous.html","id":"see-also","dir":"Articles","previous_headings":"","what":"See Also","title":"Bayesian Assurance, Continuous Outcome","text":"relevant examples include: Bayesian Assurance, Time--Event Outcome Consecutive Studies, Continuous Outcome Consecutive Studies, Continuous & Time--Event Outcomes Consecutive Studies, Binary Outcome Probability Success, Dual Endpoints","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceTimeToEvent.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Bayesian Assurance, Time-to-Event Outcome","text":"intent following examples demonstrate computation Bayesian assurance, probability success, integration R Cytel products. examples feature two-arm trial time--event outcomes, using bi-modal distribution prior compute assurance. scenarios covered follows: Fixed sample design using bi-modal distribution Cox proportional hazards model compute Bayesian assurance. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. R directory example find R files used examples: SimulatePatientSurvivalAssurance.R - Functions simulate patient outcomes time--event distribution informed bi-modal prior. AnalyzeSurvivalDataUsingCoxPH.R - Implements Bayesian analysis simulated outcomes using Cox proportional hazards model.","code":"CyneRgy::RunExample( \"BayesianAssuranceTimeToEvent\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceTimeToEvent.html","id":"example-1---fixed-sample-design","dir":"Articles","previous_headings":"","what":"Example 1 - Fixed Sample Design","title":"Bayesian Assurance, Time-to-Event Outcome","text":"example considers two-arm fixed sample design time--event endpoint, 300 patients per arm. demonstrates customize Response (Patient Simulation) element East Horizon’s simulation simulate true hazard ratio prior simulate patient data using sampled hazard ratio, Analysis element East Horizon’s simulation perform analysis using Cox model. figure illustrates example fits within R integration points Cytel products, accompanied flowcharts outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceTimeToEvent.html","id":"response-patient-simulation-integration-point","dir":"Articles","previous_headings":"Example 1 - Fixed Sample Design","what":"Response (Patient Simulation) Integration Point","title":"Bayesian Assurance, Time-to-Event Outcome","text":"endpoint related R file: SimulatePatientSurvivalAssurance.R function simulates patient-level outcomes within Bayesian assurance framework. Information generated simulation used later Analysis Integration Point. example, bi-modal prior log(HR)\\log(HR) used. components prior : 25% weight 𝒩(0,0.02)\\mathcal{N}(0, 0.02). 75% weight ℬℯ𝓉𝒶(2,2)\\mathcal{Beta}(2, 2), rescaled -0.4 0.  Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceTimeToEvent.html","id":"analysis-integration-point","dir":"Articles","previous_headings":"Example 1 - Fixed Sample Design","what":"Analysis Integration Point","title":"Bayesian Assurance, Time-to-Event Outcome","text":"endpoint related R file: AnalyzeSurvivalDataUsingCoxPH.R single analysis conducted 50% patients experienced event interest. Using function file, analysis employs Cox proportional hazards model, hazard ratio (HR) less 1 indicating benefit favor experimental arm. uses information simulation generated Response element East Horizon’s simulation, explained . Go decision made resulting p-value less equal 0.025. Refer table definitions user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceTimeToEvent.html","id":"results","dir":"Articles","previous_headings":"Example 1 - Fixed Sample Design","what":"Results","title":"Bayesian Assurance, Time-to-Event Outcome","text":"probability Go decision 33% probability -Go Decision 67%. posterior distribution true log(HR)\\log( HR ) given Go decision :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/BayesianAssuranceTimeToEvent.html","id":"see-also","dir":"Articles","previous_headings":"","what":"See Also","title":"Bayesian Assurance, Time-to-Event Outcome","text":"relevant examples include: Bayesian Assurance, Continuous Outcome Consecutive Studies, Continuous Outcome Consecutive Studies, Continuous & Time--Event Outcomes Consecutive Studies, Binary Outcome Probability Success, Dual Endpoints","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ChildhoodAnxiety.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Childhood Anxiety Trial","text":"example, cover situation patient data simulation (response endpoint) needs customized match expected clinical trial childhood anxiety. primary outcome clinical trial change baseline follow-Child Health Utility 9D (CHU9D), health-related quality life measure assesses health status across nine dimensions children anxiety. example focuses developing approach simulate patient data realistic understanding impact power study. item CHU9D scored 1 5 total scores 9 elements CHU9D. higher total value lower quality life. Thus, CHU9D ranges 9 45 difference baseline follow-must range -36 36 values integer value. try example, start creating new project East Horizon using Two Arm Confirmatory study objective Continuous endpoint, create input set using Explore task. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. RStudio Project File: ChildhoodAnxiety.Rproj example, first develop necessary R code simulate patient data well script call function plot example data generated new function. example find following R files: ChildPsychology.R - file contains example code call patient simulation function. ChildPsychologyV2.R - file contains example code call updated patient simulation function. SimulatePatientOutcomeCHU9.R - file contains R code patient simulation. version file utilizes UserParam variable way required many scenario cards setup East Horizon Explore. SimulatePatientOutcomeCHU9V2.R - file contains R code patient simulation. version function utilizes improved approach make better use native East Horizon Explore parameters UserParam make simulation setup much easier. example demonstrates importance simulating patient data comparable expected trial executed illustrates impact may power study. addition, provides insight efficient approach utilizing native parameters East Horizon Explore user-defined parameters may specified. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":"CyneRgy::RunExample( \"ChildhoodAnxiety\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ChildhoodAnxiety.html","id":"patient-simulation-function","dir":"Articles","previous_headings":"","what":"Patient Simulation Function","title":"Childhood Anxiety Trial","text":"example related R file: SimulatePatientOutcomeCHU9.R first step create R function simulating patient outcomes. ChildPsychology.R file find example code used test call patient simulation function SimulatePatientOutcomeCHU9.R. First, script sets parameters simulation. East Horizon built-inputs, uses number subjects (NumSub), treatment subject receives (TreatmentID), mean standard deviation two treatments (Mean StdDev). User-defined parameters mean standard deviation follow-control experimental groups also set. Refer table definitions user-defined parameters used example. See Initial R Code Development section information user parameters. SimulatePatientOutcome function called parameters, results stored dataframe, dfPatientData. dataframe contains TreatmentID patient corresponding simulated patient outcome response. script checks validity simulated data. verifies response values (represent changes CHU9D scores) lie within expected range (-36 36), mean responses control experimental groups match expected values. example, one simulated data set look like following:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ChildhoodAnxiety.html","id":"simulation-results","dir":"Articles","previous_headings":"","what":"Simulation Results","title":"Childhood Anxiety Trial","text":"clinical trial setting, sample size statistical power key determinants study’s ability detect true treatment effects. assume sample size 234 true difference 5 normal data distribution, statistical power 90%. power signifies 90% chance detecting true treatment effect, one exists. shown Figure 1, East Horizon Explore used compute power using simulations. Figure 1: Power assuming data normally distributed However, power figure drops introduce realistic patient simulation method. context, statistical power drops approximately 85%. decrease implies , realistic conditions, 85% chance detecting true treatment effect, given sample size 234 true treatment difference 5. See Figure 2. Figure 2: Power assuming realistic patient simulation Knowing sample size 234 insufficient realistic conditions, prudent conduct tests larger sample sizes. instance, run simulations sample sizes ranging 240 300, increasing increments 10. examining resulting statistical power sample sizes utilizing realistic patient simulation, identify smallest sample size brings us closest desired power 90%. simulations easily executed East Horizon Explore results provided Figure 3. Figure 3, can see sample size 300 yields desired 90% power. Thus, trial increase sample size 234, required sample size per standard sample size calculations, 300, sample size needed realistic patient simulation. Figure 3: Sample size determination using realistic patient simulation proceed original sample size 234 realistic conditions, study powered. powered means study reduced likelihood identifying significant treatment effect, even one truly exists. potentially lead erroneous conclusion potentially effective treatment ineffective, thereby missing opportunity treatment advancement. summary, sample size 234 yields power 90% normal data distribution, power decreases around 85% implement realistic patient simulation. highlights importance considering realistic conditions determining sample size study, ensure adequate power detect true treatment effects.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ChildhoodAnxiety.html","id":"initial-r-code-development","dir":"Articles","previous_headings":"","what":"Initial R Code Development","title":"Childhood Anxiety Trial","text":"example related R file: SimulatePatientOutcomeCHU9.R initial R code developed assuming user supply additional parameters user-defined parameters via UserParam variable R section East Horizon supply follow-mean treatment standard deviation treatment arm, since variables native inputs East Horizon. UserParam list holds user defined parameters. parameters used define mean standard deviation follow-scores control group experimental group simulation. Specifically, UserParam list includes following elements: dMeanFollowUpCtrl: parameter represents mean follow-score control group. used generate simulated patient outcomes individuals control group. dMeanFollowUpExp: parameter signifies mean follow-score experimental group. used generate simulated patient outcomes individuals experimental group. dStdDevFollowUpCtrl: parameter denotes standard deviation follow-scores control group. influences spread simulated patient outcomes around mean control group. dStdDevFollowUpExp: parameter indicates standard deviation follow-scores experimental group. affects spread simulated patient outcomes around mean experimental group. original version code, manually create 12 different Response cards represent 12 distinct scenarios. necessary UserParam argument function designed accept single value variable. Refer table values user-defined parameters used first card. second card dMeanFollowUpExp value 19, third card 18, , 10. Response cards, built-inputs East Horizon described table . approach, however, labor-intensive also presented challenges terms data filtering. Specifically, difficult extract display desired information scenarios. process setting scenarios filtering results show wanted cumbersome inefficient. See Figure 4 initial setup. Figure 4: Initial input East Horizon","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ChildhoodAnxiety.html","id":"improved-r-code","dir":"Articles","previous_headings":"","what":"Improved R Code","title":"Childhood Anxiety Trial","text":"example related R file: SimulatePatientOutcomeCHU9V2.R improve process, can use built-parameters provided East Horizon, support ability input multiple values parameter single line (boxes pink color). streamlines process, making easier manage adjust parameters. Unfortunately, current UserParam list script offer capability. Reflecting , ’s clear original structure input development phase can significantly impact ease design exploration. considering user experience optimizing efficiency early stages code development, creates less cumbersome intuitive process. approach particularly beneficial dealing complex simulations data models, ability easily adjust experiment different parameters crucial. light , can change patient simulation function utilize UserParam slightly different way. change can enhance flexibility user-friendliness code, making design input exploration smoother, efficient process. major change use UserParam input baseline simulation information, since stays constant scenarios, utilize native input East Horizon (Mean Treatment 0:10:1) input follow-information, shown Figure 5. simple improvement allows user just 1 input card simulate scenarios previously done 10 cards. also makes native filters aspects East Horizon easier use. Figure 5: Updated input East Horizon Refer table values user-defined parameters used improved example. example, built-inputs East Horizon described table . 0:10:1 means 0 10 increments 1.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Consecutive Studies, Binary Outcome","text":"example demonstrates computation conditional probability success consecutive studies using custom R scripts Response (Patient Simulation) Analysis integration points East Horizon. features sequential trial program involving Phase 2 trial followed Phase 3 trial, binary endpoint. show Phase 2 results simulated, saved, used prior data Phase 3, allowing Phase 3 patient outcomes generated conditional Phase 2 trial’s success. approach illustrates simulations can mimic using earlier trial’s data directly inform subsequent trials, particularly valuable drug development Phase 3 studies expensive resource-intensive.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"why-do-we-need-r-integration-for-this-example","dir":"Articles","previous_headings":"Introduction","what":"Why do we need R Integration for this example?","title":"Consecutive Studies, Binary Outcome","text":"decision move forward certain trials relying computation trial’s probability success optimization parameters boost . identify realistic probability success, though, can difficult without sufficient prior knowledge treatment question. Data previous historical studies always readily accessible many clinicians tasked type decision-making. Simulations creating prior data combination R functions East Horizon product can help alleviate gap knowledge help clinical teams decide invest entire program trials (e.g. Phase 2 followed Phase 3) rather just one confirmatory trial (e.g. move forward Phase 3). combining R functions described East Horizon native inputs, users able simulate data taking account uncertainty around scenario’s assumptions, pass generated data first trial program inputs second trial’s simulation, compute probability success simulated trial well program’s probability success overall. Users also continue benefit East Horizon’s output visualizations trial – caveat Probability Success & Conditional Probability Success metrics labeled “Power” native outputs East Horizon. R Integration required type trial design East Horizon natively support transferring results one trial’s simulations another. R functions created example enable users leverage simulated data one simulation following simulation’s inputs.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"what-do-the-r-functions-do","dir":"Articles","previous_headings":"Introduction","what":"What do the R functions do?","title":"Consecutive Studies, Binary Outcome","text":"R directory example find following R files: SimulatePatientOutcomeBinaryWithAssurance.R R file used Response (Patient Simulation) integration point Phase 2 study. contains function generates patient outcomes binary response trial incorporating uncertainty true response rates, control treatment arms, sampling Beta distribution prior. information function, see Response (Patient Simulation) Integration Point section Phase 2 study . AnalyzeUsingEastManualFormula.R R file used Analysis integration point Phase 2 study. contains function performs analysis way East Horizon, additionally saves relevant outputs required Phase 3 simulation. information function, see Analysis Integration Point section Phase 2 study . SimulatePatientOutcomeBinaryWithAssurancePh3.R R file used Response (Patient Simulation) integration point Phase 3 study. contains function generates patient outcomes binary response trial. time, sample true response rates posterior distribution obtained Phase 2 simulations. information function, see Response (Patient Simulation) Integration Point section Phase 3 study .","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"step-by-step-instructions","dir":"Articles","previous_headings":"","what":"Step-by-Step Instructions","title":"Consecutive Studies, Binary Outcome","text":"starting, make sure required tools files. East Horizon Download R Files public Github repo: AnalyzeUsingEastManualFormula.R, SimulatePatientOutcomeBinaryWithAssurance.R, SimulatePatientOutcomeBinaryWithAssurancePh3.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"new-project-page","dir":"Articles","previous_headings":"Step-by-Step Instructions","what":"New Project Page","title":"Consecutive Studies, Binary Outcome","text":"East Horizon, create new project binary endpoint.  example, create two different input sets: one Phase 2 study one Phase 3 study.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"new-input-set-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"New Input Set Page","title":"Consecutive Studies, Binary Outcome","text":"Navigate Inputs tab, create new input set using Explore task. Rename input set “Phase 2”.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"design-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"Design Page","title":"Consecutive Studies, Binary Outcome","text":"Within input set just created, navigate Design page enter Phase 2 details, e.g. sample size. select “User Specified – R” option Test field.  Click “+” icon next “User Specified - R” open R Integration pop-window. Click “Select File” “Continue”.  Upload select file AnalyzeUsingEastManualFormula.R. Check correct file imported correct Function Name specified system. Click “Save” button exit R Integration details window.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"response-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"Response Page","title":"Consecutive Studies, Binary Outcome","text":"Navigate Response page select “User Specified – R” Distribution field.  Click “+” icon next “User Specified - R” open R Integration pop-window. Click “Select File” “Continue”.  Upload select file SimulatePatientOutcomeBinaryWithAssurance.R. Check correct file imported correct Function Name specified system. Note User Parameter variables automatically pulled R function imported. Fill parameter values define Beta distribution like use generate patient outcome data Phase 2 trial. case, use example values . See Response Integration Point section information variables. Note example, used Beta priors use distribution changing R code sample different one lines 29 30 file.  Click “Save” button exit R Integration details window.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"simulation-setup-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"Simulation Setup Page","title":"Consecutive Studies, Binary Outcome","text":"Specify number simulation runs needed. can select number dropdown list require. Phase 2 input set, recommended run many simulations possible (e.g., 20,000). Phase 3 simulation use data successful Phase 2 trials, simulations run, larger pool usable response rates Phase 3’s data generation.  Check box “Generate Data File Simulated Models”.  Click “Save & Simulate” button.  Confirm clicking “Simulate” pop-window, wait simulation runs finish.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"results-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"Results Page","title":"Consecutive Studies, Binary Outcome","text":"Navigate Results tab, check whether Phase 2 simulation failed completed looking Status column.  simulation failed, open Log window see helpful error messages. Click “?” icon top right corner screen.  Click “Log”.  Identify errors appear. example:  simulation completed, click Result Set’s name open outputs within East Horizon. multiple scenarios simulation, prompted label least one scenario list clicking ribbon icon Favorites column assigning name color. Alternatively, may also skip step selecting “Skip” button bottom left corner.  Explore page results appears. notice checkbox left side row table, heatmap. Click checkbox model ’d like use first trial program. example, chose model generated data using beta prior distributions, e.g.:  Now click Download dropdown menu, top right screen, Summary Statistics option. Wait file downloaded rename Ph2_results.csv.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"files-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"Files Page","title":"Consecutive Studies, Binary Outcome","text":"Navigate Files page click Inputs folder.  Click “Upload” select file just downloaded East Horizon. Alternatively, can use example file provided Outputs directory example want test workflow example data. Make sure file renamed “Ph2_results.csv” placed Inputs folder intend use R script provided. prefer different file name, can update script accordingly.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"new-input-set-page-1","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 3 Study","what":"New Input Set Page","title":"Consecutive Studies, Binary Outcome","text":"East Horizon, navigate Inputs tab , create new input set using Explore task. Rename input set “Phase 3”.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"design-page-1","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 3 Study","what":"Design Page","title":"Consecutive Studies, Binary Outcome","text":"Within input set just created, create input card, enter Phase 3 details, e.g. sample size. Phase 3, necessary customize Analysis element unless want use simulation data additional phase.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"response-page-1","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 3 Study","what":"Response Page","title":"Consecutive Studies, Binary Outcome","text":"Navigate Response page, create input card, select “User Specified – R” Distribution field.  Click “+” icon next “User Specified - R” open R Integration pop-window. Click “Select File” “Continue”.  Select file SimulatePatientOutcomeBinaryWithAssurancePh3.R. Check correct file imported correct Function Name specified system.  Click “Save” button exit R Integration details window.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"simulation-setup-page-1","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 3 Study","what":"Simulation Setup Page","title":"Consecutive Studies, Binary Outcome","text":"Simulate input set way described . See Steps 15 18 information. However, Phase 3, recommend choosing lower number simulations (e.g., 10,000). simulation fail specifying number simulation higher number successful Phase 2 trials. case, 13,000.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"results-page-1","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 3 Study","what":"Results Page","title":"Consecutive Studies, Binary Outcome","text":"Load results described (see steps 19 21 information). Explore page results, hover cell heatmap see summary outputs. custom R scripts, result printed “Power” actually now equivalent Conditional Probability Success Phase 3 study, .e., probability Phase 3 succeeds given Phase 2 succeeded.  See Results section information.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"phase-2-study-1","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Phase 2 Study","title":"Consecutive Studies, Binary Outcome","text":"Phase 2 study, customize Response Analysis integration points. figure illustrates everything fits within R integration points Cytel products, accompanied flowcharts outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"response-patient-simulation-integration-point","dir":"Articles","previous_headings":"Technical Information and Example Values > Phase 2 Study","what":"Response (Patient Simulation) Integration Point","title":"Consecutive Studies, Binary Outcome","text":"endpoint related R file: SimulatePatientOutcomeBinaryWithAssurance.R Using file , Response element Phase 2 study customized generate patient outcomes binary response trial incorporating uncertainty true response rates sampling prior distributions. , use Beta distribution prior. However, use distribution changing R code sample different one lines 29 30 file.  arm, true response probability drawn Beta distribution: πctrl∼Beta(αctrl,βctrl) \\pi_\\text{ctrl} \\sim \\text{Beta}(\\alpha_\\text{ctrl}, \\beta_\\text{ctrl}) πexp∼Beta(αexp,βexp) \\pi_\\text{exp} \\sim \\text{Beta}(\\alpha_\\text{exp}, \\beta_\\text{exp}) αctrl\\alpha_\\text{ctrl}, βctrl\\beta_\\text{ctrl}, αexp\\alpha_\\text{exp}, βexp\\beta_\\text{exp} parameters Beta distributions can user-defined. Refer table values user-defined parameters example values. two true response probabilities returned outputs TrueProbabilityControl TrueProbabilityExperimental end R function. important variables included SimData list variables picked Phase 2 Analysis script, finally appear Phase 2 results CSV file, downloadable East Horizon. later reused Phase 3 loading saved values. See Steps 24 25 Step--Step Instructions section information loading process. , patient’s binary outcome drawn Bernoulli distribution: Yi∼Bernoulli(πj) Y_i \\sim \\text{Bernoulli}(\\pi_j) Yi∈{0,1}Y_i \\\\{0,1\\} binary response, πj\\pi_j true response probability (πctrl\\pi_\\text{ctrl} πexp\\pi_\\text{exp} depending whether patient ii control experimental arm).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"analysis-integration-point","dir":"Articles","previous_headings":"Technical Information and Example Values > Phase 2 Study","what":"Analysis Integration Point","title":"Consecutive Studies, Binary Outcome","text":"endpoint related R file: AnalyzeUsingEastManualFormula.R analysis East Horizon, based formulas Chapter 24: Binomial Superiority Two‐Sample East manual (24.2). user-defined parameter required integration point. Test Statistic: Zj=π̂tj−π̂cjπ̂j⋅(1−π̂j)⋅(1ntj+1ncj)Z_j = \\frac{\\hat{\\pi}_{tj} - \\hat{\\pi}_{cj}}{\\sqrt{\\hat{\\pi}_j \\cdot (1 - \\hat{\\pi}_j) \\cdot ( \\frac{1}{n_{tj}} + \\frac{1}{n_{cj}} )}} : π̂tj\\hat{\\pi}_{tj} π̂cj\\hat{\\pi}_{cj} observed response rate jth interim look treatment control groups, respectively. ntjn_{tj} ncjn_{cj} numbers patients jth interim look treatment control groups, respectively. π̂j=ntj⋅π̂tj+ncj⋅π̂cjntj+ncj\\hat{\\pi}_{j} = \\frac{n_{tj} \\cdot \\hat{\\pi}_{tj} + n_{cj} \\cdot \\hat{\\pi}_{cj}}{n_{tj} + n_{cj}} pooled response rate estimate. R script, TrueProbabilityControl TrueProbabilityExperimental generated Response section loaded SimData outputs, returned end function. important variables appear Phase 2 results saved CSV file. later reused Phase 3 loading saved values input response generation step simulations. See Steps 24 25 Step--Step Instructions section information loading process.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"phase-3-study-1","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Phase 3 Study","title":"Consecutive Studies, Binary Outcome","text":"Phase 3, customize Response integration point . figure illustrates everything fits within R integration points Cytel products, accompanied flowcharts outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"response-patient-simulation-integration-point-1","dir":"Articles","previous_headings":"Technical Information and Example Values > Phase 3 Study","what":"Response (Patient Simulation) Integration Point","title":"Consecutive Studies, Binary Outcome","text":"endpoint related R file: SimulatePatientOutcomeBinaryWithAssurancePh3.R Using file , Response element Phase 3 study customized generate patient outcomes binary response trial incorporating uncertainty true response rates sampling posterior distribution obtained successful Phase 2 simulated trials. case, LoadData function reads Phase 2 results CSV file extracts pairs true control experimental response probabilities trials achieved efficacy. simulated Phase 3 trial samples one pair uses probabilities generate patient-level outcomes rbinom(). See Steps 24 25 Step--Step Instructions section information load results. part program simulation also replaced including actual data previous Phase 2 trial inform Phase 3 simulation. , practice, one deciding whether move forward Phase 3 trial Phase 2 completes data collected analysed.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesBinary.html","id":"results","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Results","title":"Consecutive Studies, Binary Outcome","text":"simulating entire program, example helps decision-makers investigating whether worth investing program, whole, including smaller Phase 2 trial precede larger Phase 3 trial. program compared running simply Phase 3 trial vague prior distribution, like perhaps one used example Phase 2 simulation, running Phase 3 trial without prior knowledge assumed value response rates control treatment arm. comparing options simulating scenario, noticed Conditional Probability Success combined program 10% higher Probability Success running Phase 3 trial vague prior distribution. suggested , assumptions included example, indeed worth investing resources small Phase 2 running Phase 3. extend analysis, one also compute Probability Success entire program combining Probability Success Phase 2 Probability Success Phase 3, compare new metric original Probability Success running Phase 3 trial. may give clinical teams even oversight benefits committing expensive longer program higher chance proving treatment working expected, treatment arm’s patients indeed show health benefits control arm’s patients.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuous.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Consecutive Studies, Continuous Outcome","text":"intent following example demonstrate computation Bayesian assurance, probability success, conditional assurance consecutive studies using custom R scripts Response (Patient Simulation) Analysis integration points East Horizon. features sequential design involving Phase 2 trial followed Phase 3 trial, continuous outcomes. objective understand conducting Phase 2 study can reduce risk associated Phase 3 trial. de-risking evaluated comparing two scenarios: (1) probability -Go decision Phase 3 Phase 2 skipped, (2) probability -Go Phase 3 preceding Phase 2 trial conducted yields Go decision. Specifically, compute conditional assurance Phase 3 given success Phase 2. scenarios covered follows: Two consecutive studies: phase 2 normal endpoint followed phase 3, also normal endpoint. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. R directory example find R files used examples: SimulatePatientOutcomeNormalAssurance.R - Functions simulate patient outcomes normal distribution informed mixture priors. AnalyzeUsingBayesianNormals.R - Implements Bayesian analysis simulated outcomes using normal priors. Note: example builds Bayesian Assurance, Continuous Outcome example, utilizes R code. Please refer information. difference now two different studies: Phase 3 conducted Phase 2 results Go decision.","code":"CyneRgy::RunExample( \"ConsecutiveStudiesContinuous\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuous.html","id":"phase-2-study","dir":"Articles","previous_headings":"","what":"Phase 2 Study","title":"Consecutive Studies, Continuous Outcome","text":"study considers two-arm fixed sample design normally distributed outcomes YY, 80 patients per treatment arm. figure illustrates phase fits within R integration points Cytel products, accompanied flowcharts outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuous.html","id":"response-patient-simulation-integration-point","dir":"Articles","previous_headings":"Phase 2 Study","what":"Response (Patient Simulation) Integration Point","title":"Consecutive Studies, Continuous Outcome","text":"endpoint related R file: SimulatePatientOutcomeNormalAssurance.R function simulates patient-level outcomes within Bayesian assurance framework, using two-component mixture prior reflect uncertainty true treatment effect. allows assessing probability trial success (assurance) uncertainty true treatment effect. Information generated simulation used later Analysis Integration Point. example, true treatment effect (μE−μS\\mu_E - \\mu_S) sampled mixture two normal priors: 25% weight 𝒩(0,0.052)\\mathcal{N}(0, 0.05^2). 75% weight 𝒩(0.7,0.32)\\mathcal{N}(0.7, 0.3^2). control mean fixed, experimental mean computed dMeanCtrl+treatment effectd\\text{MeanCtrl} + \\text{treatment effect}. patient’s response simulated normal distribution corresponding assigned treatment group, standard deviations defined separately arm.  Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuous.html","id":"analysis-integration-point","dir":"Articles","previous_headings":"Phase 2 Study","what":"Analysis Integration Point","title":"Consecutive Studies, Continuous Outcome","text":"endpoint related R file: AnalyzeUsingBayesianNormals.R function evaluates posterior probability experimental treatment arm better control arm clinically meaningful threshold, returns Go/-Go decision based cutoff (PUP_U). uses information simulation generated Response element East Horizon’s simulation, explained . patients receiving treatment j∈{S,E}j \\\\{\\text{S}, \\text{E}\\} (S = standard/control, E = experimental), assume outcomes Y∼𝒩(μj,σ2)Y \\sim \\mathcal{N}(\\mu_j, \\sigma^2), μj\\mu_j unknown mean σ2\\sigma^2 known, fixed variance. assume priori : μj∼𝒩(θj,τj2=10002),j∈{S,E} \\mu_j \\sim \\mathcal{N}(\\theta_j, \\tau_j^2 = 1000^2), \\quad j \\\\{\\text{S}, \\text{E}\\} observing nn patients treatment jj, posterior distribution μj\\mu_j becomes: μj∣y‾∼𝒩(θj*,τj2*) \\mu_j \\mid \\bar{y} \\sim \\mathcal{N}(\\theta_j^*, \\tau_j^{2*}) : θj*=θjτj2+ny‾σ21τj2+nσ2,and1τj2*=1τj2+nσ2 \\theta_j^* = \\frac{\\frac{\\theta_j}{\\tau_j^2} + \\frac{n \\bar{y}}{\\sigma^2}}{\\frac{1}{\\tau_j^2} + \\frac{n}{\\sigma^2}}, \\quad \\text{} \\quad \\frac{1}{\\tau_j^{2*}} = \\frac{1}{\\tau_j^2} + \\frac{n}{\\sigma^2} conclusion study, posterior probability experimental arm exceeds control arm minimum acceptable value (MAV) calculated : ρ=Pr(μE>μS+MAV∣data) \\rho = \\Pr(\\mu_E > \\mu_S + \\text{MAV} \\mid \\text{data}) decision rule follows: ρ>PU→\\rho > P_U \\rightarrow Go. ρ≤PU→\\rho \\leq P_U \\rightarrow -Go. study, MAV set 0.6 PUP_U 0.8. Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuous.html","id":"phase-3-study","dir":"Articles","previous_headings":"","what":"Phase 3 Study","title":"Consecutive Studies, Continuous Outcome","text":"study considers two-arm fixed sample design normally distributed outcomes YY, 200 patients per treatment arm. figure illustrates phase fits within R integration points Cytel products, accompanied flowcharts outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuous.html","id":"response-patient-simulation-integration-point-1","dir":"Articles","previous_headings":"Phase 3 Study","what":"Response (Patient Simulation) Integration Point","title":"Consecutive Studies, Continuous Outcome","text":"endpoint related R file: SimulatePatientOutcomeNormalAssurance.R function Response Integration Point Phase 3 Study Phase 2. Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuous.html","id":"analysis-integration-point-1","dir":"Articles","previous_headings":"Phase 3 Study","what":"Analysis Integration Point","title":"Consecutive Studies, Continuous Outcome","text":"endpoint related R file: AnalyzeUsingBayesianNormals.R function Analysis Integration Point Phase 3 Study Phase 2. However, study, MAV set 0.6 PUP_U 0.5. design equivalent t-test critical value 0.6 posterior probability greater 0.5 indicate estimated treatment difference critical value. Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuous.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Consecutive Studies, Continuous Outcome","text":"phase 2 study independently, probability Go 26.7% probability -Go 73.3%.  phase 3 study independently, probability Go 46% probability -Go 54%.  two studies run sequentially, conducting Phase 3 Phase 2 results Go decision, probability Go Phase 3 84.8% probability -Go 15.2%.  Comparing option running Phase 3 versus Phase 2 followed Phase 3 Phase 2 successful, probability Go phase 3 increases 46% 84.8% probability -Go Phase 3 decreases 54% 15.2%.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuous.html","id":"see-also","dir":"Articles","previous_headings":"","what":"See Also","title":"Consecutive Studies, Continuous Outcome","text":"relevant examples include: Bayesian Assurance, Continuous Outcome Bayesian Assurance, Time--Event Outcome Consecutive Studies, Continuous & Time--Event Outcomes Consecutive Studies, Binary Outcome Probability Success, Dual Endpoints","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"intent following example demonstrate computation Bayesian assurance, probability success, conditional assurance consecutive studies using custom R scripts Response (Patient Simulation) Analysis integration points East Horizon. features sequential design involving Phase 2 trial normal endpoint followed Phase 3 trial time--event endpoint. objective understand conducting Phase 2 study can reduce risk associated Phase 3 trial. de-risking evaluated comparing two scenarios: (1) probability -Go decision Phase 3 Phase 2 skipped, (2) probability -Go Phase 3 preceding Phase 2 trial conducted yields Go decision. Specifically, compute conditional assurance Phase 3 given success Phase 2. scenarios covered follows: Two consecutive studies: phase 2 normal endpoint followed phase 3, time--event endpoint. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. R directory example find R files used examples: SimulatePatientOutcomeNormalAssurance.R - Functions simulate patient outcomes normal distribution informed mixture priors. AnalyzeUsingBayesianNormals.R - Implements Bayesian analysis simulated outcomes using normal priors. SimulatePatientSurvivalAssuranceUsingPh2Prior.R - function simulates patient-level outcomes within Bayesian assurance framework. AnalyzeSurvivalDataUsingCoxPH.R - Implements Bayesian analysis simulated outcomes using Cox proportional hazards model. Note: example builds Bayesian Assurance, Continuous Outcome Bayesian Assurance, Time--Event Outcome examples, utilizes R code. Please refer information. difference now two different studies: Phase 3 conducted Phase 2 results Go decision.","code":"CyneRgy::RunExample( \"ConsecutiveStudiesContinuousTimeToEvent\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"step-by-step-instructions","dir":"Articles","previous_headings":"","what":"Step-by-Step Instructions","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"starting, make sure required tools files. East Horizon Download R Files public Github repo: SimulatePatientOutcomeNormalAssurance.R, AnalyzeUsingBayesianNormals.R, SimulatePatientSurvivalAssuranceUsingPh2Prior.R, AnalyzeSurvivalDataUsingCoxPH.R. example, create two different projects: one Phase 2 study one Phase 3 study.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"new-project-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"New Project Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"East Horizon, create new project continuous endpoint.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"new-input-set-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"New Input Set Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"Navigate Inputs tab, create new input set using Explore task.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"design-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"Design Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"Within input set just created, navigate Design page, select “User Specified – R” Test field.  Click “+” icon next “User Specified - R” open R Integration pop-window. Click “Select File” “Continue”.  Upload select file AnalyzeUsingBayesianNormals.R. Check correct file imported correct Function Name specified system. Note User Parameter variables automatically pulled R function imported. variables dPriorMeanCtrl, dPriorStdDevCtrl, dPriorMeanExp, dPriorStdDevExp missing, add list using button “+ Add Variable”. Fill parameter values. case, use example values . See Analysis Integration Point section phase 2 study information variables.  Click “Save” button exit R Integration details window.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"response-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"Response Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"Navigate Response page relevant response card, select “User Specified – R” Distribution field.  Click “+” icon next “User Specified - R” open R Integration pop-window. Click “Select File” “Continue”.  Upload select file SimulatePatientOutcomeNormalAssurance.R. Check correct file imported correct Function Name specified system. Note User Parameter variables automatically pulled R function imported. Fill parameter values. case, use example values . See Response Integration Point section phase 2 study information variables.  Click “Save” button exit R Integration details window.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"simulation-setup-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"Simulation Setup Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"Specify number simulation runs needed. can choose number require. Phase 2 input set, recommended run many simulations possible (e.g., 20,000). Phase 3 use data successful Phase 2 trials, simulations run, larger pool usable trials Phase 3.  Check box “Generate Data File Simulated Models”.  Click “Save & Simulate” button.  Confirm clicking “Simulate” pop-window, wait simulation runs finish.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"results-page","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 2 Study","what":"Results Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"Navigate Results tab, check whether Phase 2 simulation failed completed looking Status column.  simulation failed, open Log window see helpful error messages. Click “?” icon top right corner screen.  Click “Log”.  Identify errors appear. example:  simulation completed, click Result name. multiple scenarios simulation, prompted label least one scenario list. Alternatively, may also skip step selecting “Skip” button bottom left corner.  Explore page results appears. notice checkbox left side row table, heatmap. Click box model generated data using prior distribution, e.g.:  Now click Download dropdown menu, top right screen, Summary Statistics option. Wait file downloaded rename Ph2_results.csv.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"new-project-page-1","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 3 Study","what":"New Project Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"East Horizon, create new project time--event endpoint. ### Files Page Navigate Files page click Inputs folder.  Click “Upload” select file just downloaded East Horizon. Alternatively, can use example file provided Outputs directory example want test workflow example data. Make sure file renamed “Ph2_results.csv” placed Inputs folder intend use R script provided. prefer different file name, can update script accordingly.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"new-input-set-page-1","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 3 Study","what":"New Input Set Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"Navigate Inputs page create new input set using Explore task.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"design-page-1","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 3 Study","what":"Design Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"Within input set just created, navigate Design page, select “User Specified – R” Test Statistic field.  Click “+” icon next “User Specified - R” open R Integration pop-window. Click “Select File” “Continue”.  Upload select file AnalyzeSurvivalDataUsingCoxPH.R. Check correct file imported correct Function Name specified system. Note User Parameter variables automatically pulled R function imported. Fill parameter values. case, use example values . See Analysis Integration Point section phase 3 study information variables.  Click “Save” button exit R Integration details window.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"response-page-1","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 3 Study","what":"Response Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"Navigate Response page relevant response card Phase 3 input set, select “User Specified – R” Distribution field.  Click “+” icon next “User Specified - R” open R Integration pop-window. Click “Select File” “Continue”.  Upload select file SimulatePatientSurvivalAssuranceUsingPh2Prior.R. Check correct file imported correct Function Name specified system. Note User Parameter variables automatically pulled R function imported. Fill parameter values. case, use example values . See Response Integration Point section phase 3 study information variables.  Click “Save” button exit R Integration details window.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"simulation-setup-page-1","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 3 Study","what":"Simulation Setup Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"Simulate input set way described . See Steps 16 19 information. However, Phase 3, recommend choosing lower number simulations (e.g., 5,000). simulation fail specifying number simulation higher number successful Phase 2 trials.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"results-page-1","dir":"Articles","previous_headings":"Step-by-Step Instructions > Phase 3 Study","what":"Results Page","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"Load results described (see steps 20 22 information). Explore page results, hover cell heatmap see summary outputs. custom R scripts, result “Power” actually now equivalent Conditional Probability Success Phase 3 study, .e., probability Phase 3 succeeds given Phase 2 succeeded. See Results section information.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"phase-2-study-1","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Phase 2 Study","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"study considers two-arm fixed sample design normally distributed outcomes YY, 80 patients per treatment arm. figure illustrates phase fits within R integration points Cytel products, accompanied flowcharts outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"response-patient-simulation-integration-point","dir":"Articles","previous_headings":"Technical Information and Example Values > Phase 2 Study","what":"Response (Patient Simulation) Integration Point","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"endpoint related R file: SimulatePatientOutcomeNormalAssurance.R function simulates patient-level outcomes within Bayesian assurance framework, using two-component mixture prior reflect uncertainty true treatment effect. allows assessing probability trial success (assurance) uncertainty true treatment effect. Information generated simulation used later Analysis Integration Point. example, true treatment effect (μE−μS\\mu_E - \\mu_S) sampled mixture two normal priors: 25% weight 𝒩(0,0.052)\\mathcal{N}(0, 0.05^2). 75% weight 𝒩(0.7,0.32)\\mathcal{N}(0.7, 0.3^2). control mean fixed, experimental mean computed dMeanCtrl+treatment effectd\\text{MeanCtrl} + \\text{treatment effect}. patient’s response simulated normal distribution corresponding assigned treatment group, standard deviations defined separately arm.  Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"analysis-integration-point","dir":"Articles","previous_headings":"Technical Information and Example Values > Phase 2 Study","what":"Analysis Integration Point","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"endpoint related R file: AnalyzeUsingBayesianNormals.R function evaluates posterior probability experimental treatment arm better control arm clinically meaningful threshold, returns Go/-Go decision based cutoff (PUP_U). uses information simulation generated Response element East Horizon’s simulation, explained . patients receiving treatment j∈{S,E}j \\\\{\\text{S}, \\text{E}\\} (S = standard/control, E = experimental), assume outcomes Y∼𝒩(μj,σ2)Y \\sim \\mathcal{N}(\\mu_j, \\sigma^2), μj\\mu_j unknown mean σ2\\sigma^2 known, fixed variance. assume priori : μj∼𝒩(θj,τj2=10002),j∈{S,E} \\mu_j \\sim \\mathcal{N}(\\theta_j, \\tau_j^2 = 1000^2), \\quad j \\\\{\\text{S}, \\text{E}\\} observing nn patients treatment jj, posterior distribution μj\\mu_j becomes: μj∣y‾∼𝒩(θj*,τj2*) \\mu_j \\mid \\bar{y} \\sim \\mathcal{N}(\\theta_j^*, \\tau_j^{2*}) : θj*=θjτj2+ny‾σ21τj2+nσ2,and1τj2*=1τj2+nσ2 \\theta_j^* = \\frac{\\frac{\\theta_j}{\\tau_j^2} + \\frac{n \\bar{y}}{\\sigma^2}}{\\frac{1}{\\tau_j^2} + \\frac{n}{\\sigma^2}}, \\quad \\text{} \\quad \\frac{1}{\\tau_j^{2*}} = \\frac{1}{\\tau_j^2} + \\frac{n}{\\sigma^2} conclusion study, posterior probability experimental arm exceeds control arm minimum acceptable value (MAV) calculated : ρ=Pr(μE>μS+MAV∣data) \\rho = \\Pr(\\mu_E > \\mu_S + \\text{MAV} \\mid \\text{data}) decision rule follows: ρ>PU→\\rho > P_U \\rightarrow Go. ρ≤PU→\\rho \\leq P_U \\rightarrow -Go. study, MAV set 0.6 PUP_U 0.8. Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"phase-3-study-1","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Phase 3 Study","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"study considers two-arm fixed sample design time--event endpoint, 300 patients per arm. figure illustrates integration points used study fit within R integration points Cytel products, accompanied flowcharts outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"response-patient-simulation-integration-point-1","dir":"Articles","previous_headings":"Technical Information and Example Values > Phase 3 Study","what":"Response (Patient Simulation) Integration Point","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"endpoint related R file: SimulatePatientSurvivalAssuranceUsingPh2Prior.R function simulates patient-level outcomes within Bayesian assurance framework. relationship continuous endpoint Phase 2 time--event endpoint Phase 3 modeled using linear function: log(True HR)Phase 3=0.1−0.4×(True Treatment Difference)Phase 2  \\log(\\text{True HR})_{\\text{Phase 3}} = 0.1 - 0.4 \\times (\\text{True Treatment Difference})_{\\text{Phase 2}} Note relationship defined terms true treatment effects. Since Phase 2 informs prior true treatment difference direct link established true difference true hazard ratio, need specify separate prior true HR done Bayesian Assurance, Time--Event Outcome example. conditional unconditional Phase 3 simulations use R initialization function load Phase 2 output extract true treatment differences. values converted log true hazard ratio (HR) using linear link function. Note unconditional assurance calculated sampling directly Phase 2 prior, reading saved values ensures consistent comparison conditional unconditional assurance. approach provides accurate assessment benefit conducting Phase 2 trial Phase 3. R code, note <<- operator used define two global variables: vPrior: vector containing true treatment differences. nSimIndex: index tracking current replication executed Phase 3 simulation. value updated simulation iteration. Refer table definitions values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"analysis-integration-point-1","dir":"Articles","previous_headings":"Technical Information and Example Values > Phase 3 Study","what":"Analysis Integration Point","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"endpoint related R file: AnalyzeSurvivalDataUsingCoxPH.R single analysis conducted 50% patients experienced event interest. Using function file, analysis employs Cox proportional hazards model, hazard ratio (HR) less 1 indicating benefit favor experimental arm. uses information simulation generated Response element East Horizon’s simulation, explained . Go decision made resulting p-value less equal 0.025. Refer table definitions user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"results","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Results","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"phase 2 study independently, probability Go 26.9% probability -Go 73.1%.  phase 3 study independently, unconditional probability Go decision 29% unconditional probability -Go Decision 71%. 95% posterior credible Log( True HR ) (-∞\\infty, 0.12 ). posterior distribution true Log( HR ) given Go decision :  two studies run sequentially, conducting Phase 3 Phase 2 results Go decision, probability Go decision 60% unconditional probability -Go Decision 40%. 95% posterior credible Log( True HR ) (-0.46, -0.08). posterior distribution true Log( HR ) given Phase 3 Go decision :  Comparing option running Phase 3 versus Phase 2 followed Phase 3 Phase 2 successful, probability Go phase 3 increases 29% 60% probability -Go Phase 3 decreases 71% 40%.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ConsecutiveStudiesContinuousTimeToEvent.html","id":"see-also","dir":"Articles","previous_headings":"","what":"See Also","title":"Consecutive Studies, Continuous & Time-to-Event Outcomes","text":"relevant examples include: Bayesian Assurance, Continuous Outcome Bayesian Assurance, Time--Event Outcome Consecutive Studies, Continuous Outcome Consecutive Studies, Binary Outcome Probability Success, Dual Endpoints","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ContributingToCyneRgy.html","id":"contributing-to-cynergy","dir":"Articles","previous_headings":"","what":"Contributing to CyneRgy","title":"Contributing to CyneRgy","text":"like contribute CyneRgy multiple avenues get involved. can submit issue, report bug, add functionality examples others learn . add examples, please follow instructions .","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ContributingToCyneRgy.html","id":"style-guide","dir":"Articles","previous_headings":"","what":"Style Guide","title":"Contributing to CyneRgy","text":"Please follow Biopharm Soft style guide developing code style consistent across different developers.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ContributingToCyneRgy.html","id":"adding-an-example","dir":"Articles","previous_headings":"","what":"Adding an Example","title":"Contributing to CyneRgy","text":"make sure examples clear included package website please use following steps. steps changing time find something clear incorrect, please add issue. Use Git clone CyneRgy repository. issue exist CyneRgy repository, please add one use create new branch development. issue already exists, create branch development. can start new example function CyneRgy::CreateCyneRgyExample. example complete, copy example folder inst/Examples directory CyneRgy. Use Git add files repository. Update vignettes/ExampleOutline.Rmd file include brief description link new example. Use Git commit branch created . Add Pull Request GitHub merge development branch Dev branch. Please note branches merged Dev. Dev used combine branches, branch created building package website reviewed documentation completeness. done, Dev branch merged Main via Pull Request example included website well package installed GitHub.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ContributingToCyneRgy.html","id":"package-development","dir":"Articles","previous_headings":"","what":"Package Development","title":"Contributing to CyneRgy","text":"document intended help development package. document can find packages helpful, example code snippets function calls made create new functions.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ContributingToCyneRgy.html","id":"helpful-packages","dir":"Articles","previous_headings":"Package Development","what":"Helpful packages","title":"Contributing to CyneRgy","text":"pkgdown - Package used create package website. testthat - Useful creating testing R packages. covr - Use create test coverage report following commands","code":"usethis::use_pkgdown_github_pages()  # Likely you do not need to run this again as it was set up already. devtools::document() # Build the Rd scripts in /man for the reference section using the R scripts in /R. devtools::install() # Re-install CyneRgy after adding new functions to /R. pkgdown::build_site() # Build the site pages using Rmd scripts in /vignettes. Preview the site locally before publishing. usethis::use_coverage()  # Likely you do not need to run this again as it was set up already. covr::package_coverage() # Computes the coverage covr::report()           # Creates a report"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ContributingToCyneRgy.html","id":"helpful-links","dir":"Articles","previous_headings":"Package Development","what":"Helpful Links","title":"Contributing to CyneRgy","text":"Git Windows - Git Windows; believe need install use source control Windows. Tortoise Git - Free Windows shell program (runs Windows explorer right-clicking folder/file). allows commit changes GitHub without remember commands. GitHub Flow - Helps understanding GitHub flow. Getting Started Source Control - introduction source control getting started Git. Git Tutorial - Useful Git tutorial.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ContributingToCyneRgy.html","id":"helpful-code-snippets","dir":"Articles","previous_headings":"Package Development","what":"Helpful Code Snippets","title":"Contributing to CyneRgy","text":"need help please ask Kyle Wathen another team member. Add code snippet Clicking Tools → Global Options → Code → Edit Snippets. Snippets menu choose R. creating new snippets keyword “snippet” start column 1 snippets indented. insert snippet RStudio, type snippet name, partial name, click tab. Snippet insert new comment (newcom) insert commented code block. Snippet insert header (header).","code":"snippet newcom    #################################################################################################### .    # ${0} ####    #################################################################################################### . snippet header    #################################################################################################### .    #   Program/Function Name: ${1}    #   Author: J. Kyle Wathen    #   Description:    #   Change History:    #   Last Modified Date:    #################################################################################################### ."},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/DEPAnalysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Dual Endpoints - Analysis","text":"following examples illustrate integrate new analysis capabilities East Horizon using R functions context 2-arm clinical trials dual endpoints. functions can customized support complex evaluation rules, correlated outcomes, flexible statistical designs. Note: script example designed applied individual endpoint within Dual Endpoint (DEP) design, rather endpoints simultaneously. first example illustrates perform modestly weighted log-rank test time--event (TTE) endpoint, second example demonstrates perform Fisher’s Exact Test binary endpoint. Together, show independently analyze different endpoint types within East Horizon’s dual-endpoint analytical framework. R directory example find following R files: AnalyzeDEPUsingModWtLogRank.R - Performs modestly weighted log-rank test time--event endpoint. AnalyzeDEPUsingFisherExact.R - Performs Fisher’s Exact Test binary endpoint.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/DEPAnalysis.html","id":"example-1---modestly-weighted-log-rank-test-for-tte-endpoint","dir":"Articles","previous_headings":"","what":"Example 1 - Modestly Weighted Log-Rank Test for TTE Endpoint","title":"Dual Endpoints - Analysis","text":"example related R file: AnalyzeDEPUsingModWtLogRank.R function AnalyzeDEPUsingModWtLogRank demonstrates compute modestly weighted log-rank test statistic time--event endpoint within DEP design. function reads subject-level simulated data, filters observations current analysis time, computes observed times event indicators based censoring response times. Cox proportional hazards model used estimate hazard ratio treatment control arms, provides interpretable measure treatment effect. modestly weighted log-rank test gives higher weights early events reduces sensitivity late ones, making particularly useful treatment effects expected manifest early. weighting scheme adjusts dynamically depending user-defined parameters delay periods information fractions interim looks. approach flexible handle fixed sample group sequential designs multiple interim analyses. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/DEPAnalysis.html","id":"example-2---fishers-exact-test-for-binary-endpoint","dir":"Articles","previous_headings":"","what":"Example 2 - Fisher’s Exact Test for Binary Endpoint","title":"Dual Endpoints - Analysis","text":"example related R file: AnalyzeDEPUsingFisherExact.R AnalyzeDEPUsingFisherExact function performs analysis binary endpoint within DEP design using Fisher’s Exact Test, compares proportion responders treatment arms without relying asymptotic assumptions. especially useful smaller studies endpoints low event rates. function extracts relevant response treatment information simulated patient data, constructs 2×2 contingency table, computes test statistic associated p-value. results expressed Z-scale integration East Horizon’s simulation engine. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/DEPDecisionsUsingMCP.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Dual Endpoints - Multiplicity Adjustment","text":"following examples illustrate integrate new multiplicity adjustment capabilities East Horizon using R functions context 2-arm clinical trials dual endpoints. R directory example find following R file: GetDEPDecisionsFSD.R - Performs multiplicity-adjusted decision-making dual endpoints using Z-scale test statistics.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/DEPDecisionsUsingMCP.html","id":"example-1---fixed-sample-dual-endpoints-multiplicity-adjustment","dir":"Articles","previous_headings":"","what":"Example 1 - Fixed Sample Dual Endpoints Multiplicity Adjustment","title":"Dual Endpoints - Multiplicity Adjustment","text":"example related R file: GetDEPDecisionsFSD.R GetDEPDecisionsFSD function computes decisions dual-endpoint fixed sample clinical trial using Bonferroni adjustment multiple testing. evaluates test statistics endpoint determines whether efficacy boundary crossed. lower-tail tests, compares cumulative probability test statistic half total alpha, upper-tail tests, uses upper-tail probability. probability threshold, endpoint marked crossed efficacy boundary; otherwise, boundary considered crossed. function returns list containing endpoint decisions. implementation assumes single-look, fixed sample design dropouts. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/DEPPatientSimulation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Dual Endpoints - Patient Simulation","text":"following examples illustrate integrate new patient outcome simulation (response) capabilities East Horizon using R functions context 2-arm clinical trials dual endpoints. first example shows simulate correlated dual time--event (TTE) endpoints. R directory example find following R files: SimulatePatientOutcomeDEPSurvSurvSingleHazardPiece.R - Contains implementation simulating correlated TTE outcomes single-piece hazard assumption endpoints. SimulatePatientOutcomeDEPSurvBinSingleHazardPiece.R - Contains implementation simulating correlated TTE binary outcomes single-piece hazard assumption endpoints.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/DEPPatientSimulation.html","id":"example-1---simulate-correlated-tte-tte-dual-endpoints","dir":"Articles","previous_headings":"","what":"Example 1 - Simulate Correlated TTE-TTE Dual Endpoints","title":"Dual Endpoints - Patient Simulation","text":"example related R file: SimulatePatientOutcomeDEPSurvSurvSingleHazardPiece.R function SimulatePatientOutcomeSurvSurv.DEP simulates patient-level outcomes dual-endpoint design endpoints time--event variables. endpoint modeled using exponential survival distribution, arm-specific hazard rates supplied East Horizon interface. simulate correlated endpoints, function first maps qualitative correlation level (e.g., Weak Positive, Strong Negative) numerical correlation coefficient constructs corresponding 2×2 correlation matrix. Cholesky decomposition matrix used generate pairs correlated standard normal variables simulated subject. correlated normal deviates transformed uniform subsequently exponential variates using specified hazard rates arm, producing one survival time per endpoint per subject. process results two correlated vectors event times (one endpoint) returned within structured response list compatible East Horizon. simulation framework useful evaluating trial designs incorporate dual TTE endpoints, joint success criteria composite decision rules based survival outcomes. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/DEPPatientSimulation.html","id":"example-2","dir":"Articles","previous_headings":"","what":"Example 2","title":"Dual Endpoints - Patient Simulation","text":"example related R file: SimulatePatientOutcomeDEPSurvBinSingleHazardPiece.R function SimulatePatientOutcomeDEPSurvBinSingleHazardPiece simulates patient-level outcomes studies involve two correlated endpoints first endpoint time--event second binary. configuration commonly encountered oncology chronic disease trials survival time evaluated alongside binary endpoint like response remission status. simulation begins translating qualitative correlation level provided East Horizon (e.g., Weak Positive, Strong Negative) corresponding numerical correlation coefficient. coefficient, 2×2 correlation matrix constructed decomposed using Cholesky method. Two sets correlated standard normal variables generated, one simulated subject. first normal deviate used simulate survival times. subject’s time--event value derived transforming correlated normal variable uniform distribution exponential distribution governed arm-specific hazard rate provided East Horizon. second deviate converted binary outcome using inverse probability transformation. expected proportion responders arm determines threshold normal scale subject classified non-responder classified responder. process results two correlated outcome vectors, one containing simulated survival times containing binary responses. results assembled structured response list East Horizon can process. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ExampleOutline.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Examples Outline","text":"document provides overview R examples provided directory. example included directory provides: RStudio project file, Description file describes example, R folder contains example R scripts, optional: FillInTheBlankR folder contains worked examples various code deleted can practice fill blanks. following examples included:","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ExampleOutline.html","id":"advanced-examples","dir":"Articles","previous_headings":"","what":"Advanced Examples","title":"Examples Outline","text":"examples use one integration point project achieve complex design option.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/GeneratePoissonArrival.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Generate Patient Arrival Times with Poisson Process","text":"following examples demonstrate integrate capability generate patient arrival times following Poisson process ramp-phase East Horizon East using R functions. showcase different approaches simulating arrival times based Poisson process, offering flexibility modeling patient recruitment dynamics. CyneRgy installed, can load example RStudio following commands: Running command load RStudio project RStudio. East Workbook: GeneratePoissonArrival.cywx RStudio Project File: GeneratePoissonArrival.Rproj R directory example find following R file: GeneratePoissonArrival.R - file provides code used two examples .","code":"CyneRgy::RunExample( \"GeneratePoissonArrival\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/GeneratePoissonArrival.html","id":"example-1---ramp-up-in-accrual-using-userparam","dir":"Articles","previous_headings":"","what":"Example 1 - Ramp-Up In Accrual Using UserParam","title":"Generate Patient Arrival Times with Poisson Process","text":"example related R file: GeneratePoissonArrival.R example, use seven accrual rates user parameters East Horizon selecting R script. custom variables provided, built-variables PrdStart AccrRate East Horizon ignored. Note example, start accrual periods specified. See Example 2 . Unless otherwise stated East Horizon, default time unit months. Refer table definitions values user-defined parameters used example. Warning, first time unit 0, 1. means: time 0, accrual rate dRate1 (3) per unit time. time 1, rate changes dRate2 (6). time 2, rate changes dRate3 (10), . time 6, accrual rate remains dRate7 (35). example, time unit months, setup models ramp-six-month period, accrual rate stabilizing dRate7 (35) month 6 onward. produce accrual pattern resembling following:  figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/GeneratePoissonArrival.html","id":"example-2---ramp-up-in-accrual-using-built-in-input","dir":"Articles","previous_headings":"","what":"Example 2 - Ramp-Up In Accrual Using Built In Input","title":"Generate Patient Arrival Times with Poisson Process","text":"example related R file: GeneratePoissonArrival.R example use user-defined parameters, uses built-parameters specified East Horizon. use file , now use built-inputs start periods expected accrual rates (Starting Time Average Subjects Enrolled Enrollment Card) implement user-specified ramp-accrual using Poisson. Refer table information. means: time 0 6, expected accrual rate 1 patient per time unit. time 6 12, rate increases 4 patients per time unit. time 12 18, rate increases 12 patients per time unit. time 18 24, expected accrual rate 24. time unit 24, accrual rate assumed 48 patients per time unit. yield accrual patterns resembling following figure, dashed lines marking time points accrual rates change:  figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysis.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Integration Point: Analysis","text":"Analysis integration point allows customize statistical test treatment effect using custom R script. flexibility enables implement methods better align trial’s specific needs, rather relying built-default statistical tests. example: Continuous outcomes: Instead using default difference means, provide script alternative approaches ratio means test Wilcoxon-Mann-Whitney family. Binary outcomes: Instead default difference proportions, implement methods risk ratio suitable measures. Time--Event outcomes: Instead default Logrank test, include scripts alternative approaches like Peto-Peto test, emphasizes early events, restricted mean survival time (RMST)-based test, describes mean event-free survival time pre-selected time point.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysis.html","id":"east-horizon-explore","dir":"Articles","previous_headings":"Availability","what":"East Horizon Explore","title":"Integration Point: Analysis","text":"integration point available East Horizon Explore following study objectives endpoint types: Legend","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysis.html","id":"in-east-horizon-explore","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Explore","title":"Integration Point: Analysis","text":"can set analysis function Test Test Statistic Design Card creating editing Input Set. Select User Specified-R dropdown Test field Design Card. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project. visual guide find option, refer screenshots :  Time--event outcomes, option available General Test Statistic field.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysis.html","id":"in-east-horizon-design","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Design","title":"Integration Point: Analysis","text":"can set analysis function Test sidebar Input Set created simulation. Create compute first analytical design input set. Navigate Results section simulate analytical design. Navigate new simulation input set created. Select User Specified-R dropdown Test field sidebar. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysis.html","id":"in-east","dir":"Articles","previous_headings":"Instructions","what":"In East","title":"Integration Point: Analysis","text":"can set analysis function navigating Compute Test Statistic task User Defined R Function tab Simulation Input window, including option. Choose appropriate test Design tab. see Design Input window, compute scenario using Compute button, save design using Save Workbook button, navigate Simulation Input window clicking Simulate Design button Library. Click Include Options button top right corner Simulation Input window select Accrual / Dropouts User Defined R Function. tab User Defined R Function, list tasks appear. Place cursor File Name field task Compute Test Statistic. Click button Browse… select appropriate R file (filename.r) computer. file contain function(s) written perform various tasks used throughout Project. Specify function name want initialize. copy function’s name R script, click button View. Set required user parameters (variables) needed function using button Add/Edit Variables. Continue setting project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysis.html","id":"endpoint-types","dir":"Articles","previous_headings":"","what":"Endpoint Types","title":"Integration Point: Analysis","text":"input variables, expected output variables, examples, templates integration point depend endpoint type (outcome) using. Refer relevant pages : Continuous (Normal) Outcome Time--Event (Survival) Outcome Continuous (Normal) Outcome Repeated Measures Binary Outcome Dual Outcomes (TTE-TTE TTE-Binary)","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Analysis - Binary Outcome","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point, outcome, study objective.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"variables-of-simdata","dir":"Articles","previous_headings":"Input Variables","what":"Variables of SimData","title":"Integration Point: Analysis - Binary Outcome","text":"Click explore variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"variables-of-designparam","dir":"Articles","previous_headings":"Input Variables","what":"Variables of DesignParam","title":"Integration Point: Analysis - Binary Outcome","text":"Click explore variables DesignParam.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"variables-of-lookinfo","dir":"Articles","previous_headings":"Input Variables","what":"Variables of LookInfo","title":"Integration Point: Analysis - Binary Outcome","text":"Click explore variables LookInfo.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"variables-of-adaptinfo","dir":"Articles","previous_headings":"Input Variables","what":"Variables of AdaptInfo","title":"Integration Point: Analysis - Binary Outcome","text":"Click explore variables AdaptInfo.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Analysis - Binary Outcome","text":"East Horizon expects output specific type. Refer table expected output integration point: output list can take different forms.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"option-1-decision-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Two Arm Confirmatory","what":"Option 1 (Decision): Expected Members of the Output List","title":"Integration Point: Analysis - Binary Outcome","text":"Note Statistical Design = Group Sequential: efficacy boundary crossed, return code 0 stands futility final look. Similarly, futility boundary crossed, return code 0 stands efficacy final look. Use functions CyneRgy::GetDecisionString CyneRgy::GetDecision get decision values simple way.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"option-2-teststat-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Two Arm Confirmatory","what":"Option 2 (TestStat): Expected Members of the Output List","title":"Integration Point: Analysis - Binary Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, TestStat used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, TestStat used check efficacy. LookInfo$FutBdryScale = 0 (futility boundary scale Z scale), TestStat used check efficacy futility. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), TestStat used check efficacy Delta used check futility. LookInfo$FutBdryScale = 3 (futility boundary scale conditional power scale), TestStat used check efficacy Delta, CtrlCompleters, TrmtCompleters, CtrlPi used check futility. Notes Statistical Design = Group Sequential Sample Size Re-Estimation: See notes Statistical Design = Group Sequential futility efficacy checks. , Promising Zone Scale = Conditional Power - Estimated, Delta StdError used sample size re-estimation.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"option-1-decision-expected-members-of-the-output-list-1","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 1 (Decision): Expected Members of the Output List","title":"Integration Point: Analysis - Binary Outcome","text":"Notes Statistical Design = Group Sequential: Decision take care multiple comparison procedures adjustment appropriately. efficacy boundary crossed, return code 0 stands futility final look. Similarly, futility boundary crossed, return code 0 stands efficacy final look. Use functions CyneRgy::GetDecisionString CyneRgy::GetDecision get decision values simple way.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"option-2-teststat-expected-members-of-the-output-list-1","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 2 (TestStat): Expected Members of the Output List","title":"Integration Point: Analysis - Binary Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, TestStat used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, TestStat used check efficacy. LookInfo$FutBdryScale = 1 (futility boundary scale adjusted p-value scale), TestStat used check efficacy futility. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), TestStat used check efficacy Delta used check futility.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"option-3-adjpval-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 3 (AdjPVal): Expected Members of the Output List","title":"Integration Point: Analysis - Binary Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, AdjPVal used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, AdjPVal used check efficacy. LookInfo$FutBdryScale = 1 (futility boundary scale adjusted p-value scale), AdjPVal used check efficacy futility. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), AdjPVal used check efficacy Delta used check futility.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"option-4-rawpval-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 4 (RawPVal): Expected Members of the Output List","title":"Integration Point: Analysis - Binary Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, RawPVal used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, RawPVal used check efficacy. LookInfo$FutBdryScale = 1 (futility boundary scale adjusted p-value scale), option used. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), RawPVal used check efficacy Delta used check futility.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"minimal-templates","dir":"Articles","previous_headings":"","what":"Minimal Templates","title":"Integration Point: Analysis - Binary Outcome","text":"R script contain function ones, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. Detailed templates step--step explanations available : Analyze.Binary.R 2-Arm Analyze.Binary.MAMS.R Multiple Arm.","code":""},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-fixed-sample","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)          # This is an example using GetDecisionString and GetDecision.          # Write the actual code here.     # It is a fixed sample design, so no interim look nor futility check.     bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy.     # Usually, bFAEfficacyCheck would be a conditional statement such as 'dTValue > dBoundary'.          # These variables are set because it is a fixed sample design.     nQtyOfLooks          <- 1     nLookIndex           <- 1      nQtyOfPatsInAnalysis <- nrow( SimData )     nTailType            <- DesignParam$TailType          strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                bFAEfficacyCondition = bFAEfficacyCheck)      nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )          return( list( Decision = as.integer( nDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-group-sequential","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)          # This is an example using GetDecisionString and GetDecision.          # Write the actual code here.     # It is a group sequential design, so interim looks and futility check are possible.     bIAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the interim look.     bIAFutilityCheck <- FALSE # If TRUE, declares futility at the interim look.     bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the final look.     # Usually, the Check variables would be conditional statements such as 'dTValue > dBoundary'.          # These variables are from LookInfo because it is a group sequential design.     nQtyOfLooks          <- LookInfo$NumLooks     nLookIndex           <- LookInfo$CurrLookIndex     nQtyOfPatsInAnalysis <- LookInfo$CumCompleters[ nLookIndex ]     RejType              <- LookInfo$RejType     TailType             <- DesignParam$TailType          strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                bIAEfficacyCondition = bIAEfficacyCheck,                                                bIAFutilityCondition = bIAFutilityCheck,                                                bFAEfficacyCondition = bFAEfficacyCheck )      nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )          return( list ( Decision = as.integer( nDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-fixed-sample-1","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStatistic      <- 0          # Write the actual code here.     # Store the computed test statistic in dTestStatistic.          return( list( TestStat = as.double( dTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-group-sequential-1","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStatistic      <- 0     dDelta              <- 0 # Use if futility boundary scale is Delta or conditional power     dCtrlCompleters     <- 0 # Use if futility boundary scale is conditional power     dTrmtCompleters     <- 0 # Use if futility boundary scale is conditional power     dCtrlPi             <- 0 # Use if futility boundary scale is conditional power               # Write the actual code here.     # Store the computed test statistic in dTestStatistic.     # Compute dDelta, dCtrlCompleters, dTrmtCompleters, dCtrlPi if needed.          return( list( TestStat = as.double( dTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta or conditional power                   CtrlCompleters = as.double( dCtrlCompleters ), # Include if futility boundary scale is conditional power                   TrmtCompleters = as.double( dTrmtCompleters ), # Include if futility boundary scale is conditional power                   CtrlPi = as.double( dCtrlPi ), # Include if futility boundary scale is conditional power                   ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-group-sequential-with-sample-size-re-estimation","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Group Sequential with Sample Size Re-Estimation","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStatistic      <- 0     dDelta              <- 0 # Use if futility boundary scale is Delta or conditional power     dCtrlCompleters     <- 0 # Use if futility boundary scale is conditional power     dTrmtCompleters     <- 0 # Use if futility boundary scale is conditional power     dCtrlPi             <- 0 # Use if futility boundary scale is conditional power     dStdError           <- 0 # Use if Promising Zone Scale = Conditional Power - Estimated               # Write the actual code here.     # Store the computed test statistic in dTestStatistic.     # Compute dDelta, dCtrlCompleters, dTrmtCompleters, dCtrlPi if needed.          return( list( TestStat = as.double( dTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta or conditional power                   CtrlCompleters = as.double( dCtrlCompleters ), # Include if futility boundary scale is conditional power                   TrmtCompleters = as.double( dTrmtCompleters ), # Include if futility boundary scale is conditional power                   CtrlPi = as.double( dCtrlPi ), # Include if futility boundary scale is conditional power                   StdError = as.double(dStdError ), # Include if Promising Zone Scale = Conditional Power - Estimated                   ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-fixed-sample-2","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vDecision           <- rep( 0, NumTreatments )  # Initializing decision vector to 0          # This is an example using GetDecisionString and GetDecision.     # Write the actual code here.          # These variables are set because it is a fixed sample design.     nQtyOfLooks          <- 1     nLookIndex           <- 1      nQtyOfPatsInAnalysis <- nrow( SimData )     nTailType            <- DesignParam$TailType          for( i in 1:NumTreatments )     {         # It is a fixed sample design, so no interim look nor futility check.         bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy.         # Usually, bFAEfficacyCheck would be a conditional statement such as 'dTValue > dBoundary'.         # This would be different for each treatment arm.              strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                    bFAEfficacyCondition = bFAEfficacyCheck)          nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )         vDecision[ i ] = nDecision     }               return( list( Decision = as.integer( vDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-group-sequential-2","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vDecision           <- rep( 0, NumTreatments )  # Initializing decision vector to 0          # This is an example using GetDecisionString and GetDecision.     # Decision should take care of multiple comparison procedures adjustment appropriately.     # Write the actual code here.          # These variables are from LookInfo because it is a group sequential design.     nQtyOfLooks          <- LookInfo$NumLooks     nLookIndex           <- LookInfo$CurrLookIndex     nQtyOfPatsInAnalysis <- LookInfo$CumCompleters[ nLookIndex ]     RejType              <- LookInfo$RejType     TailType             <- DesignParam$TailType          for( i in 1:NumTreatments )     {         # Write the actual code here.         # It is a group sequential design, so interim looks and futility check are possible.         bIAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the interim look.         bIAFutilityCheck <- FALSE # If TRUE, declares futility at the interim look.         bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the final look.         # Usually, the Check variables would be conditional statements such as 'dTValue > dBoundary'.         # This would be different for each treatment arm.              strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                    bIAEfficacyCondition = bIAEfficacyCheck,                                                    bIAFutilityCondition = bIAFutilityCheck,                                                    bFAEfficacyCondition = bFAEfficacyCheck )          nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )         vDecision[ i ] = nDecision     }               return( list( Decision = as.integer( vDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-fixed-sample-3","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vTestStatistic      <- rep( 0, NumTreatments )  # Initializing test statistic vector to 0             # Write the actual code here.     # Store the computed test statistic for each treatment arm in vTestStatistic.          return( list( TestStat = as.double( vTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-group-sequential-3","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vTestStatistic      <- rep( 0, NumTreatments )  # Initializing test statistic vector to 0        dDelta              <- 0 # Use if futility boundary scale is Delta          # Write the actual code here.     # Store the computed test statistic for each treatment arm in vTestStatistic.          return( list( TestStat = as.double( vTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta                   ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-fixed-sample-4","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 3 (AdjPVal)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vAdjPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0            # Write the actual code here.     # Store the computed adjusted p-value for each treatment arm in vAdjPVal.          return( list( AdjPVal = as.double( vTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-group-sequential-4","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 3 (AdjPVal)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vAdjPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0       dDelta              <- 0 # Use if futility boundary scale is Delta          # Write the actual code here.     # Store the computed adjusted p-value for each treatment arm in vAdjPVal.          return( list( AdjPVal = as.double( vTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta                   ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-fixed-sample-5","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 4 (RawPVal)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vRawPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0            # Write the actual code here.     # Store the computed p-value for each treatment arm in vRawPVal.          return( list( RawPVal = as.double( vTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"for-statistical-design-group-sequential-5","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 4 (RawPVal)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Binary Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vRawPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0     dDelta              <- 0 # Use if futility boundary scale is Delta          # Write the actual code here.     # Store the computed p-value for each treatment arm in vRawPVal.          return( list( RawPVal = as.double( vTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta                   ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisBinary.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Analysis - Binary Outcome","text":"Explore following examples context: AnalyzeUsingEastManualFormulaNormal.R AnalyzeUsingBetaBinomial.R AnalyzeUsingPropLimitsOfCI.R AnalyzeUsingPropTest.R AnalyzeMultiArmUsingPropTestBonferroni.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Analysis - Continuous Outcome","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point, outcome, study objective.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"variables-of-simdata","dir":"Articles","previous_headings":"Input Variables","what":"Variables of SimData","title":"Integration Point: Analysis - Continuous Outcome","text":"Click explore variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"variables-of-designparam","dir":"Articles","previous_headings":"Input Variables","what":"Variables of DesignParam","title":"Integration Point: Analysis - Continuous Outcome","text":"Click explore variables DesignParam.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"variables-of-lookinfo","dir":"Articles","previous_headings":"Input Variables","what":"Variables of LookInfo","title":"Integration Point: Analysis - Continuous Outcome","text":"Click explore variables LookInfo.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"variables-of-adaptinfo","dir":"Articles","previous_headings":"Input Variables","what":"Variables of AdaptInfo","title":"Integration Point: Analysis - Continuous Outcome","text":"Click explore variables AdaptInfo.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Analysis - Continuous Outcome","text":"East Horizon expects output specific type. Refer table expected output integration point: output list can take different forms.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"option-1-decision-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Two Arm Confirmatory","what":"Option 1 (Decision): Expected Members of the Output List","title":"Integration Point: Analysis - Continuous Outcome","text":"Note Statistical Design = Group Sequential: efficacy boundary crossed, return code 0 stands futility final look. Similarly, futility boundary crossed, return code 0 stands efficacy final look. Use functions CyneRgy::GetDecisionString CyneRgy::GetDecision get decision values simple way.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"option-2-teststat-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Two Arm Confirmatory","what":"Option 2 (TestStat): Expected Members of the Output List","title":"Integration Point: Analysis - Continuous Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, TestStat used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, TestStat used check efficacy. LookInfo$FutBdryScale = 0 (futility boundary scale Z scale), TestStat used check efficacy futility. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), TestStat used check efficacy Delta used check futility. LookInfo$FutBdryScale = 3 (futility boundary scale conditional power scale), TestStat used check efficacy Delta, CtrlCompleters, TrmtCompleters, CtrlPi used check futility. Notes Statistical Design = Group Sequential Sample Size Re-Estimation: See notes Statistical Design = Group Sequential futility efficacy checks. , Promising Zone Scale = Conditional Power - Estimated, Delta StdError used sample size re-estimation.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"option-1-decision-expected-members-of-the-output-list-1","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 1 (Decision): Expected Members of the Output List","title":"Integration Point: Analysis - Continuous Outcome","text":"Notes Statistical Design = Group Sequential: Decision take care multiple comparison procedures adjustment appropriately. efficacy boundary crossed, return code 0 stands futility final look. Similarly, futility boundary crossed, return code 0 stands efficacy final look. Use functions CyneRgy::GetDecisionString CyneRgy::GetDecision get decision values simple way.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"option-2-teststat-expected-members-of-the-output-list-1","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 2 (TestStat): Expected Members of the Output List","title":"Integration Point: Analysis - Continuous Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, TestStat used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, TestStat used check efficacy. LookInfo$FutBdryScale = 1 (futility boundary scale adjusted p-value scale), TestStat used check efficacy futility. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), TestStat used check efficacy Delta used check futility.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"option-3-adjpval-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 3 (AdjPVal): Expected Members of the Output List","title":"Integration Point: Analysis - Continuous Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, AdjPVal used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, AdjPVal used check efficacy. LookInfo$FutBdryScale = 1 (futility boundary scale adjusted p-value scale), AdjPVal used check efficacy futility. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), AdjPVal used check efficacy Delta used check futility.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"option-4-rawpval-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 4 (RawPVal): Expected Members of the Output List","title":"Integration Point: Analysis - Continuous Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, RawPVal used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, RawPVal used check efficacy. LookInfo$FutBdryScale = 1 (futility boundary scale adjusted p-value scale), option used. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), RawPVal used check efficacy Delta used check futility.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"minimal-templates","dir":"Articles","previous_headings":"","what":"Minimal Templates","title":"Integration Point: Analysis - Continuous Outcome","text":"R script contain function ones, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. Detailed templates step--step explanations available : Analyze.Continuous.R 2-Arm Analyze.Continuous.MAMS.R Multiple Arm.","code":""},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-fixed-sample","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)          # This is an example using GetDecisionString and GetDecision.          # Write the actual code here.     # It is a fixed sample design, so no interim look nor futility check.     bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy.     # Usually, bFAEfficacyCheck would be a conditional statement such as 'dTValue > dBoundary'.          # These variables are set because it is a fixed sample design.     nQtyOfLooks          <- 1     nLookIndex           <- 1      nQtyOfEvents         <- DesignParam$MaxCompleters     nQtyOfPatsInAnalysis <- nrow( SimData )     nTailType            <- DesignParam$TailType          strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                bFAEfficacyCondition = bFAEfficacyCheck)      nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )          return( list( Decision = as.integer( nDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-group-sequential","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)          # This is an example using GetDecisionString and GetDecision.          # Write the actual code here.     # It is a group sequential design, so interim looks and futility check are possible.     bIAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the interim look.     bIAFutilityCheck <- FALSE # If TRUE, declares futility at the interim look.     bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the final look.     # Usually, the Check variables would be conditional statements such as 'dTValue > dBoundary'.          # These variables are from LookInfo because it is a group sequential design.     nQtyOfLooks          <- LookInfo$NumLooks     nLookIndex           <- LookInfo$CurrLookIndex     nQtyOfPatsInAnalysis <- LookInfo$CumCompleters[ nLookIndex ]     RejType              <- LookInfo$RejType     TailType             <- DesignParam$TailType          strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                bIAEfficacyCondition = bIAEfficacyCheck,                                                bIAFutilityCondition = bIAFutilityCheck,                                                bFAEfficacyCondition = bFAEfficacyCheck )      nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )          return( list ( Decision = as.integer( nDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-fixed-sample-1","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStatistic      <- 0          # Write the actual code here.     # Store the computed test statistic in dTestStatistic.          return( list( TestStat = as.double( dTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-group-sequential-1","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStatistic      <- 0     dDelta              <- 0 # Use if futility boundary scale is Delta or conditional power     dCtrlCompleters     <- 0 # Use if futility boundary scale is conditional power     dTrmtCompleters     <- 0 # Use if futility boundary scale is conditional power     dCtrlPi             <- 0 # Use if futility boundary scale is conditional power               # Write the actual code here.     # Store the computed test statistic in dTestStatistic.     # Compute dDelta, dCtrlCompleters, dTrmtCompleters, dCtrlPi if needed.          return( list( TestStat = as.double( dTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta or conditional power                   CtrlCompleters = as.double( dCtrlCompleters ), # Include if futility boundary scale is conditional power                   TrmtCompleters = as.double( dTrmtCompleters ), # Include if futility boundary scale is conditional power                   CtrlPi = as.double( dCtrlPi ), # Include if futility boundary scale is conditional power                   ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-group-sequential-with-sample-size-re-estimation","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Group Sequential with Sample Size Re-Estimation","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStatistic      <- 0     dDelta              <- 0 # Use if futility boundary scale is Delta or conditional power     dCtrlCompleters     <- 0 # Use if futility boundary scale is conditional power     dTrmtCompleters     <- 0 # Use if futility boundary scale is conditional power     dCtrlPi             <- 0 # Use if futility boundary scale is conditional power     dStdError           <- 0 # Use if Promising Zone Scale = Conditional Power - Estimated               # Write the actual code here.     # Store the computed test statistic in dTestStatistic.     # Compute dDelta, dCtrlCompleters, dTrmtCompleters, dCtrlPi if needed.          return( list( TestStat = as.double( dTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta or conditional power                   CtrlCompleters = as.double( dCtrlCompleters ), # Include if futility boundary scale is conditional power                   TrmtCompleters = as.double( dTrmtCompleters ), # Include if futility boundary scale is conditional power                   CtrlPi = as.double( dCtrlPi ), # Include if futility boundary scale is conditional power                   StdError = as.double(dStdError ), # Include if Promising Zone Scale = Conditional Power - Estimated                   ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-fixed-sample-2","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vDecision           <- rep( 0, NumTreatments )  # Initializing decision vector to 0          # This is an example using GetDecisionString and GetDecision.     # Write the actual code here.          # These variables are set because it is a fixed sample design.     nQtyOfLooks          <- 1     nLookIndex           <- 1      nQtyOfEvents         <- DesignParam$MaxCompleters     nQtyOfPatsInAnalysis <- nrow( SimData )     nTailType            <- DesignParam$TailType          for( i in 1:NumTreatments )     {         # It is a fixed sample design, so no interim look nor futility check.         bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy.         # Usually, bFAEfficacyCheck would be a conditional statement such as 'dTValue > dBoundary'.         # This would be different for each treatment arm.              strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                bFAEfficacyCondition = bFAEfficacyCheck)          nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )         vDecision[ i ] = nDecision     }               return( list( Decision = as.integer( vDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-group-sequential-2","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vDecision           <- rep( 0, NumTreatments )  # Initializing decision vector to 0          # This is an example using GetDecisionString and GetDecision.     # Decision should take care of multiple comparison procedures adjustment appropriately.     # Write the actual code here.          # These variables are from LookInfo because it is a group sequential design.     nQtyOfLooks          <- LookInfo$NumLooks     nLookIndex           <- LookInfo$CurrLookIndex     nQtyOfPatsInAnalysis <- LookInfo$CumCompleters[ nLookIndex ]     RejType              <- LookInfo$RejType     TailType             <- DesignParam$TailType          for( i in 1:NumTreatments )     {         # Write the actual code here.         # It is a group sequential design, so interim looks and futility check are possible.         bIAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the interim look.         bIAFutilityCheck <- FALSE # If TRUE, declares futility at the interim look.         bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the final look.         # Usually, the Check variables would be conditional statements such as 'dTValue > dBoundary'.         # This would be different for each treatment arm.              strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                bIAEfficacyCondition = bIAEfficacyCheck,                                                bIAFutilityCondition = bIAFutilityCheck,                                                bFAEfficacyCondition = bFAEfficacyCheck )          nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )         vDecision[ i ] = nDecision     }               return( list( Decision = as.integer( vDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-fixed-sample-3","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vTestStatistic      <- rep( 0, NumTreatments )  # Initializing test statistic vector to 0             # Write the actual code here.     # Store the computed test statistic for each treatment arm in vTestStatistic.          return( list( TestStat = as.double( vTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-group-sequential-3","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vTestStatistic      <- rep( 0, NumTreatments )  # Initializing test statistic vector to 0        dDelta              <- 0 # Use if futility boundary scale is Delta          # Write the actual code here.     # Store the computed test statistic for each treatment arm in vTestStatistic.          return( list( TestStat = as.double( vTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta                   ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-fixed-sample-4","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 3 (AdjPVal)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vAdjPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0            # Write the actual code here.     # Store the computed adjusted p-value for each treatment arm in vAdjPVal.          return( list( AdjPVal = as.double( vTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-group-sequential-4","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 3 (AdjPVal)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vAdjPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0       dDelta              <- 0 # Use if futility boundary scale is Delta          # Write the actual code here.     # Store the computed adjusted p-value for each treatment arm in vAdjPVal.          return( list( AdjPVal = as.double( vTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta                   ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-fixed-sample-5","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 4 (RawPVal)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vRawPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0            # Write the actual code here.     # Store the computed p-value for each treatment arm in vRawPVal.          return( list( RawPVal = as.double( vTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"for-statistical-design-group-sequential-5","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 4 (RawPVal)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Continuous Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vRawPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0     dDelta              <- 0 # Use if futility boundary scale is Delta          # Write the actual code here.     # Store the computed p-value for each treatment arm in vRawPVal.          return( list( RawPVal = as.double( vTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta                   ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisContinuous.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Analysis - Continuous Outcome","text":"Explore following examples context: AnalyzeUsingEastManualFormulaNormal.R AnalyzeUsingTTestNormal.R AnalyzeUsingMeanLimitsOfCI.R AnalyzeMultiArmUsingTTestBonferroni.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point, outcome, study objective.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"variables-of-simdata","dir":"Articles","previous_headings":"Input Variables","what":"Variables of SimData","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"Click explore variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"variables-of-designparam","dir":"Articles","previous_headings":"Input Variables","what":"Variables of DesignParam","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"Click explore variables DesignParam.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"variables-of-lookinfo","dir":"Articles","previous_headings":"Input Variables","what":"Variables of LookInfo","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"Click explore variables LookInfo.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"East Horizon expects output specific type. Refer table expected output integration point: output list can take different forms.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"if-lookinfofutbdryscale-2-delta-scale-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"If LookInfo$FutBdryScale = 2 (Delta scale): Expected Members of the Output List","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"Note: case, Delta used check futility TestStat used check efficacy.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"if-lookinfofutbdryscale-6-hr-scale-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"If LookInfo$FutBdryScale = 6 (HR scale): Expected Members of the Output List","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"Note: case, HR used check futility TestStat used check efficacy.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"if-lookinfofutbdryscale-is-anything-else-or-no-futility-boundary-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"If LookInfo$FutBdryScale is anything else (or no futility boundary): Expected Members of the Output List","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"Note: case, TestStat used check efficacy futility.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"minimal-templates","dir":"Articles","previous_headings":"","what":"Minimal Templates","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"R script contain function ones, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. detailed template step--step explanations available : Analyze.DEP.R.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"minimal-template-for-lookinfofutbdryscale-2-delta-scale","dir":"Articles","previous_headings":"Minimal Templates","what":"Minimal Template for LookInfo$FutBdryScale = 2 (Delta scale)","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError               <- 0 # Error handling (no error)     dTestStat            <- 0 # Initialize TestStat     dDelta               <- 0 # Initialize Delta          # Write the actual code here.          return( list( TestStat = as.double( dTestStat ), Delta = as.double(dDelta), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"minimal-template-for-lookinfofutbdryscale-6-hr-scale","dir":"Articles","previous_headings":"Minimal Templates","what":"Minimal Template for LookInfo$FutBdryScale = 6 (HR scale)","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStat           <- 0 # Initialize TestStat     dHR                 <- 0 # Initialize HR          # Write the actual code here.          return( list( TestStat = as.double( dTestStat ), HR = as.double(dHR), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"minimal-template-for-other-lookinfofutbdryscale-or-no-futility-boundary","dir":"Articles","previous_headings":"Minimal Templates","what":"Minimal Template for other LookInfo$FutBdryScale (or no futility boundary)","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStat           <- 0 # Initialize TestStat          # Write the actual code here.          return( list( TestStat = as.double( dTestStat ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisDual.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Analysis - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"Explore following examples context: AnalyzeDEPUsingFisherExact.R AnalyzeDEPUsingModWtLogRank.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point, outcome, study objective.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"variables-of-simdata","dir":"Articles","previous_headings":"Input Variables","what":"Variables of SimData","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"Click explore variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"variables-of-designparam","dir":"Articles","previous_headings":"Input Variables","what":"Variables of DesignParam","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"Click explore variables DesignParam.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"variables-of-lookinfo","dir":"Articles","previous_headings":"Input Variables","what":"Variables of LookInfo","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"Click explore variables LookInfo.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"East Horizon expects output specific type. Refer table expected output integration point: output list can take different forms.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"option-1-decision-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Two Arm Confirmatory","what":"Option 1 (Decision): Expected Members of the Output List","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"Note Statistical Design = Group Sequential: efficacy boundary crossed, return code 0 stands futility final look. Similarly, futility boundary crossed, return code 0 stands efficacy final look. Use functions CyneRgy::GetDecisionString CyneRgy::GetDecision get decision values simple way.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"option-2-teststat-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Two Arm Confirmatory","what":"Option 2 (TestStat): Expected Members of the Output List","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"Note Statistical Design = Fixed Sample: design futility boundary, TestStat used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, TestStat used check efficacy. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale) LookInfo$FutContrast = 0 (primary contrast), TestStat used check efficacy PrimDelta used check futility. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale) LookInfo$FutContrast = 1 (secondary contrast), TestStat used check efficacy SecDelta used check futility.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"minimal-templates","dir":"Articles","previous_headings":"","what":"Minimal Templates","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"R script contain function ones, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. detailed template step--step explanations available : Analyze.RepeatedMeasures.R.","code":""},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"for-statistical-design-fixed-sample","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)          # This is an example using GetDecisionString and GetDecision.          # Write the actual code here.     # It is a fixed sample design, so no interim look nor futility check.     bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy.     # Usually, bFAEfficacyCheck would be a conditional statement such as 'dTValue > dBoundary'.          # These variables are set because it is a fixed sample design.     nQtyOfLooks          <- 1     nLookIndex           <- 1     nQtyOfPatsInAnalysis <- nrow( SimData )     TailType             <- DesignParam$TailType          strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                bFAEfficacyCondition = bFAEfficacyCheck)      nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )          return( list( Decision = as.integer( nDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"for-statistical-design-group-sequential","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)          # This is an example using GetDecisionString and GetDecision.          # Write the actual code here.     # It is a group sequential design, so interim looks and futility check are possible.     bIAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the interim look.     bIAFutilityCheck <- FALSE # If TRUE, declares futility at the interim look.     bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the final look.     # Usually, the Check variables would be conditional statements such as 'dTValue > dBoundary'.          # These variables are from LookInfo because it is a group sequential design.     nQtyOfLooks          <- LookInfo$NumLooks     nLookIndex           <- LookInfo$CurrLookIndex     nQtyOfPatsInAnalysis <- LookInfo$CumCompleters[ nLookIndex ]     RejType              <- LookInfo$RejType     TailType             <- DesignParam$TailType          strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                bIAEfficacyCondition = bIAEfficacyCheck,                                                bIAFutilityCondition = bIAFutilityCheck,                                                bFAEfficacyCondition = bFAEfficacyCheck )      nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )          return( list ( Decision = as.integer( nDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"for-statistical-design-fixed-sample-1","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStatistic      <- 0          # Write the actual code here.     # Store the computed test statistic in dTestStatistic.          return( list( TestStat = as.double( dTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"for-statistical-design-group-sequential-1","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStatistic      <- 0     dPrimeDelta         <- 0 # Use if futility boundary scale is Delta and primary contrast     dSecDelta           <- 0 # Use if futility boundary scale is Delta and secondary contrast               # Write the actual code here.     # Store the computed test statistic in dTestStatistic.     # Compute dDelta, dCtrlCompleters, dTrmtCompleters, dCtrlPi if needed.          return( list( TestStat = as.double( dTestStatistic ),                   PrimeDelta = as.double( dPrimeDelta ), # Include if futility boundary scale is Delta and primary contrast                   SecDelta = as.double( dSecDelta ), # Include if futility boundary scale is Delta and secondary contrast                   ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisRepeatedMeasures.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Integration Point: Analysis - Continuous Outcome with Repeated Measures","text":"Explore following example context: Analyze.RepeatedMeasures.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point, outcome, study objective.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"variables-of-simdata","dir":"Articles","previous_headings":"Input Variables","what":"Variables of SimData","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"Click explore variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"variables-of-designparam","dir":"Articles","previous_headings":"Input Variables","what":"Variables of DesignParam","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"Click explore variables DesignParam.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"variables-of-lookinfo","dir":"Articles","previous_headings":"Input Variables","what":"Variables of LookInfo","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"Click explore variables LookInfo.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"variables-of-adaptinfo","dir":"Articles","previous_headings":"Input Variables","what":"Variables of AdaptInfo","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"Click explore variables AdaptInfo.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"East Horizon expects output specific type. Refer table expected output integration point: output list can take different forms.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"option-1-decision-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Two Arm Confirmatory","what":"Option 1 (Decision): Expected Members of the Output List","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"Note Statistical Design = Group Sequential: efficacy boundary crossed, return code 0 stands futility final look. Similarly, futility boundary crossed, return code 0 stands efficacy final look. Use functions CyneRgy::GetDecisionString CyneRgy::GetDecision get decision values simple way.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"option-2-teststat-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Two Arm Confirmatory","what":"Option 2 (TestStat): Expected Members of the Output List","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, TestStat used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, TestStat used check efficacy. LookInfo$FutBdryScale = 0 (futility boundary scale Z scale), TestStat used check efficacy futility. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), TestStat used check efficacy Delta used check futility. LookInfo$FutBdryScale = 3 (futility boundary scale conditional power scale) Conditional power Delta option = Estimated Delta / Estimated HR, TestStat used check efficacy Delta, CtrlCompleters, TrmtCompleters, CtrlPi used check futility. LookInfo$FutBdryScale = 6 (futility boundary scale hazard ratio scale), TestStat used check efficacy HR used check futility. Notes Statistical Design = Group Sequential Sample Size Re-Estimation: See notes Statistical Design = Group Sequential futility efficacy checks. , Promising Zone Scale = Conditional Power - Estimated, Delta StdError used sample size re-estimation.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"option-1-decision-expected-members-of-the-output-list-1","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 1 (Decision): Expected Members of the Output List","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"Notes Statistical Design = Group Sequential: Decision take care multiple comparison procedures adjustment appropriately. efficacy boundary crossed, return code 0 stands futility final look. Similarly, futility boundary crossed, return code 0 stands efficacy final look. Use functions CyneRgy::GetDecisionString CyneRgy::GetDecision get decision values simple way.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"option-2-teststat-expected-members-of-the-output-list-1","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 2 (TestStat): Expected Members of the Output List","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, TestStat used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, TestStat used check efficacy. LookInfo$FutBdryScale = 1 (futility boundary scale adjusted p-value scale), TestStat used check efficacy futility. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), TestStat used check efficacy Delta used check futility. LookInfo$FutBdryScale = 6 (futility boundary scale hazard ratio scale), TestStat used check efficacy HR used check futility.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"option-3-adjpval-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 3 (AdjPVal): Expected Members of the Output List","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, AdjPVal used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, AdjPVal used check efficacy. LookInfo$FutBdryScale = 1 (futility boundary scale adjusted p-value scale), AdjPVal used check efficacy futility. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), AdjPVal used check efficacy Delta used check futility. LookInfo$FutBdryScale = 6 (futility boundary scale hazard ratio scale), TestStat used check efficacy HR used check futility.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"option-4-rawpval-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable > For Study Objective = Multiple Arm Confirmatory","what":"Option 4 (RawPVal): Expected Members of the Output List","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"Note Statistical Design = Fixed Sample: design futility boundary, RawPVal used check efficacy. Notes Statistical Design = Group Sequential: design futility boundary, RawPVal used check efficacy. LookInfo$FutBdryScale = 1 (futility boundary scale adjusted p-value scale), option used. LookInfo$FutBdryScale = 2 (futility boundary scale Delta scale), RawPVal used check efficacy Delta used check futility. LookInfo$FutBdryScale = 6 (futility boundary scale hazard ratio scale), TestStat used check efficacy HR used check futility. addition, MultAdjMethod = Dunnett’s Single Step, Dunnett’s Step , Dunnett’s Step , TestStat used perform multiplicity adjustment.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"minimal-templates","dir":"Articles","previous_headings":"","what":"Minimal Templates","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"R script contain function ones, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. Detailed templates step--step explanations available : Analyze.TimeToEvent.R 2-Arm Analyze.TimeToEvent.MAMS.R Multiple Arm.","code":""},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-fixed-sample","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)          # This is an example using GetDecisionString and GetDecision.     # Write the actual code here.          # These variables are set because it is a fixed sample design.     nQtyOfLooks  <- 1     nLookIndex   <- 1     nQtyOfEvents <- DesignParam$MaxEvents      TailType     <- DesignParam$TailType          # Create the calendar time in the trial that the patients' event are observed     SimData$TimeOfEvent  <- SimData$ArrivalTime + SimData$SurvivalTime              # Compute the time of analysis using the number of events      SimData              <- SimData[ order( SimData$TimeOfEvent), ]     dTimeOfAnalysis      <- SimData[ nQtyOfEvents, ]$TimeOfEvent          # Add the Observed Time variable      SimData              <- SimData[ SimData$ArrivalTime <= dTimeOfAnalysis ,]   # Exclude any patients that were not enrolled by the time of the analysis     SimData$Event        <- ifelse( SimData$TimeOfEvent > dTimeOfAnalysis, 0, 1 )  # If the event is observed after the analysis it is not observed, e.g., censored      SimData$ObservedTime <- ifelse( SimData$TimeOfEvent > dTimeOfAnalysis, dTimeOfAnalysis - SimData$ArrivalTime, SimData$TimeOfEvent - SimData$ArrivalTime )          # It is a fixed sample design, so no interim look nor futility check.     bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy.     # Usually, bFAEfficacyCheck would be a conditional statement such as 'dPValue <= DesignParam$Alpha'.          strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                bFAEfficacyCondition = bFAEfficacyCheck)      nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )          return( list( Decision = as.integer( nDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-group-sequential","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)          # This is an example using GetDecisionString and GetDecision.     # Write the actual code here.          # These variables are from LookInfo because it is a group sequential design.     nQtyOfLooks          <- LookInfo$NumLooks     nLookIndex           <- LookInfo$CurrLookIndex     nQtyOfPatsInAnalysis <- LookInfo$CumCompleters[ nLookIndex ]     RejType              <- LookInfo$RejType     TailType             <- DesignParam$TailType          # Create the calendar time in the trial that the patients' event are observed     SimData$TimeOfEvent  <- SimData$ArrivalTime + SimData$SurvivalTime              # Compute the time of analysis using the number of events      SimData              <- SimData[ order( SimData$TimeOfEvent), ]     dTimeOfAnalysis      <- SimData[ nQtyOfEvents, ]$TimeOfEvent          # Add the Observed Time variable      SimData              <- SimData[ SimData$ArrivalTime <= dTimeOfAnalysis ,]   # Exclude any patients that were not enrolled by the time of the analysis     SimData$Event        <- ifelse( SimData$TimeOfEvent > dTimeOfAnalysis, 0, 1 )  # If the event is observed after the analysis it is not observed, e.g., censored      SimData$ObservedTime <- ifelse( SimData$TimeOfEvent > dTimeOfAnalysis, dTimeOfAnalysis - SimData$ArrivalTime, SimData$TimeOfEvent - SimData$ArrivalTime )          # It is a group sequential design, so interim looks and futility check are possible.     bIAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the interim look.     bIAFutilityCheck <- FALSE # If TRUE, declares futility at the interim look.     bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the final look.     # Usually, the Check variables would be conditional statements such as 'dPValue <= DesignParam$Alpha'.          strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                bIAEfficacyCondition = bIAEfficacyCheck,                                                bIAFutilityCondition = bIAFutilityCheck,                                                bFAEfficacyCondition = bFAEfficacyCheck )      nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )          return( list ( Decision = as.integer( nDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-fixed-sample-1","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStatistic      <- 0          # Write the actual code here.     # Store the computed test statistic in dTestStatistic.          return( list( TestStat = as.double( dTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-group-sequential-1","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStatistic      <- 0     dDelta              <- 0 # Use if futility boundary scale is Delta or conditional power     dCtrlCompleters     <- 0 # Use if futility boundary scale is conditional power     dTrmtCompleters     <- 0 # Use if futility boundary scale is conditional power     dCtrlPi             <- 0 # Use if futility boundary scale is conditional power     dHR                 <- 0 # Use if futility boundary scale is conditional power scale               # Write the actual code here.     # Store the computed test statistic in dTestStatistic.     # Compute dDelta, dCtrlCompleters, dTrmtCompleters, dCtrlPi if needed.          return( list( TestStat = as.double( dTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta or conditional power                   CtrlCompleters = as.double( dCtrlCompleters ), # Include if futility boundary scale is conditional power                   TrmtCompleters = as.double( dTrmtCompleters ), # Include if futility boundary scale is conditional power                   CtrlPi = as.double( dCtrlPi ), # Include if futility boundary scale is conditional power                   HR = as.double( dHR ), # Include if futility boundary scale is conditional power scale                   ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-group-sequential-with-sample-size-re-estimation","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Two Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Group Sequential with Sample Size Re-Estimation","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     dTestStatistic      <- 0     dDelta              <- 0 # Use if futility boundary scale is Delta or conditional power     dCtrlCompleters     <- 0 # Use if futility boundary scale is conditional power     dTrmtCompleters     <- 0 # Use if futility boundary scale is conditional power     dCtrlPi             <- 0 # Use if futility boundary scale is conditional power     dHR                 <- 0 # Use if futility boundary scale is conditional power scale     dStdError           <- 0 # Use if Promising Zone Scale = Conditional Power - Estimated               # Write the actual code here.     # Store the computed test statistic in dTestStatistic.     # Compute dDelta, dCtrlCompleters, dTrmtCompleters, dCtrlPi if needed.          return( list( TestStat = as.double( dTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta or conditional power                   CtrlCompleters = as.double( dCtrlCompleters ), # Include if futility boundary scale is conditional power                   TrmtCompleters = as.double( dTrmtCompleters ), # Include if futility boundary scale is conditional power                   CtrlPi = as.double( dCtrlPi ), # Include if futility boundary scale is conditional power                   HR = as.double( dHR ), # Include if futility boundary scale is conditional power scale                   StdError = as.double(dStdError ), # Include if Promising Zone Scale = Conditional Power - Estimated                   ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-fixed-sample-2","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vDecision           <- rep( 0, NumTreatments )  # Initializing decision vector to 0          # This is an example using GetDecisionString and GetDecision.     # Write the actual code here.          # These variables are set because it is a fixed sample design.     nQtyOfLooks          <- 1     nLookIndex           <- 1      nQtyOfPatsInAnalysis <- nrow( SimData )     nTailType            <- DesignParam$TailType          for( i in 1:NumTreatments )     {         # It is a fixed sample design, so no interim look nor futility check.         bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy.         # Usually, bFAEfficacyCheck would be a conditional statement such as 'dTValue > dBoundary'.         # This would be different for each treatment arm.              strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                    bFAEfficacyCondition = bFAEfficacyCheck)          nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )         vDecision[ i ] = nDecision     }               return( list( Decision = as.integer( vDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-group-sequential-2","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 1 (Decision)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"PerformDecision <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     library( CyneRgy )     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vDecision           <- rep( 0, NumTreatments )  # Initializing decision vector to 0          # This is an example using GetDecisionString and GetDecision.     # Decision should take care of multiple comparison procedures adjustment appropriately.     # Write the actual code here.          # These variables are from LookInfo because it is a group sequential design.     nQtyOfLooks          <- LookInfo$NumLooks     nLookIndex           <- LookInfo$CurrLookIndex     nQtyOfPatsInAnalysis <- LookInfo$CumCompleters[ nLookIndex ]     RejType              <- LookInfo$RejType     TailType             <- DesignParam$TailType          for( i in 1:NumTreatments )     {         # Write the actual code here.         # It is a group sequential design, so interim looks and futility check are possible.         bIAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the interim look.         bIAFutilityCheck <- FALSE # If TRUE, declares futility at the interim look.         bFAEfficacyCheck <- TRUE # If TRUE, declares efficacy at the final look.         # Usually, the Check variables would be conditional statements such as 'dTValue > dBoundary'.         # This would be different for each treatment arm.              strDecision <- CyneRgy::GetDecisionString( LookInfo, nLookIndex, nQtyOfLooks,                                                    bIAEfficacyCondition = bIAEfficacyCheck,                                                    bIAFutilityCondition = bIAFutilityCheck,                                                    bFAEfficacyCondition = bFAEfficacyCheck )          nDecision <- CyneRgy::GetDecision( strDecision, DesignParam, LookInfo )         vDecision[ i ] = nDecision     }               return( list( Decision = as.integer( vDecision ), ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-fixed-sample-3","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vTestStatistic      <- rep( 0, NumTreatments )  # Initializing test statistic vector to 0             # Write the actual code here.     # Store the computed test statistic for each treatment arm in vTestStatistic.          return( list( TestStat = as.double( vTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-group-sequential-3","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 2 (TestStat)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vTestStatistic      <- rep( 0, NumTreatments )  # Initializing test statistic vector to 0        dDelta              <- 0 # Use if futility boundary scale is Delta     dHR                 <- 0 # Use if futility boundary scale is hazard ratio scale          # Write the actual code here.     # Store the computed test statistic for each treatment arm in vTestStatistic.          return( list( TestStat = as.double( vTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta                   HR = as.double( dHR ), # Include if futility boundary scale is hazard ratio scale                   ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-fixed-sample-4","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 3 (AdjPVal)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vAdjPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0            # Write the actual code here.     # Store the computed adjusted p-value for each treatment arm in vAdjPVal.          return( list( AdjPVal = as.double( vTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-group-sequential-4","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 3 (AdjPVal)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vAdjPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0       dDelta              <- 0 # Use if futility boundary scale is Delta     dHR                 <- 0 # Use if futility boundary scale is hazard ratio scale          # Write the actual code here.     # Store the computed adjusted p-value for each treatment arm in vAdjPVal.          return( list( AdjPVal = as.double( vTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta                   HR = as.double( dHR ), # Include if futility boundary scale is hazard ratio scale                   ErrorCode = as.integer( nError ) ) ) }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-fixed-sample-5","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 4 (RawPVal)","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vRawPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0            # Write the actual code here.     # Store the computed p-value for each treatment arm in vRawPVal.          return( list( RawPVal = as.double( vTestStatistic ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"for-statistical-design-group-sequential-5","dir":"Articles","previous_headings":"Minimal Templates > For Study Objective = Multiple Arm Confirmatory > Minimal Template for Option 4 (RawPVal)","what":"For Statistical Design = Group Sequential","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"","code":"ComputeTestStat <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {     nError              <- 0 # Error handling (no error)     NumTreatments       <- DesignParam$NumTreatments     vRawPVal            <- rep( 0, NumTreatments )  # Initializing p-value vector to 0     dDelta              <- 0 # Use if futility boundary scale is Delta     dHR                 <- 0 # Use if futility boundary scale is hazard ratio scale     vTestStatistic      <- rep( 0, NumTreatments )  # Use if MultAdjMethod is Dunnett’s Single Step, Dunnett’s Step Down, or Dunnett’s Step Up          # Write the actual code here.     # Store the computed p-value for each treatment arm in vRawPVal.          return( list( RawPVal = as.double( vTestStatistic ),                   Delta = as.double( dDelta ), # Include if futility boundary scale is Delta                   HR = as.double( dHR ), # Include if futility boundary scale is hazard ratio scale                   TestStat = as.double( vTestStatistic ), # Include if MultAdjMethod is Dunnett’s Single Step, Dunnett’s Step Down, or Dunnett’s Step Up                   ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointAnalysisTimeToEvent.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Analysis - Time-to-Event Outcome","text":"Explore following examples context: AnalyzeUsingEastLogrankFormula.R AnalyzeUsingHazardRatioLimitsOfCI.R AnalyzeUsingSurvivalPackage.R AnalzyeTTEWithConditinalPowerFutility.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropout.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Integration Point: Dropout","text":"Dropout integration point allows customize behavior dropouts longitudinal study design using custom R script. Instead relying built-default distribution, can implement dropout distributions Poisson Weibull, better suit trial’s requirements.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropout.html","id":"east-horizon-explore","dir":"Articles","previous_headings":"Availability","what":"East Horizon Explore","title":"Integration Point: Dropout","text":"integration point available East Horizon Explore following study objectives endpoint types: Legend","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropout.html","id":"in-east-horizon-explore","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Explore","title":"Integration Point: Dropout","text":"can set dropout function Dropout Distribution Response Card creating editing Input Set. Time--Event outcome Continuous outcome Repeated Measures, Distribution Dropout Rate tab Response Card. Select User Specified-R dropdown Dropout Distribution Distribution field Response Card. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project. visual guide find option, refer screenshots :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropout.html","id":"in-east-horizon-design","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Design","title":"Integration Point: Dropout","text":"can set dropout function Dropout Distribution Response section Input Set created simulation. Create compute first analytical design input set. Navigate Results section simulate analytical design. Navigate new simulation input set created. Select User Specified-R dropdown Dropout Distribution field Response tab. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropout.html","id":"in-east","dir":"Articles","previous_headings":"Instructions","what":"In East","title":"Integration Point: Dropout","text":"can set dropout function navigating Generate Dropout Information task User Defined R Function tab Simulation Input window, including option. Choose appropriate test Design tab. Design Input window, click Include Options button top right corner select Accrual / Dropouts. Accrual / Dropouts tap Design Input window, input values Response Lag Probability Dropout fields. use custom R script, fields blank. Compute scenario using Compute button, save design using Save Workbook button, navigate Simulation Input window clicking Simulate Design button Library. Click Include Options button top right corner Simulation Input window select Accrual / Dropouts User Defined R Function. tab User Defined R Function, list tasks appear. Place cursor File Name field task Generate Dropout Information. Click button Browse… select appropriate R file (filename.r) computer. file contain function(s) written perform various tasks used throughout Project. Specify function name want initialize. copy function’s name R script, click button View. Set required user parameters (variables) needed function using button Add/Edit Variables. Continue setting project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropout.html","id":"endpoint-types","dir":"Articles","previous_headings":"","what":"Endpoint Types","title":"Integration Point: Dropout","text":"input variables, expected output variables, examples, templates integration point depend endpoint type (outcome) using. Refer relevant pages : Continuous (Normal) Outcome Time--Event (Survival) Continuous (Normal) Outcome Repeated Measures Binary Outcome Dual Outcomes (TTE-TTE TTE-Binary)","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutBinary.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Dropout - Binary Outcome","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point, outcome, study objective.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutBinary.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Dropout - Binary Outcome","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutBinary.html","id":"expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Expected Members of the Output List","title":"Integration Point: Dropout - Binary Outcome","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutBinary.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Dropout - Binary Outcome","text":"R script contain function one, name choice. applicable input variables must declared, even used script. Input variables applicable (depending study objective, standard binary outcome vs. Vaccine Efficacy) must declared. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. Detailed templates step--step explanations available : Dropout.BinaryAndContinuous.R 2-Arm Dropout.BinaryAndContinuous.MAMS.R Multiple Arm.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutBinary.html","id":"for-study-objective-two-arm-confirmatory","dir":"Articles","previous_headings":"Minimal Template > For standard binary outcome (Better Response = Larger Value, Test = Difference of Proportions or Custom)","what":"For Study Objective = Two Arm Confirmatory","title":"Integration Point: Dropout - Binary Outcome","text":"","code":"GenCensorInd <- function( NumSub, ProbDrop, UserParam = NULL ) {   nError                <- 0 # Error handling (no error)   vCensoringIndicator   <- rep( 1, NumSub ) # Initializing vector to 1 (all patients are completers)          # Write the actual code here.   # Store the generated censor indicator values in a vector called vCensoringIndicator    return( list( CensorInd = as.integer( vPatientOutcome ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutBinary.html","id":"for-study-objective-multiple-arm-confirmatory","dir":"Articles","previous_headings":"Minimal Template > For standard binary outcome (Better Response = Larger Value, Test = Difference of Proportions or Custom)","what":"For Study Objective = Multiple Arm Confirmatory","title":"Integration Point: Dropout - Binary Outcome","text":"","code":"GenCensorInd <- function( NumSub, NumArm, ProbDrop, TreatmentID, UserParam = NULL ) {   nError                <- 0 # Error handling (no error)   vCensoringIndicator   <- rep( 1, NumSub ) # Initializing vector to 1 (all patients are completers)          # Write the actual code here.   # Store the generated censor indicator values in a vector called vCensoringIndicator    return( list( CensorInd = as.integer( vPatientOutcome ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutBinary.html","id":"for-vaccine-efficacy-better-response-smaller-value-test-1---ratio-of-proportions","dir":"Articles","previous_headings":"Minimal Template","what":"For Vaccine Efficacy (Better Response = Smaller Value, Test = 1 - Ratio of Proportions)","title":"Integration Point: Dropout - Binary Outcome","text":"","code":"GenDropout <- function( NumSub, NumArm, TreatmentID, FollowUpDur, ProbDrop, UserParam = NULL ) {   nError                <- 0 # Error handling (no error)   vDropoutTimes         <- rep( 0, NumSub ) # Initializing vector of dropout times to 0       # Write the actual code here.   # Store the generated dropout times values in a vector called vDropoutTimes    return( list( DropOutTime = as.double( vDropoutTimes ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutBinary.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Dropout - Binary Outcome","text":"Explore following examples context: GenerateCensoringUsingBinomialProportion.R GenerateCensoringMultiArmUsingBinomialProportion.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutContinuous.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Dropout - Continuous Outcome","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point, outcome, study objective.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutContinuous.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Dropout - Continuous Outcome","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutContinuous.html","id":"expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Expected Members of the Output List","title":"Integration Point: Dropout - Continuous Outcome","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutContinuous.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Dropout - Continuous Outcome","text":"R script contain function one, name choice. applicable input variables must declared, even used script. Input variables applicable (depending study objective) must declared. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. Detailed templates step--step explanations available : Dropout.BinaryAndContinuous.R 2-Arm Dropout.BinaryAndContinuous.MAMS.R Multiple Arm.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutContinuous.html","id":"for-study-objective-two-arm-confirmatory","dir":"Articles","previous_headings":"Minimal Template","what":"For Study Objective = Two Arm Confirmatory","title":"Integration Point: Dropout - Continuous Outcome","text":"","code":"GenCensorInd <- function( NumSub, ProbDrop, UserParam = NULL ) {   nError                <- 0 # Error handling (no error)   vCensoringIndicator   <- rep( 1, NumSub ) # Initializing vector to 1 (all patients are completers)          # Write the actual code here.   # Store the generated censor indicator values in a vector called vCensoringIndicator    return( list( CensorInd = as.integer( vPatientOutcome ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutContinuous.html","id":"for-study-objective-multiple-arm-confirmatory","dir":"Articles","previous_headings":"Minimal Template","what":"For Study Objective = Multiple Arm Confirmatory","title":"Integration Point: Dropout - Continuous Outcome","text":"","code":"GenCensorInd <- function( NumSub, NumArm, ProbDrop, TreatmentID, UserParam = NULL ) {   nError                <- 0 # Error handling (no error)   vCensoringIndicator   <- rep( 1, NumSub ) # Initializing vector to 1 (all patients are completers)          # Write the actual code here.   # Store the generated censor indicator values in a vector called vCensoringIndicator    return( list( CensorInd = as.integer( vPatientOutcome ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutContinuous.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Dropout - Continuous Outcome","text":"Explore following examples context: GenerateCensoringUsingBinomialProportion.R GenerateCensoringMultiArmUsingBinomialProportion.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutDual.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Dropout - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point outcome.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutDual.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Dropout - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutDual.html","id":"expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Expected Members of the Output List","title":"Integration Point: Dropout - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutDual.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Dropout - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"R script contain function one, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon.","code":"GenDropTimes <- function( NumSub, NumArm, TreatmentID, DropMethod, NumPrd, PrdTime, DropParam, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)   vDropoutTime      <- rep( Inf, NumSub ) # Initializing dropout times vector to Inf (all patients are completers)        # Write the actual code here.   # Store the generated dropout times in a vector called vDropoutTime    return( list( DropOutTime = as.double( vDropoutTime ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutRepeatedMeasures.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Dropout - Continuous Outcome with Repeated Measures","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point outcome.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutRepeatedMeasures.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Dropout - Continuous Outcome with Repeated Measures","text":"East Horizon expects output specific type. Refer table expected output integration point: output list can take one three forms .","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutRepeatedMeasures.html","id":"option-1-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Option 1: Expected Members of the Output List","title":"Integration Point: Dropout - Continuous Outcome with Repeated Measures","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutRepeatedMeasures.html","id":"option-2-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Option 2: Expected Members of the Output List","title":"Integration Point: Dropout - Continuous Outcome with Repeated Measures","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutRepeatedMeasures.html","id":"option-3-expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Option 3: Expected Members of the Output List","title":"Integration Point: Dropout - Continuous Outcome with Repeated Measures","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutRepeatedMeasures.html","id":"minimal-templates","dir":"Articles","previous_headings":"","what":"Minimal Templates","title":"Integration Point: Dropout - Continuous Outcome with Repeated Measures","text":"R script contain function ones, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. detailed template step--step explanations available : Dropout.RepeatedMeasures.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutRepeatedMeasures.html","id":"minimal-template-for-option-1","dir":"Articles","previous_headings":"Minimal Templates","what":"Minimal Template for Option 1","title":"Integration Point: Dropout - Continuous Outcome with Repeated Measures","text":"","code":"GenDropTimes <- function( NumSub, NumArm, NumVisit, VisitTime, TreatmentID,                           DropMethod, ByTime, DropParamControl, DropParamTrt, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)   vDropoutTime      <- rep( Inf, NumSub ) # Initializing dropout times vector to Inf (all patients are completers)        # Write the actual code here.   # Store the generated dropout times in a vector called vDropoutTime.      return( list( DropOutTime = as.double( vDropoutTime ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutRepeatedMeasures.html","id":"minimal-template-for-option-2","dir":"Articles","previous_headings":"Minimal Templates","what":"Minimal Template for Option 2","title":"Integration Point: Dropout - Continuous Outcome with Repeated Measures","text":"","code":"GenDropVisitID <- function( NumSub, NumArm, NumVisit, VisitTime, TreatmentID,                             DropMethod, ByTime, DropParamControl, DropParamTrt, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)   vDropoutVisitID   <- rep( 1, NumSub ) # Initializing dropout visit IDs vector to 1 (all patients drop out after first visit)        # Write the actual code here.   # Store the generated dropout visit IDs in a vector called vDropoutVisitID.      return( list( DropoutVisitID = as.double( vDropoutVisitID ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutRepeatedMeasures.html","id":"minimal-template-for-option-3","dir":"Articles","previous_headings":"Minimal Templates","what":"Minimal Template for Option 3","title":"Integration Point: Dropout - Continuous Outcome with Repeated Measures","text":"","code":"GenCensorInd <- function( NumSub, NumArm, NumVisit, VisitTime, TreatmentID,                           DropMethod, ByTime, DropParamControl, DropParamTrt, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)   vCensorInd        <- c()   lReturn           <- list()      # Add code to simulate the dropout data as desired.    # Example of how to create the return list with CensorInd1, CensorInd2, ..., CensorIndNumVisit.   # Store the generated censor indicator values in a vector called vCensorInd for each subject.   # Store the response vector in a list called lReturn for each visit.   for(i in 1:NumVisit)   {     strCensorIndName              <- paste0( \"CensorInd\", i ) # CensorInd1, CensorInd2, ..., CensorIndNumVisit     vCensorInd                    <- rep( 1, NumSub ) # Initializing censor array to 1 (all patients are completers)         lReturn[[ strCensorIndName ]] <- as.integer( vCensorInd )   }      lReturn$ErrorCode <- as.integer( nError )   return( lReturn ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutRepeatedMeasures.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Dropout - Continuous Outcome with Repeated Measures","text":"Explore following examples context: GenerateDropoutTimeForRM.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutTimeToEvent.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Dropout - Time-to-Event Outcome","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point outcome.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutTimeToEvent.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Dropout - Time-to-Event Outcome","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutTimeToEvent.html","id":"expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Expected Members of the Output List","title":"Integration Point: Dropout - Time-to-Event Outcome","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutTimeToEvent.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Dropout - Time-to-Event Outcome","text":"R script contain function one, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. detailed template step--step explanations available : Dropout.Survival.R","code":"GenDropTimes <- function( NumSub, NumArm, TreatmentID, DropMethod, NumPrd, PrdTime, DropParam, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)   vDropoutTime      <- rep( Inf, NumSub ) # Initializing dropout times vector to Inf (all patients are completers)        # Write the actual code here.   # Store the generated dropout times in a vector called vDropoutTime    return( list( DropOutTime = as.double( vDropoutTime ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointDropoutTimeToEvent.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Dropout - Time-to-Event Outcome","text":"Explore following examples context: GenerateDropoutTimeForSurvival.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Integration Point: Enrollment","text":"Enrollment integration point allows customize distribution subject arrival times using custom R script. Instead relying default uniform distribution, can implement alternative enrollment patterns Poisson, equidistant, exponential enrollment, among others, better suit trial’s requirements.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"east-horizon-explore","dir":"Articles","previous_headings":"Availability","what":"East Horizon Explore","title":"Integration Point: Enrollment","text":"integration point available East Horizon Explore following study objectives endpoint types:","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"in-east-horizon-explore","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Explore","title":"Integration Point: Enrollment","text":"can set enrollment function Distribution Enrollment Card creating editing Input Set. Select User Specified-R dropdown Distribution field Enrollment Card. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"in-east-horizon-design","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Design","title":"Integration Point: Enrollment","text":"can set enrollment function Distribution Enrollment section Input Set created simulation. Create compute first analytical design input set. Navigate Results section simulate analytical design. Navigate new simulation input set created. Select User Specified-R dropdown Distribution field Enrollment tab. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"in-east","dir":"Articles","previous_headings":"Instructions","what":"In East","title":"Integration Point: Enrollment","text":"can set enrollment function navigating Generate Arrival Times task User Defined R Function tab Simulation Input window, including option. Choose appropriate test Design tab. see Design Input window, compute scenario using Compute button, save design using Save Workbook button, navigate Simulation Input window clicking Simulate Design button Library. Click Include Options button top right corner Simulation Input window select Accrual / Dropouts User Defined R Function. tab User Defined R Function, list tasks appear. Place cursor File Name field task Generate Arrival Times. Click button Browse… select appropriate R file (filename.r) computer. file contain function(s) written perform various tasks used throughout Project. Specify function name want initialize. copy function’s name R script, click button View. Set required user parameters (variables) needed function using button Add/Edit Variables. Continue setting project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Enrollment","text":"creating custom R script, can optionally use certain variables provided East Horizon’s East’s engine . variables automatically available need set user, except UserParam variable. Refer table variable available integration point.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Enrollment","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Expected Members of the Output List","title":"Integration Point: Enrollment","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Enrollment","text":"R script contain function one, name choice. applicable input variables must declared, even used script. Input variables applicable (depending enrollment type) must declared. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters interface. Type needs declared default value. detailed template step--step explanations available : GenerateArrivalTimes.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"if-type-0-global-enrollment","dir":"Articles","previous_headings":"Minimal Template","what":"If Type = 0 (Global Enrollment)","title":"Integration Point: Enrollment","text":"","code":"GenArrTimes <- function( NumSub, Type = 0, NumPrd, PrdStart, AccrRate, UserParam = NULL ) {   nError                <- 0 # Error handling (no error)   vPatientArrivalTime   <- rep( 0, NumSub ) # Initializing arrival time array to 0      # Write the actual code here.   # Store the generated arrival times in a vector called vPatientArrivalTime.    return( list( ArrivalTime = as.double( vPatientArrivalTime ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"if-type-1-regional-enrollment","dir":"Articles","previous_headings":"Minimal Template","what":"If Type = 1 (Regional Enrollment)","title":"Integration Point: Enrollment","text":"","code":"GenArrTimes <- function( NumSub, Type = 1, RegionName, EnrollmentCapPcnt, AccrRate, UserParam = NULL ) {   nError                <- 0 # Error handling (no error)   vPatientArrivalTime   <- rep( 0, NumSub ) # Initializing arrival time array to 0      # Write the actual code here.   # Store the generated arrival times in a vector called vPatientArrivalTime.    return( list( ArrivalTime = as.double( vPatientArrivalTime ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointEnrollment.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Integration Point: Enrollment","text":"Explore following example context: GeneratePoissonArrival.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointInitialization.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Integration Point: Initialization","text":"Initialization integration point allows specify optional function run user-defined functions simulations. function can serve various purposes, : Setting seed reproducibility R environment. Loading required R packages libraries. Setting global variables. Setting working directory. Sourcing additional file. Performing initial setup tasks.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointInitialization.html","id":"east-horizon-explore","dir":"Articles","previous_headings":"Availability","what":"East Horizon Explore","title":"Integration Point: Initialization","text":"integration point available East Horizon Explore following study objectives endpoint types: Legend","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointInitialization.html","id":"in-east-horizon-explore-and-design","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon (Explore and Design)","title":"Integration Point: Initialization","text":"can set initialization function creating new project navigating Initialize R Simulations option Plan section. Choose Initialize R Simulations Plan section setting new Project. Turn switch enable feature. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Specify function name want initialize. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointInitialization.html","id":"in-east","dir":"Articles","previous_headings":"Instructions","what":"In East","title":"Integration Point: Initialization","text":"can set initialization function navigating Initialize R Environment task User Defined R Function tab Simulation Input window, including option. tests, option available Treatment Selection tab. Choose appropriate test Design tab. see Design Input window, compute scenario using Compute button, save design using Save Workbook button, navigate Simulation Input window clicking Simulate Design button Library. Click Include Options button top right corner Simulation Input window select Accrual / Dropouts User Defined R Function. tab User Defined R Function, list tasks appear. Place cursor File Name field task Initialize R Environment. Click button Browse… select appropriate R file (filename.r) computer. file contain function(s) written perform various tasks used throughout Project. Specify function name want initialize. copy function’s name R script, click button View. Set required user parameters (variables) needed function using button Add/Edit Variables. Continue setting project. visual guide find option, refer screenshot :  Multiple Looks - Combining P-Values (MAMS) tests, option available checking box Use R Treatment Selection Treatment Selection tab Simulation Input window. Refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointInitialization.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Initialization","text":"creating custom R script, can optionally use certain variables provided East Horizon’s East’s engine . variables automatically available need set user, except UserParam variable. Refer table variable available integration point.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointInitialization.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Initialization","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointInitialization.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Initialization","text":"R script contain function one, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters interface. detailed template step--step explanations available : Initialize.R","code":"Init <- function( Seed = NULL, UserParam = NULL ) {   # Do something, for example set the seed   set.seed( 42 )   # If you want the user to set the seed using East Horizon's or East's interface, you could use set.seed( UserParam$seed )       # Error handling (no error)   nError <- 0    return( as.integer( nError ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointInitialization.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Initialization","text":"Used load libraries following examples: LibraryMASS.R LibraryNIme.R LibraryRM.R Librarysurvival.R Initialize.R LoadRandomizeR.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Integration Point: Multiplicity Adjustment","text":"Multiplicity Adjustment integration point allows customize multiple hypotheses adjusted Type error control, instead relying East Horizon’s default Fixed Sequence Fallback methods. example, implement alternative strategies Bonferroni, Holm, Hochberg, graphical approaches.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"east-horizon-explore","dir":"Articles","previous_headings":"Availability","what":"East Horizon Explore","title":"Integration Point: Multiplicity Adjustment","text":"integration point available East Horizon Explore following study objectives endpoint types: Legend","code":""},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"in-east-horizon-explore","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Explore","title":"Integration Point: Multiplicity Adjustment","text":"can set randomization function Multiplicity Adjustment Design Card creating editing Input Set. Select User Specified-R dropdown Multiplicity Adjustment field Design Card. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project specifying scenarios patient Response, Enrollments, etc. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Multiplicity Adjustment","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point, outcome, study objective. Note: “Endpoint 1” used sample endpoint name. actual endpoint name specified user.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"variables-of-simdata","dir":"Articles","previous_headings":"Input Variables","what":"Variables of SimData","title":"Integration Point: Multiplicity Adjustment","text":"Click explore variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"variables-of-designparam","dir":"Articles","previous_headings":"Input Variables","what":"Variables of DesignParam","title":"Integration Point: Multiplicity Adjustment","text":"Click explore variables DesignParam.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"variables-of-lookinfo","dir":"Articles","previous_headings":"Input Variables","what":"Variables of LookInfo","title":"Integration Point: Multiplicity Adjustment","text":"Click explore variables LookInfo.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Multiplicity Adjustment","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Multiplicity Adjustment","text":"R script contain function one, name choice. input variables must declared, even used script. recommend always declaring UserParam OutList default NULL value function arguments, ensure function work regardless whether user specified custom parameters interface whether OutList used. detailed template step--step explanations available : Decision.DEP.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"for-statistical-design-fixed-sample","dir":"Articles","previous_headings":"Minimal Template","what":"For Statistical Design = Fixed Sample","title":"Integration Point: Multiplicity Adjustment","text":"","code":"PerformMultAdj <- function( SimData, DesignParam, TestStat, OutList = NULL, UserParam = NULL ) {     nError  = 0 # Error handling (no error)          Decision = list()     Decision[ EndpointName[[ 1 ]]] = 0 # Initialize decision for endpoint 1     Decision[ EndpointName[[ 2 ]]] = 0 # Initialize decision for endpoint 2          # Write the actual code here.          return( list( Decision = as.list( Decision ), ErrorCode = as.integer( nError ))) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"for-statistical-design-group-sequential","dir":"Articles","previous_headings":"Minimal Template","what":"For Statistical Design = Group Sequential","title":"Integration Point: Multiplicity Adjustment","text":"","code":"PerformMultAdj <- function( SimData, DesignParam, LookInfo, TestStat, OutList = NULL, UserParam = NULL ) {     nError  = 0 # Error handling (no error)          Decision = list()     Decision[ EndpointName[[ 1 ]]] = 0 # Initialize decision for endpoint 1     Decision[ EndpointName[[ 2 ]]] = 0 # Initialize decision for endpoint 2          OutList = list()     OutList$OutVal = 0 # This value will be passed to the next look          # Write the actual code here.          return( list( Decision = as.list( Decision ), OutList = as.list( OutList ), ErrorCode = as.integer( nError ))) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointMultiplicityAdjustment.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Multiplicity Adjustment","text":"Explore following examples context: GetDEPDecisions.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointRandomization.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Integration Point: Randomization","text":"Randomization integration point allows incorporate custom randomization methods Cytel products. specifying function, can control subjects assigned designated arms based specific requirements, replacing default complete randomization approach. example, can implement advanced randomization techniques block randomization, stratified randomization, cluster randomization.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointRandomization.html","id":"east-horizon-explore","dir":"Articles","previous_headings":"Availability","what":"East Horizon Explore","title":"Integration Point: Randomization","text":"integration point available East Horizon Explore following study objective endpoint type combinations: Legend","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointRandomization.html","id":"in-east-horizon-explore","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Explore","title":"Integration Point: Randomization","text":"can set randomization function Randomization Method Design Card creating editing Input Set. Select User Specified-R dropdown Randomization Method field Design Card. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project specifying scenarios patient Response, Enrollments, etc. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointRandomization.html","id":"in-east-horizon-design","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Design","title":"Integration Point: Randomization","text":"can set randomization function Randomization Method Design section Input Set created simulation. Create compute first analytical design input set. Navigate Results section simulate analytical design. Navigate new simulation input set created. Select User Specified-R dropdown Randomization Method field Design tab. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointRandomization.html","id":"in-east","dir":"Articles","previous_headings":"Instructions","what":"In East","title":"Integration Point: Randomization","text":"can set randomization function East navigating Randomize Subjects task User Defined R Function tab Simulation Input window, including option. Choose appropriate test Design tab. see Design Input window, compute scenario using Compute button, save design using Save Workbook button, navigate Simulation Input window clicking Simulate Design button Library. Click Include Options button top right corner Simulation Input window select Accrual / Dropouts User Defined R Function. tab User Defined R Function, list tasks appear. Place cursor File Name field task Randomize Subjects. Click button Browse… select appropriate R file (filename.r) computer. file contain function(s) written perform various tasks used throughout Project. Specify function name want initialize. copy function’s name R script, click button View. Set required user parameters (variables) needed function using button Add/Edit Variables. Continue setting project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointRandomization.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Randomization","text":"creating custom R script, can optionally use certain variables provided East Horizon’s East’s engine . variables automatically available need set user, except UserParam variable. Refer table variable available integration point.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointRandomization.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Randomization","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointRandomization.html","id":"expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Expected Members of the Output List","title":"Integration Point: Randomization","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointRandomization.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Randomization","text":"R script contain function one, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters interface. detailed template step--step explanations available : Randomization.R","code":"Randomize <- function( NumSub, NumArms, AllocRatio, UserParam = NULL ) {   nError                <- 0 # Error handling (no error)   vTreatmentArmIndex    <- rep( 0, NumSub ) # Initializing response array to 0: in that case all patients are in the control group      # Write the actual code here.   # Store the generated allocation indices in a vector called vTreatmentArmIndex.    return( list( TreatmentID = as.Integer( vTreatmentArmIndex ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointRandomization.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Randomization","text":"Explore following examples context: RandomizationSubjectsUsingUniformDistribution.R RandomizationSubjectsUsingSampleFunctionInR.R BlockRandomizationSubjectsUsingRPackage.R RandomizeSubjectsAcrossMultipleArms.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponse.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Integration Point: Response","text":"Response integration point allows incorporate custom patient outcome simulation capabilities East Horizon. specifying function, can simulate patient outcomes according requirements, replacing native generation method patient response. example, can: Simulate patient data using mixture distribution proportion patients respond treatment. Gamma distribution continuous outcomes, Beta distribution binary outcomes, Weibull distribution time--event outcomes.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponse.html","id":"east-horizon-explore","dir":"Articles","previous_headings":"Availability","what":"East Horizon Explore","title":"Integration Point: Response","text":"integration point available East Horizon Explore following study objectives endpoint types: Legend","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponse.html","id":"in-east-horizon-explore","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Explore","title":"Integration Point: Response","text":"can set response function Distribution Response Card creating editing Input Set. Select User Specified-R dropdown Distribution field Response Card. Dual Endpoints, Response Generation Method. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponse.html","id":"in-east-horizon-design","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Design","title":"Integration Point: Response","text":"can set response function Distribution Response section Input Set created simulation. Create compute first analytical design input set. Navigate Results section simulate analytical design. Navigate new simulation input set created. Select User Specified-R dropdown Distribution field Response tab. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponse.html","id":"in-east","dir":"Articles","previous_headings":"Instructions","what":"In East","title":"Integration Point: Response","text":"can set response function navigating Generate Response task User Defined R Function tab Simulation Input window, including option. Choose appropriate test Design tab. see Design Input window, compute scenario using Compute button, save design using Save Workbook button, navigate Simulation Input window clicking Simulate Design button Library. Click Include Options button top right corner Simulation Input window select Accrual / Dropouts User Defined R Function. tab User Defined R Function, list tasks appear. Place cursor File Name field task Generate Response. Click button Browse… select appropriate R file (filename.r) computer. file contain function(s) written perform various tasks used throughout Project. Specify function name want initialize. copy function’s name R script, click button View. Set required user parameters (variables) needed function using button Add/Edit Variables. Continue setting project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponse.html","id":"endpoint-types","dir":"Articles","previous_headings":"","what":"Endpoint Types","title":"Integration Point: Response","text":"input variables, expected output variables, examples, templates integration point depend endpoint type (outcome) using. Refer relevant pages : Continuous (Normal) Outcome Time--Event (Survival) Outcome Continuous (Normal) Outcome Repeated Measures Binary Outcome Dual Outcomes (TTE-TTE TTE-Binary)","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseBinary.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Response - Binary Outcome","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point outcome.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseBinary.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Response - Binary Outcome","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseBinary.html","id":"expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Expected Members of the Output List","title":"Integration Point: Response - Binary Outcome","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseBinary.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Response - Binary Outcome","text":"R script contain function one, name choice. applicable input variables must declared, even used script. Input variables applicable (depending standard binary outcome vs. Vaccine Efficacy) must declared. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. Vaccine Efficacy, OneMinusROP must declared default value NULL. detailed template step--step explanations available : SimulatePatientOutcome.Binary.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseBinary.html","id":"for-standard-binary-outcome-better-response-larger-value-test-difference-of-proportions-or-custom","dir":"Articles","previous_headings":"Minimal Template","what":"For standard binary outcome (Better Response = Larger Value, Test = Difference of Proportions or Custom)","title":"Integration Point: Response - Binary Outcome","text":"","code":"GenerateResponse <- function( NumSub, NumArm, TreatmentID, PropResp, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)   vPatientOutcome   <- rep( 0, NumSub ) # Initializing response array to 0        # Write the actual code here.   # Store the generated binary response values in a vector called vPatientOutcome.    return( list( Response = as.double( vPatientOutcome ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseBinary.html","id":"for-vaccine-efficacy-better-response-smaller-value-test-1---ratio-of-proportions","dir":"Articles","previous_headings":"Minimal Template","what":"For Vaccine Efficacy (Better Response = Smaller Value, Test = 1 - Ratio of Proportions)","title":"Integration Point: Response - Binary Outcome","text":"","code":"GenerateResponse <- function( NumSub, NumArm, TreatmentID, FollowUpDur, PropResp, OneMinusROP = NULL, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)   vPatientOutcome   <- rep( 0, NumSub ) # Initializing response array to 0        # Write the actual code here.   # Store the generated binary response values in a vector called vPatientOutcome.    return( list( Response = as.double( vPatientOutcome ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseBinary.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Response - Binary Outcome","text":"Explore following examples context: SimulatePatientOutcomePercentAtZero.Binary.R SimulatePatientOutcomePercentAtZeroBetaDist.Binary.R SimulatePatientOutcomeMultiArmPercentAtZero.Binary.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseContinuous.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Response - Continuous Outcome","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point outcome.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseContinuous.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Response - Continuous Outcome","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseContinuous.html","id":"expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Expected Members of the Output List","title":"Integration Point: Response - Continuous Outcome","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseContinuous.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Response - Continuous Outcome","text":"R script contain function one, name choice. applicable input variables must declared, even used script. Input variables applicable (depending study objective) must declared. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. Detailed templates step--step explanations available : SimulatePatientOutcome.Continuous.R 2-Arm SimulatePatientOutcome.Continuous.MAMS.R Multiple Arm.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseContinuous.html","id":"for-study-objective-two-arm-confirmatory","dir":"Articles","previous_headings":"Minimal Template","what":"For Study Objective = Two Arm Confirmatory","title":"Integration Point: Response - Continuous Outcome","text":"","code":"GenerateResponse <- function( NumSub, TreatmentID, Mean, StdDev, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)   vPatientOutcome   <- rep( 0, NumSub ) # Initializing response array to 0        # Write the actual code here.   # Store the generated continuous response values in a vector called vPatientOutcome.    return( list( Response = as.double( vPatientOutcome ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseContinuous.html","id":"for-study-objective-multiple-arm-confirmatory","dir":"Articles","previous_headings":"Minimal Template","what":"For Study Objective = Multiple Arm Confirmatory","title":"Integration Point: Response - Continuous Outcome","text":"","code":"GenerateResponse <- function( NumSub, NumArms, TreatmentID, Mean, StdDev, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)   vPatientOutcome   <- rep( 0, NumSub ) # Initializing response array to 0        # Write the actual code here.   # Store the generated continuous response values in a vector called vPatientOutcome.    return( list( Response = as.double( vPatientOutcome ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseContinuous.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Response - Continuous Outcome","text":"Explore following examples context: SimulatePatientOutcomePercentAtZero.R SimulatePatientOutcomePercentAtZeroBetaDist.R SimulatePatientOutcomeCHU9.R SimulatePatientOutcomeCHU9V2.R SimulatePatientOutcomeMultiArmPercentAtZero.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseDual.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Response - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point endpoint. Note: “Endpoint 1” used sample endpoint name. actual endpoint name specified user.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseDual.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Response - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseDual.html","id":"expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Expected Members of the Output List","title":"Integration Point: Response - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseDual.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Response - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"R script contain function one, name choice. applicable input variables must declared, even used script. Input variables applicable (depending TTE-TTE vs. TTE-Binary) must declared. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. detailed template step--step explanations available : SimulatePatientOutcome.DEP.R.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseDual.html","id":"for-dual-endpoint-tte-tte","dir":"Articles","previous_headings":"Minimal Template","what":"For Dual Endpoint = TTE-TTE","title":"Integration Point: Response - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"","code":"GenerateResponse <- function( NumSub, NumArm, TreatmentID, EndpointType, EndpointName,                               SurvMethod, NumPrd, PrdTime, SurvParam, Correlation, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)      Response          <- list()   Response[[EndpointName[[1]]]] <- rep( 0, NumSub ) # Initializing survival times array of the first endpoint to 0   Response[[EndpointName[[2]]]] <- rep( 0, NumSub ) # Initializing survival times array of the second endpoint to 0      # Write the actual code here.   # Store the generated survival times values in each array of the list Response.    return( list( Response = as.list( vResponse ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseDual.html","id":"for-dual-endpoint-tte-binary","dir":"Articles","previous_headings":"Minimal Template","what":"For Dual Endpoint = TTE-Binary","title":"Integration Point: Response - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"","code":"GenerateResponse <- function( NumSub, NumArm, TreatmentID, EndpointType, EndpointName,                               SurvMethod, NumPrd, PrdTime, SurvParam, PropResp, Correlation, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)      Response          <- list()   Response[[EndpointName[[1]]]] <- rep( 0, NumSub ) # Initializing survival times array of the first endpoint to 0   Response[[EndpointName[[2]]]] <- rep( 0, NumSub ) # Initializing survival times array of the second endpoint to 0      # Write the actual code here.   # Store the generated survival times values in each array of the list Response.    return( list( Response = as.list( vResponse ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseDual.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Response - Dual Endpoints (TTE-TTE or TTE-Binary)","text":"Explore following examples context: SimulatePatientOutcomeDEPSurvSurvSingleHazardPiece.R SimulatePatientOutcomeDEPSurvBinSingleHazardPiece.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseRepeatedMeasures.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Response - Continuous Outcome with Repeated Measures","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point outcome.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseRepeatedMeasures.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Response - Continuous Outcome with Repeated Measures","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseRepeatedMeasures.html","id":"expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Expected Members of the Output List","title":"Integration Point: Response - Continuous Outcome with Repeated Measures","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseRepeatedMeasures.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Response - Continuous Outcome with Repeated Measures","text":"R script contain function one, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. detailed template step--step explanations available : SimulatePatientOutcome.RepeatedMeasures.R","code":"GenerateResponse <- function( NumSub, NumVisit, TreatmentID, Inputmethod, VisitTime,                                MeanControl, MeanTrt, StdDevControl, StdDevTrt, CorrMat, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)   vOutResponse      <- c()   lReturn           <- list()      # Add code to simulate the patient data as desired.     # Example of how to create the return list with Response1, Response2, ..., ResponseNumVisit.   # Store the generated continuous response values in a vector called vOutResponse for each subject.   # Store the response vector in a list called lReturn for each visit.   for(i in 1:NumVisit)   {       strVisitName              <- paste0( \"Response\", i ) # Response1, Response2, ..., ResponseNumVisit       vOutResponse              <- rep( 0, NumSub )  # Initializing response array to 0        lReturn[[ strVisitName ]] <- as.double( vOutResponse )   }        lReturn$ErrorCode <- as.integer( nError )   return( lReturn ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseRepeatedMeasures.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Integration Point: Response - Continuous Outcome with Repeated Measures","text":"Explore following example context: GenerateResponseDiffOfMeansRepeatedMeasures.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseTimeToEvent.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Response - Time-to-Event Outcome","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point outcome.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseTimeToEvent.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Response - Time-to-Event Outcome","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseTimeToEvent.html","id":"expected-members-of-the-output-list","dir":"Articles","previous_headings":"Expected Output Variable","what":"Expected Members of the Output List","title":"Integration Point: Response - Time-to-Event Outcome","text":"Note: Additional custom variables can included members output list. outputs automatically available input variables analysis treatment selection endpoints SimData variable described : Variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseTimeToEvent.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Response - Time-to-Event Outcome","text":"R script contain function one, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters East Horizon. detailed template step--step explanations available : SimulatePatientOutcome.TimeToEvent.R","code":"GenerateResponse <- function( NumSub, NumArm, TreatmentID, SurvMethod, NumPrd, PrdTime, SurvParam, UserParam = NULL ) {   nError            <- 0 # Error handling (no error)   vSurvTime         <- rep( 0, NumSub ) # Initializing survival times array to 0          # Write the actual code here.   # Store the generated survival time values in a vector called vSurvTime.    return( list( SurvivalTime = as.double( vSurvTime ), ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointResponseTimeToEvent.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Response - Time-to-Event Outcome","text":"Explore following examples context: SimulatePatientSurvivalWeibull.R SimulatePatientSurvivalMixtureExponentials.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointTreatmentSelection.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Integration Point: Treatment Selection","text":"Treatment Selection integration point allows customize selection arms carry forward interim analysis using custom R script. Instead relying limited settings (rules) East East Horizon, selecting fixed number top treatments applying threshold, can implement entirely alternative methods better suit trial’s requirements. example, use Bayesian rules.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointTreatmentSelection.html","id":"east-horizon-explore","dir":"Articles","previous_headings":"Availability","what":"East Horizon Explore","title":"Integration Point: Treatment Selection","text":"integration point available East Horizon Explore following study objectives endpoint types: Legend","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointTreatmentSelection.html","id":"in-east-horizon-explore","dir":"Articles","previous_headings":"Instructions","what":"In East Horizon Explore","title":"Integration Point: Treatment Selection","text":"can set treatment selection function Based Treatment Selection tab Design Card creating editing Input Set. statistical design must Group Sequential Treatment Selection. Design Card, select Group Sequential Treatment Selection Statistical Design. Navigate Treatment Selection tab. Select User Specified-R dropdown Based field. Browse select appropriate R file (filename.r) computer, use built-R Code Assistant create one. file contain function(s) written perform various tasks used throughout Project. Choose appropriate function name. expected function displaying, check R code errors. Set required user parameters (variables) needed function using + Add Variables. Continue creating project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointTreatmentSelection.html","id":"in-east","dir":"Articles","previous_headings":"Instructions","what":"In East","title":"Integration Point: Treatment Selection","text":"can set treatment selection function East navigating Use R Treatment Selection setting Treatment Selection tab Simulation Input window. Choose appropriate test Design tab. Simulation Input window, navigate tab Treatment Selection select Use R Treatment Selection. list tasks appear. Place cursor File Name field task Treatment Selection. Click button Browse… select appropriate R file (filename.r) computer. file contain function(s) written perform various tasks used throughout Project. Specify function name want initialize. copy function’s name R script, click button View. Set required user parameters (variables) needed function using button Add/Edit Variables. Continue setting project. visual guide find option, refer screenshot :","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointTreatmentSelection.html","id":"input-variables","dir":"Articles","previous_headings":"","what":"Input Variables","title":"Integration Point: Treatment Selection","text":"creating custom R script, can optionally use specific variables provided East Horizon’s engine . variables automatically available need set user, except UserParam variable. Refer table variables available integration point, outcome, study objective.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointTreatmentSelection.html","id":"variables-of-simdata","dir":"Articles","previous_headings":"Input Variables","what":"Variables of SimData","title":"Integration Point: Treatment Selection","text":"Click explore variables SimData.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointTreatmentSelection.html","id":"variables-of-designparam","dir":"Articles","previous_headings":"Input Variables","what":"Variables of DesignParam","title":"Integration Point: Treatment Selection","text":"Click explore variables DesignParam.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointTreatmentSelection.html","id":"variables-of-lookinfo","dir":"Articles","previous_headings":"Input Variables","what":"Variables of LookInfo","title":"Integration Point: Treatment Selection","text":"Click explore variables LookInfo.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointTreatmentSelection.html","id":"expected-output-variable","dir":"Articles","previous_headings":"","what":"Expected Output Variable","title":"Integration Point: Treatment Selection","text":"East Horizon expects output specific type. Refer table expected output integration point:","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointTreatmentSelection.html","id":"minimal-template","dir":"Articles","previous_headings":"","what":"Minimal Template","title":"Integration Point: Treatment Selection","text":"R script contain function one, name choice. input variables must declared, even used script. recommend always declaring UserParam default NULL value function arguments, ensure function work regardless whether user specified custom parameters interface. detailed template step--step explanations available : TreatmentSelection.R","code":"SelectTreatment <- function( SimData, DesignParam, LookInfo = NULL, UserParam = NULL ) {   nError                <- 0 # Error handling (no error)      # Example   vSelectedTreatments   <- c( 1, 2 )  # Experimental 1 and 2 are carried forward   vAllocationRatio      <- c( 1, 2 )  # Experimental 2 will receive twice as many as exp 1 or control      # Write the actual code here.   # Store the selected treatments in a vector called vSelectedTreatments.   # Store the allocation ratios in a vector called vAllocationRatio.    return( list( TreatmentID = as.integer( vSelectedTreatments ),                 AllocRatio = as.double( vAllocationRatio ),                 ErrorCode = as.integer( nError ) ) ) }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/IntegrationPointTreatmentSelection.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Integration Point: Treatment Selection","text":"Explore following examples context: SelectExpThatAreBetterThanCtrl.R SelectExpUsingBayesianRule.R SelectExpWithPValueLessThanSpecified.R SelectSpecifiedNumberOfExpWithHighestResponses.R","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultiArmAnalysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Multiple Arm, Analysis","text":"following examples illustrate integrate new analysis capabilities East Horizon using R functions context multi-arm clinical trials. example demonstrates different type statistical endpoint (continuous, time--event, binary), using standard R functions Bonferroni adjustment handle multiple comparisons. R directory example find following R files: AnalyzeMultiArmUsingTTestBonferroni.R - Performs pairwise t-tests continuous endpoints Bonferroni adjustment. AnalyzeMultiArmUsingPropTestBonferroni.R - Performs proportion tests binary endpoints Bonferroni adjustment.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultiArmAnalysis.html","id":"example-1---using-the-t-test-function-with-bonferroni-adjustment-continuous-outcome","dir":"Articles","previous_headings":"","what":"Example 1 - Using the t.test() Function with Bonferroni Adjustment (Continuous Outcome)","title":"Multiple Arm, Analysis","text":"example related R file: AnalyzeMultiArmUsingTTestBonferroni.R example uses R’s built-t.test() function compare continuous outcomes treatment arm control arm. function computes individual p-values comparison, applies Bonferroni adjustment control family-wise error rate, checks whether adjusted p-values cross efficacy boundaries defined East Horizon. interim final analysis, active arms tested (based IsArmPresent). analysis compatible fixed group sequential designs. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultiArmAnalysis.html","id":"example-2---using-the-prop-test-function-with-bonferroni-adjustment-binary-outcome","dir":"Articles","previous_headings":"","what":"Example 2 - Using the prop.test() Function with Bonferroni Adjustment (Binary Outcome)","title":"Multiple Arm, Analysis","text":"example related R file: AnalyzeMultiArmUsingPropTestBonferroni.R example analyzes binary outcomes using R’s base prop.test() function. test compares proportion responders treatment arm control arm, computes p-values test, applies Bonferroni correction account multiple arms. Adjusted p-values compared efficacy boundaries decide whether arm demonstrates statistically significant treatment effect. analysis dynamically accounts dropped arms adapts fixed group sequential designs. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultiArmPatientDropout.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Multiple Arm, Single Endpoint - Patient Dropout","text":"multi-arm studies, dropout rates often differ across treatment groups due varying efficacy, tolerability, burden treatment. Modeling differences essential accurate trial simulation, dropout can impact power interpretation results. following examples, demonstrate integrate custom dropout distribution East Horizon R integration. focus two common approaches modeling dropout: Armwise continuous/binary dropout using dropout probabilities identify completers non-completers. R directory example find following R files: GenerateCensoringMultiArmUsingBinomialProportion.R - R function named GenerateCensoringMultiArmUsingBinomialProportion file used perform multiple arm dropout continuous binary outcome described Example 1 .","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultiArmPatientDropout.html","id":"example-1---dropout-using-binomial-proportion-continuous-or-binary-outcome","dir":"Articles","previous_headings":"","what":"Example 1 - Dropout Using Binomial Proportion (Continuous or Binary Outcome)","title":"Multiple Arm, Single Endpoint - Patient Dropout","text":"example related R file: GenerateCensoringMultiArmUsingBinomialProportion.R R function GenerateCensoringMultiArmUsingBinomialProportion generates censoring indicator (CensorInd) multi-arm trial designs, arm can dropout probability. allows users simulate realistic scenarios patients different treatment arms may discontinue participation different rates (e.g., due safety tolerability differences). Dropout modeled using armwise dropout probabilities (ProbDrop), subject’s completion status determined binomial draw based assigned arm. resulting binary vector indicates whether subject completed study (1) dropped (0). function use user-defined parameters, instead uses parameters specified East Horizon. Refer table details. Steps: patient, identify assigned arm using TreatmentID. Retrieve arm-specific dropout probability: pd = ProbDrop[ armIndex ]. Draw random sample Bernoulli distribution p=1−pdp = 1 - pd (completion probability). 1 indicates patient completes trial (drop ). 0 indicates patient drops (non-completer). figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultiArmPatientSimulation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Multiple Arm, Patient Simulation","text":"following examples illustrate integrate new patient outcome simulation (response) capabilities East Horizon using R functions context multi-arm clinical trials. example demonstrates different type statistical endpoint (continuous, time--event, binary). R directory example find following R files: SimulatePatientOutcomeMultiArmPercentAtZero.R - Simulates continuous outcomes mixture distribution proportion patients response. SimulatePatientOutcomeMultiArmPercentAtZero.Binary.R - Simulates binary outcomes mixture distribution proportion patients response.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultiArmPatientSimulation.html","id":"example-1---simulation-of-continuous-outcomes-with-non-responders","dir":"Articles","previous_headings":"","what":"Example 1 - Simulation of Continuous Outcomes with Non-Responders","title":"Multiple Arm, Patient Simulation","text":"example related R file: SimulatePatientOutcomeMultiArmPercentAtZero.R example, patient’s outcome represents change baseline. However, patients expected show improvement (non-responders), leading outcome zero. proportion patients can vary across treatment arms (e.g., 20% 40% based prior data). function SimulatePatientOutcomeMultiArmPercentAtZero extends two-arm approach three arms (two treatment arms), simulating patient’s outcome according assigned treatment. arm, function uses probability zero outcome determine whether patient non-responder; responders outcome simulated normal distribution arm-specific mean standard deviation. Note: example extended number treatment arms adding user parameters dProbOfZeroOutcomeExp3, dProbOfZeroOutcomeExp4, etc. Refer table definitions user-defined parameters used example. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultiArmPatientSimulation.html","id":"example-2---simulation-of-binary-outcomes-with-treatment-resistance","dir":"Articles","previous_headings":"","what":"Example 2 - Simulation of Binary Outcomes with Treatment Resistance","title":"Multiple Arm, Patient Simulation","text":"example related R file: SimulatePatientOutcomeMultiArmPercentAtZero.Binary.R example, patient outcomes binary, 0 represents treatment failure (non-response), 1 indicates successful treatment response. patients, however, treatment-resistant, meaning respond treatment thus always yield outcome 0. proportion resistant patients can differ treatment arms. R function SimulatePatientOutcomeMultiArmPercentAtZero.Binary extends two-arm approach three arms (two treatment arms), arm probability treatment resistance. simulated patient, function first determines whether treatment-resistant , , simulates binary response using arm-specific probability success. Note: example extended number treatment arms adding user parameters dProbOfTreatmentResistantExp3, dProbOfTreatmentResistantExp4, etc. Refer table definitions user-defined parameters used example. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultipleEndpointsWithCovariates.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Multiple Endpoints With Covariates and Stratified Randomization","text":"following examples illustrate incorporate new patient outcome simulation (Response) analysis (Design) capabilities East Horizon using R functions context two-arm trial. example features trial design consisting standard--care control arm experimental treatment arm, three independent patient outcomes modeled continuous data. Two examples include two binary covariates, one also applies stratified randomization based covariates. designs include single final analysis. example without covariates, response data analyzed using t-test. contrast, two examples employ Analysis covariance (ANCOVA) account covariate effects. CyneRgy installed, can load example RStudio following command: open corresponding RStudio project. RStudio Project File: MultipleEndpointsWithCovariates.Rproj R directory example, find following R files: SimulateMultipleOutcomes.R - Provides example R function simulate three independent normally distributed outcomes given number subject. Note example can extended number endpoints. SimulateMultipleOutcomesCovariates.R - R function simulates three independent normally distributed outcomes two binary covariates. function extensible number endpoints covariates. SimulateMultipleOutcomesCovariatesStratRandomization.R - Similar previous function, version explicitly incorporates stratified randomization based two binary covariates. AnalyzeMultipleOutcomes.R - files provides example R function perform endpoint-wise one-sided t-tests simulated patient data three normally distributed outcomes. AnalyzeMultipleOutcomesCovariates.R - files provides example R function perform statistical analysis simulated patient-level data three continuous endpoints binary covariates. endpoint, ANCOVA model fitted assess treatment effect adjusting covariates. AnalyzeMultipleOutcomesCovariatesStratRandomization.R - Extends previous analysis include stratified randomization. endpoint analyzed using ANCOVA, adjusting covariates.","code":"CyneRgy::RunExample( \"MultipleEndpointsWithCovariates\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultipleEndpointsWithCovariates.html","id":"example-1---simulate-and-analyze-multiple-endpoint-data","dir":"Articles","previous_headings":"Introduction","what":"Example 1 - Simulate and Analyze Multiple Endpoint Data","title":"Multiple Endpoints With Covariates and Stratified Randomization","text":"endpoint related following R files: SimulateMultipleOutcomes.R AnalyzeMultipleOutcomes.R. example, patient outcomes modeled independent, continuous variables generated normal distribution. outcome treatment-specific mean, standard deviation assumed across outcomes. table defines user-specified parameters used simulate patient data: simulated data analyzed using one-sided t-test compare treatment control groups, assuming equal variances. additional user-defined parameters required analysis example. figure illustrates example fits within R integration points East Horizon, along flowchart outlining key steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultipleEndpointsWithCovariates.html","id":"example-2---simulate-and-analyze-multiple-endpoint-data-with-two-binary-covariates","dir":"Articles","previous_headings":"Introduction","what":"Example 2 - Simulate and Analyze Multiple Endpoint Data with Two Binary Covariates","title":"Multiple Endpoints With Covariates and Stratified Randomization","text":"endpoint related following R files: SimulateMultipleOutcomesCovariates.R AnalyzeMultipleOutcomesCovariates.R. Just like Example 1, patient outcomes modeled independent, continuous variables generated normal distribution. Additionally, two binary covariates included, user-specified probabilities effect sizes. table outlines user-specified parameters used simulate patient data: simulated data analyzed ANCOVA model estimate treatment effect adjusting covariates. additional user-defined parameters required analysis example. figure shows example integrates R components East Horizon, along flowchart summarizing key steps executed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/MultipleEndpointsWithCovariates.html","id":"example-3---simulate-and-analyze-multiple-endpoint-data-with-two-binary-covariates-and-stratified-randomization","dir":"Articles","previous_headings":"Introduction","what":"Example 3 - Simulate and Analyze Multiple Endpoint Data with Two Binary Covariates and Stratified Randomization","title":"Multiple Endpoints With Covariates and Stratified Randomization","text":"endpoint related following R files: SimulateMultipleOutcomesCovariatesStratRandomization.R AnalyzeMultipleOutcomesCovariatesStratRandomization.R. Example 3 introduces stratified randomization, replacing East Horizon’s native patient allocation feature. Examples 1 2, patient outcomes modeled independent, continuous variables normal distribution. Two binary covariates included, probabilities effect sizes specified Example 2. Stratified randomization performed based covariates. table defines user-specified parameters used simulate patient data: , simulated data analyzed using ANCOVA model assess treatment effect adjusting covariates. example, treatment assignments generated response simulation directly used analysis. additional user-defined parameters needed analysis. figure illustrates example fits R integration points East Horizon, accompanied flowchart detailing main steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/Overview.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Getting Started","text":"Cytel’s products East Horizon support customization trial design simulations integrating R scripts. feature allows leverage R’s robust statistical computing capabilities enhance simulation designs. section provides steps access R integration points, input values can use scripts, expected output values, examples templates. integration point provides set inputs use R scripts, leaving determine utilized.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/Overview.html","id":"detailed-information-on-integration-points","dir":"Articles","previous_headings":"Overview","what":"Detailed Information on Integration Points","title":"Getting Started","text":"comprehensive details integration point, please refer following pages: Initialization Analysis (Test Statistic) Enrollment (Arrival Times) Randomization (Assignment Subjects) Response (Patient Simulation) Dropout Treatment Selection Multiplicity Adjustment","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/Overview.html","id":"additional-resources","dir":"Articles","previous_headings":"Overview","what":"Additional Resources","title":"Getting Started","text":"tips, best practices, information, visit following pages Cytel Knowledge Base:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/Overview.html","id":"east-horizon","dir":"Articles","previous_headings":"Overview > Additional Resources","what":"East Horizon","title":"Getting Started","text":"Using R functions within East Horizon: Explore Cytel users . Pre-installed R packages within East Horizon Cytel users . R Code Assistant Cytel users .","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/Overview.html","id":"east-desktop","dir":"Articles","previous_headings":"Overview > Additional Resources","what":"East Desktop","title":"Getting Started","text":"R Integration East R Connection Additional Help: East User Manual Appendix O Cytel users .","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Probability of Success, Dual Endpoints","text":"example demonstrates compute probability success clinical trial extending East Horizon’s single-endpoint framework handle dual endpoints custom R scripts Response (Patient Simulation) Analysis integration points. example uses Progression Free Survival (PFS) Overall Survival (OS) endpoints, however, extended types endpoints modifying R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"why-do-we-need-r-integration-for-this-example","dir":"Articles","previous_headings":"Introduction","what":"Why do we need R Integration for this example?","title":"Probability of Success, Dual Endpoints","text":"compute Probability Success trial, users need simulate patient outcomes sampling true rates prior distributions. something East Horizon handle yet current response generation algorithms, must integrate custom R file simulation . trial involves multiple success criteria, users must change “Success” defined traditional success analysis one endpoint. East Horizon handle multiple success criteria Winning Condition yet, must integrate custom R file simulation take account changing success criteria traditional “statistically significant” criteria.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"what-do-the-r-functions-do","dir":"Articles","previous_headings":"Introduction","what":"What do the R functions do?","title":"Probability of Success, Dual Endpoints","text":"R directory example find following R files: Simulate2EndpointTTEWithMultiState.R R file contains function executes response data generation PFS OS endpoints. Due typically assumed correlation PFS OS, timing events simulated patient must take account endpoints completely independent . function therefore handles concern using multi-state model takes consideration: rate events occur trial start progression event, rate events occur trial start death, probability death takes place progression event. may uncertainty around assumed parameters, function simulates based prior distributions rather single values . Users must provide input assumptions parametrize prior distributions sampled simulate patient’s response times. information function, see Response (Patient Simulation) Integration Point section . AnalyzePFSAndOS.R R file contains function executes interim final analyses simulated trial. function takes account PFS OS event time stamps generated. function computes probability success trial, success defined : Statistical significance PFS: PFS data frequentist analysis using Logrank test statistic proves difference control treatment arms proven statistically significant. Positive trend observed OS: OS data shows positive trend difference control treatment arms – positive trend defined user-specified threshold Hazard Ratio observation. success criteria can changed compute probability success varying success criteria. lines code need modified line 170 interim analyses line 193 final analysis. information function, see Analysis Integration Point section .","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"combining-it-all-together","dir":"Articles","previous_headings":"Introduction","what":"Combining it all together…","title":"Probability of Success, Dual Endpoints","text":"figure illustrates example fits within R integration points Cytel products, accompanied flowcharts outlining general steps performed R code.  combining R functions East Horizon native inputs, users able simulate compute probability success simulated trial. Users also continue benefit East Horizon’s output visualizations – caveat Probability Success metric labeled “Power” native outputs East Horizon.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"step-by-step-instructions","dir":"Articles","previous_headings":"","what":"Step-by-Step Instructions","title":"Probability of Success, Dual Endpoints","text":"starting, make sure required tools files. East Horizon Download R Files public Github repo: Simulate2EndpointTTEWithMultiState.R AnalyzePFSAndOS.R.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"new-project-page","dir":"Articles","previous_headings":"Step-by-Step Instructions","what":"New Project Page","title":"Probability of Success, Dual Endpoints","text":"East Horizon, create new project single endpoint.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"new-input-set-page","dir":"Articles","previous_headings":"Step-by-Step Instructions","what":"New Input Set Page","title":"Probability of Success, Dual Endpoints","text":"Navigate Inputs tab, create new input set using Explore task.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"design-page","dir":"Articles","previous_headings":"Step-by-Step Instructions","what":"Design Page","title":"Probability of Success, Dual Endpoints","text":"Click input set just created, select “User Specified – R” Test Statistic field.  Click “+” icon open R Integration pop-window.  Click “Select File” “Continue”.  Select file “AnalyzePFSAndOS.R”.  Check correct file imported correct Function Name specified system.  Note User Parameter variables automatically pulled R function imported. Specify values variables.  variables thresholds Hazard Ratio Overall Survival considered “TRENDING” trial’s second success criteria. Users must specify threshold interim analysis, using group sequential design, always final analysis. See Analysis Integration Point section information variables example values. Note: typically make success criteria CONSERVATIVE (.e. making difficult declare “win”) trending OS interim analysis compared final analysis want “sure” decision less evidence/data available time decision. Click “Save” button exit R Integration details window.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"response-page","dir":"Articles","previous_headings":"Step-by-Step Instructions","what":"Response Page","title":"Probability of Success, Dual Endpoints","text":"Start identifying: Median time PFS Control arm & Variance. Median time PFS Experimental arm (can computed using parameter assumed Hazard Ratio) & Variance. Median time OS Control arm & Variance. Median time OS Experimental arm (can computed using parameter assumed Hazard Ratio) & Variance. Probability Death event Happening Progression event Control arm. Probability Death event Happening Progression event Treatment arm. See Response (Patient Simulation) Integration Point section information variables example values. Use Parameter Solving Tool convert Median Survival Time & Variance parameters Shape & Rate parameters. Enter desired mean variance calculate shape rate parameters Gamma distribution: Mean: Variance:  Shape: - Rate: - Navigate Response page, select “User Specified – R” Distribution field.  Click “+” icon open R Integration pop-window.  Click “Select File” “Continue”.  Select file “Simulate2EndpointTTEWithMultiState.R”.  Check correct file imported correct Function Name specified system.  Note User Parameter variables automatically pulled R function imported. Delete first six variables list, using right now. Delete feature available yet, can specify value 0 parameter instead.  Specify values required User Parameter variables function.  See Response (Patient Simulation) Integration Point section information variables example values. Click “Save” button exit R Integration details window.  Navigate “Dropout Rate” tab within Response Card include dropout information needed.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"enrollment-page","dir":"Articles","previous_headings":"Step-by-Step Instructions","what":"Enrollment Page","title":"Probability of Success, Dual Endpoints","text":"Navigate Enrollment page, specify average number subjects enrolled per time unit (e.g. default per month).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"simulation-setup-page","dir":"Articles","previous_headings":"Step-by-Step Instructions","what":"Simulation Setup Page","title":"Probability of Success, Dual Endpoints","text":"Specify number simulation runs needed.  Check checkbox save simulation data simulated models.  Click “Save & Simulate” button.  Confirm clicking “Simulate” pop-window, wait simulation runs finish.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"results-page","dir":"Articles","previous_headings":"Step-by-Step Instructions","what":"Results Page","title":"Probability of Success, Dual Endpoints","text":"Check whether simulation failed completed looking Status column.  simulation failed, open Log window see helpful error messages. Click “?” icon top right corner screen.  Click “Log”.  Identify errors appear. example:  simulation completed, click Result name. multiple scenarios simulation, prompted label least one scenario list. Alternatively, may also skip step selecting “Skip” button bottom left corner.  Explore page results appears. Hover cell heat map see summary outputs. custom R scripts, “Power” actually now equivalent “Probability Success”, success means PFS statistically significant OS trending.  See Results section information. visualize Probability Success interim look, click cell heat map open Detailed Model Output Card. Scroll bottom open “Simulation Boundaries Boundary Crossing Probabilities” Table.  need reminded threshold OS success criteria used, scroll top Detailed Output page find details inputs “Summary” card.  Compute Probability Success analysis identifying number times trial stopped Efficacy given analysis total number simulations. example:  Probability Success interim: 4055/10000 = 40.55% Probability Success final analysis conditional unsuccessful interim: 3191/5945 = 53.68% Probability Success final analysis (either IA1 FA): 7246/10000 = 72.46%","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"response-patient-simulation-integration-point","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Response (Patient Simulation) Integration Point","title":"Probability of Success, Dual Endpoints","text":"endpoint related R file: Simulate2EndpointTTEWithMultiState.R using East Horizon’s single-endpoint framework, customize support dual endpoints Response Integration Point via R script linked . two endpoints interest : Progression-Free Survival (PFS): duration patient lives disease without experiencing progression. Overall Survival (OS): total time elapsed treatment death. use multi-state model simulate event times patient every simulated trial. model captures relationship PFS OS generating outcomes together, rather independently. Information generated simulation used later Analysis Integration Point.  diagram illustrates multistate model survival analysis, three states: State 0: Initial, progression. State 1: Progression, event occurs makes disease progress. State 2: Death. also three transitions states: α01\\alpha_{01}: Transition rate Initial Progression. α02\\alpha_{02}: Transition rate Initial Death. α12\\alpha_{12}: Transition rate Progression Death. Meller et al. [1], probability progression death : q=α01α01+α02(1) q = \\frac{\\alpha_{01}}{\\alpha_{01} + \\alpha_{02}} \\ \\ \\ \\ \\ (1) q=1−pq = 1 - p, pp probability Death Progression. Using relationship: α02=α01(1−q)q=α01⋅pq(2) \\alpha_{02} = \\frac{\\alpha_{01}(1-q)}{q} =  \\frac{\\alpha_{01} \\cdot p}{q} \\ \\ \\ \\ \\ (2) equivalently: α01=α02⋅qp(3) \\alpha_{01} = \\frac{\\alpha_{02} \\cdot q}{p} \\ \\ \\ \\ \\ (3) Progression-Free Survival (PFS) treated minimum two competing times: X1∼Exp(α01)X_1 \\sim \\text{Exp}(\\alpha_{01}): Time Initial Progression. X2∼Exp(α02)X_2 \\sim \\text{Exp}(\\alpha_{02}): Time Initial Death without Progression. Using property minimum two exponential random variables [2]: Z=min(X1,X2)∼Exp(α01+α02) Z = \\min(X_1, X_2) \\sim \\text{Exp}(\\alpha_{01} + \\alpha_{02}) mean exponential distribution given : M=1α01+α02 M = \\frac{1}{\\alpha_{01} + \\alpha_{02}} Substituting α01\\alpha_{01} terms α02\\alpha_{02}: M=1α01+α02=1α02⋅qp+α02=1α02⋅(qp+1) M = \\frac{1}{\\alpha_{01} + \\alpha_{02}} = \\frac{1}{\\frac{\\alpha_{02} \\cdot q}{p} + \\alpha_{02}} = \\frac{1}{\\alpha_{02} \\cdot \\left(\\frac{q}{p} + 1\\right)} Solving α02\\alpha_{02}: α02=1M⋅(qp+1) \\alpha_{02} = \\frac{1}{M \\cdot \\left(\\frac{q}{p} + 1\\right)} α02\\alpha_{02} calculated, can plugged (3) obtain α01\\alpha_{01}. Overall Survival (OS) accounts pathways: Occurs probability pp. Survival time OS=X2OS = X_2 (time death without progression). Occurs probability qq. X1∼Exp(α01)X_1 \\sim \\text{Exp}(\\alpha_{01}) (time progression), X3∼Exp(α12)X_3 \\sim \\text{Exp}(\\alpha_{12}) (time progression death). Thus, OS X2X_2 probability pp X1+X3X_1 + X_3 probability qq. also know median OS MOSM_{OS} since user provides thus solve α12\\alpha_{12} numerically given α01\\alpha_{01} α02\\alpha_{02}. approach require using root finding function, uniroot, compute α12\\alpha_{12} . example, function SimulateDualMultiStateTTE arguments median PFS, median OS, probability death progression, solve desired α\\alpha parameters simulate patient data multistate model treatment independently. Sources [1] Joint Modeling progression-free overall survival computation correlation measures, Meller M, Beyersmann J, Rufibach K, 2018 [2] Purdue University, minimum_two_exponentials.pdf","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"example-using-median-times","dir":"Articles","previous_headings":"Technical Information and Example Values > Response (Patient Simulation) Integration Point","what":"Example Using Median Times","title":"Probability of Success, Dual Endpoints","text":"One option directly input median times probabilities death progression script user parameters. Refer table definitions example values user-defined parameters. , median times months hazard ratio endpoints (PFS & OS) equal 1218=1827=0.6667\\frac{12}{18} = \\frac{18}{27} = 0.6667. probability death progression 20% control treatment arms.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"example-using-prior-distributions","dir":"Articles","previous_headings":"Technical Information and Example Values > Response (Patient Simulation) Integration Point","what":"Example Using Prior Distributions","title":"Probability of Success, Dual Endpoints","text":"Another option customize patient data simulated building realistic model PFS OS outcomes using prior distributions instead directly using median times probabilities. Using prior distributions allows us account uncertainty around true treatment effect, enables users identify Probability Success trial rather statistical Power. ’s event data generated: Time PFS event sampled Gamma distribution. Time OS event also sampled Gamma distribution. probability OS event happens PFS event sampled Beta distribution. three parameters treated random variables, sampled prior distributions, allowing simulated trial reflect range possible real-world outcomes. Refer table definitions user-defined parameters used example. shape rate parameters can calculated assumed mean (.e. median survival time) variance. can use Parameter Solving tool Step--Step section compute required parameters. scale parameter assumption instead rate parameter, can convert one using formula Rate=1ScaleRate = \\frac{1}{Scale}.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"scenario-1-alternative-hypothesis-equal-variance","dir":"Articles","previous_headings":"Technical Information and Example Values > Response (Patient Simulation) Integration Point > Example Using Prior Distributions","what":"Scenario 1: Alternative Hypothesis & Equal Variance","title":"Probability of Success, Dual Endpoints","text":"first example scenario, want: variance 10 endpoints (PFS OS) arms (control treatment). mean time PFS event 12 months. mean time OS event 18 months. mean time PFS event 18 months. mean time OS event 27 months. probability death progression 20% arms. Using tool , get: mean=12mean = 12, variance=10variance = 10→\\rightarrowshape=14.4shape = 14.4, rate=1.2rate = 1.2 mean=18mean = 18, variance=10variance = 10→\\rightarrowshape=32.4shape = 32.4, rate=1.8rate = 1.8 mean=27mean = 27, variance=10variance = 10→\\rightarrowshape=72.9shape = 72.9, rate=2.7rate = 2.7 Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"scenario-2-alternative-hypothesis-higher-variance","dir":"Articles","previous_headings":"Technical Information and Example Values > Response (Patient Simulation) Integration Point > Example Using Prior Distributions","what":"Scenario 2: Alternative Hypothesis & Higher Variance","title":"Probability of Success, Dual Endpoints","text":"second example scenario, want: variance 10 endpoints (PFS OS). mean time PFS event 12 months. mean time OS event 18 months. variance 20 endpoints (PFS OS). mean time PFS event 18 months. mean time OS event 27 months. probability death progression 20% arms. Using tool , get: mean=12mean = 12, variance=10variance = 10→\\rightarrowshape=14.4shape = 14.4, rate=1.2rate = 1.2 mean=18mean = 18, variance=10variance = 10→\\rightarrowshape=32.4shape = 32.4, rate=1.8rate = 1.8 mean=18mean = 18, variance=20variance = 20→\\rightarrowshape=16.2shape = 16.2, rate=0.9rate = 0.9 mean=27mean = 27, variance=20variance = 20→\\rightarrowshape=36.45shape = 36.45, rate=1.35rate = 1.35 Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"scenario-3-null-hypothesis-equal-variance","dir":"Articles","previous_headings":"Technical Information and Example Values > Response (Patient Simulation) Integration Point > Example Using Prior Distributions","what":"Scenario 3: Null Hypothesis & Equal Variance","title":"Probability of Success, Dual Endpoints","text":"third example scenario, want: variance 10 endpoints (PFS OS) arms (control treatment). mean time PFS event 12 months. mean time OS event 18 months. mean time PFS event 12 months. mean time OS event 18 months. probability death progression 20% arms. Using tool , get: mean=12mean = 12, variance=10variance = 10→\\rightarrowshape=14.4shape = 14.4, rate=1.2rate = 1.2 mean=18mean = 18, variance=10variance = 10→\\rightarrowshape=32.4shape = 32.4, rate=1.8rate = 1.8 Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"scenario-4-null-hypothesis-higher-variance","dir":"Articles","previous_headings":"Technical Information and Example Values > Response (Patient Simulation) Integration Point > Example Using Prior Distributions","what":"Scenario 4: Null Hypothesis & Higher Variance","title":"Probability of Success, Dual Endpoints","text":"final example scenario, want: variance 10 endpoints (PFS OS) mean time PFS event 12 months. mean time OS event 18 months. variance 20 endpoints (PFS OS) mean time PFS event 12 months. mean time OS event 18 months. probability death progression 20% arms. Using tool , get: mean=12mean = 12, variance=10variance = 10→\\rightarrowshape=14.4shape = 14.4, rate=1.2rate = 1.2 mean=18mean = 18, variance=10variance = 10→\\rightarrowshape=32.4shape = 32.4, rate=1.8rate = 1.8 mean=12mean = 12, variance=20variance = 20→\\rightarrowshape=7.2shape = 7.2, rate=0.6rate = 0.6 mean=18mean = 18, variance=20variance = 20→\\rightarrowshape=16.2shape = 16.2, rate=0.9rate = 0.9 Refer table values user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"analysis-integration-point","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Analysis Integration Point","title":"Probability of Success, Dual Endpoints","text":"endpoint related R file: AnalyzePFSAndOS.R Using file , Analysis element East Horizon’s simulation customized compute probability success (PoS) trial, based dual endpoints: Progression-Free Survival (PFS) Overall Survival (OS). file uses information simulation (SimData variable) generated Response element East Horizon’s simulation. See Response section information PFS OS endpoints generation. criteria declaring trial success follows. criteria must met declare success: PFS Endpoint: Statistical significance must achieved crossing predefined efficacy boundary (defined East Horizon, using frequentist analysis). OS Endpoint: positive trend must observed, defined OS hazard ratio pre-specified threshold (defined user parameters). Note: interim analysis, usually set stricter criteria positive trend OS compared final analysis. less data early , want confident decision make stage. Therefore, threshold defining positive trend interim typically lower threshold used final analysis. Refer table definitions user-defined parameters used example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"option-1-fixed-sample-design","dir":"Articles","previous_headings":"Technical Information and Example Values > Analysis Integration Point","what":"Option 1: Fixed Sample Design","title":"Probability of Success, Dual Endpoints","text":"first example option fixed sample design hazard ratio threshold 0.9. option shows can still use script without interim analyses. Refer table values user-defined parameters used option.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"option-2-group-sequential-design","dir":"Articles","previous_headings":"Technical Information and Example Values > Analysis Integration Point","what":"Option 2: Group Sequential Design","title":"Probability of Success, Dual Endpoints","text":"second example option group sequential design hazard ratio thresholds 0.8 (interim analysis) 0.9 (final analysis). Refer table values user-defined parameters used option.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"option-3-low-pos-group-sequential-design","dir":"Articles","previous_headings":"Technical Information and Example Values > Analysis Integration Point","what":"Option 3: Low PoS Group Sequential Design","title":"Probability of Success, Dual Endpoints","text":"third example option group sequential design lower hazard ratio threshold 0.5 interim final analyses. Refer table values user-defined parameters used option.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"option-4-high-pos-group-sequential-design","dir":"Articles","previous_headings":"Technical Information and Example Values > Analysis Integration Point","what":"Option 4: High PoS Group Sequential Design","title":"Probability of Success, Dual Endpoints","text":"fourth example option group sequential design lower hazard ratio threshold 0.5 (interim analysis) higher hazard ratio threshold 1.2 (final analysis). Refer table values user-defined parameters used option.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/ProbabilitySuccessDualEndpoints.html","id":"results","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Results","title":"Probability of Success, Dual Endpoints","text":"Results section, Power now refers probability success, success defined statistically significant difference time progression-free survival (PFS) control treatment arm well positive trend overall survival (OS), .e. time overall survival (OS) longer magnitude patients treatment arm compared control arm. example heatmap generated East Horizon following simulation. square represents simulated probability success trial, based specific combination Response scenario (columns) Analysis option (rows).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/RandomizeSubjects.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Randomization of Subjects","text":"following examples illustrate integrate new custom randomization methods control subjects assigned designated arms East Horizon East using R functions context two-arm trial. CyneRgy installed, can load example RStudio following commands Running command load RStudio project RStudio. RStudio Project File: RandomizeSubjects.Rproj R directory example find following R files: RandomizationSubjectsUsingUniformDistribution.R - Contains function named RandomizationSubjectsUsingUniformDistribution demonstrate R code necessary Example 1 described . RandomizationSubjectsUsingSampleFunctionInR.R - Contains function named RandomizationSubjectsUsingSampleFunctionInR demonstrate R code necessary Example 2 described . BlockRandomizationSubjectsUsingRPackage.R - Contains function named BlockRandomizationSubjectsUsingRPackage demonstrate R code necessary Example 3 described . LoadrandomizeR.R - file used install randomizeR package execution Block Randomization R. RandomizeSubjectsAcrossMultipleArms.R - Contains function named RandomizeSubjectsAcrossMultipleArms demonstrate R code necessary Example 4 described .","code":"CyneRgy::RunExample( \"RandomizeSubjects\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/RandomizeSubjects.html","id":"example-1---randomize-subjects-usings-uniform-distribution","dir":"Articles","previous_headings":"","what":"Example 1 - Randomize Subjects Usings Uniform Distribution","title":"Randomization of Subjects","text":"example related R file: RandomizationSubjectsUsingUniformDistribution.R R function RandomizationSubjectsUsingUniformDistribution randomly assigns subjects one two arms using uniform distribution. function use user-defined parameters, uses parameters specified East Horizon. Refer table information. Steps: Generate random number uu Uniform(0,1)Uniform(0,1) distribution. Define pp allocation fraction control arm, 1−p1 - p allocation fraction treatment arm. u≤pu \\leq p, assign subject control arm; otherwise, assign treatment arm. Ensure total sample size equals sum subjects control treatment arms. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/RandomizeSubjects.html","id":"example-2---randomize-subjects-using-sample-function","dir":"Articles","previous_headings":"","what":"Example 2 - Randomize Subjects Using Sample Function","title":"Randomization of Subjects","text":"example related R file: RandomizationSubjectsUsingSampleFunctionInR.R R function RandomizationSubjectsUsingSampleFunctionInR uses sample() function R randomly assign patients control treatment arms. function use user-defined parameters, uses parameters specified East Horizon. Refer table information. Steps: Let pp allocation fraction control arm, 1−p1 - p allocation fraction treatment arm. Compute expected sample sizes (rounded) arms using allocation fraction total sample size. Randomly assign subject indices control treatment arms using sample() function R. Create vector zeros size equal total number subjects (NumSubNumSub), replace zeros ones indices corresponding treatment arm. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/RandomizeSubjects.html","id":"example-3---randomize-subjects-using-randomizer-package","dir":"Articles","previous_headings":"","what":"Example 3 - Randomize Subjects Using randomizeR Package","title":"Randomization of Subjects","text":"example related R file: BlockRandomizationSubjectsUsingRPackage.R function BlockRandomizationSubjectsUsingRPackage.R uses randomizeR::pbrPar() function randomizeR package perform block randomization. small-sample studies, imbalances groups can minimized using restricted randomization. approach ensures treatment groups allocated desired proportions maintaining randomness. permuted block randomization technique divides study participants blocks, within subjects randomly assigned treatment groups. method ensures desired allocation proportions exactly maintained within block keeping order assignments random. Refer table definitions user-defined parameters used example. function also uses parameters specified East Horizon. Refer tables information. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/RandomizeSubjects.html","id":"example-4---randomize-subjects-across-multiple-arms","dir":"Articles","previous_headings":"","what":"Example 4 - Randomize Subjects Across Multiple Arms","title":"Randomization of Subjects","text":"example related R file: RandomizeSubjectsAcrossMultipleArms.R function RandomizeSubjectsAcrossMultipleArms demonstrates perform randomization clinical trial involves two arms, control group multiple experimental treatment groups. function dynamically handles number arms allocates subjects according specified allocation ratios. extends logic two-arm randomization examples generalize across arbitrary number treatment arms. function first converts allocation ratios fractions summing one, determines number subjects per arm according proportions. remaining subjects (due rounding) distributed arms largest fractional parts ensure total sample size preserved. treatment ID vector created (0 control, 1…N treatment arms), randomly shuffled, returned. function use user-defined parameters, uses parameters specified East Horizon. Refer table information. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Schizophrenia Trial (MMRM Analysis)","text":"Many clinical trials often involve repeated measures continuous endpoint across multiple visits. Due burden trial subjects, data can missing variety reasons missed visits patient dropout. Efficiently, analyzing type data requires methods handle within-patient correlation missing data appropriately. Mixed Model Repeated Measures (MMRM) widely used provides opportunity : Adjusts baseline visit effects, Accounts correlation repeated observations, Avoids simplistic imputation approaches LOCF (Last Observation Carried Forward). example two goals: East Horizon R Integration Scripts - Create R scripts analyzing data employing MMRM approach simulating trial data. Compare MMRM Native East Horizon Analysis - Compare difference means analysis approach East Horizon MMRM analysis hopes understanding potential gains using alternative form analysis. Together, example provides foundation trial designers estimate power, evaluate operating characteristics, explore design choices schizophrenia studies using additional analysis native East Horizon.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"required-files","dir":"Articles","previous_headings":"Introduction","what":"Required Files","title":"Schizophrenia Trial (MMRM Analysis)","text":"running anything East Horizon, load Schizophrenia example installing CyneRgy running command RStudio: Running code load RStudio project. RStudio Project File: SchizophreniaTrial.Rproj project required R code files needed run East Horizon locally. files allow many things including ability generate patient data, run analysis using MMRM simulated data, plot data overall trial indivdual patient trajectories. AnalyzeUsingMMRM.R - code takes simulated patient data runs MMRM analysis. AnalyzeUsingMMRMWithGLS.R - code slower version original analysis, slightly increased power alternative form analysis using function generalized least squares R package nlme. GenerateMMRMResponses.R - code generates responses patients across treatment visits. PlotSelectedPatients.R - code takes generated patient data creates plots individual patient trajectories. PlotTreatmentControlCI.R - code takes overall data generated creates plot difference means 95% CI. RunSimulation.R - code allows code run locally, change variables around, visualize data. can helpful run R code locally uploading East Horizon make sure bugs present changes made code. example looks analysis using MMRM. allows dropout information impact power much analysis methods. works well East Horizon providing longitudinal analysis design. R files listed required, can used help simulate patient data run analysis locally RStudio. can helpful allow users good starting point case need adjust details analysis. various plot functions can helpful visualizing simulated patient data make sure looks realistic. East Horizon, need AnalyzeUsingMMRM.R /AnalyzeUsingMMRMWithGLS.R MMRM analysis. files provide MMRM analysis use different R packages AnalyzeUsingMMRM.R file efficient approach. Additionally, GenerateMMRMResponses.R file provides R function patient generation can used East Horizon, required native approach data generation used.","code":"CyneRgy::RunExample( \"SchizophreniaTrial\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"example-outputs","dir":"Articles","previous_headings":"Introduction","what":"Example outputs","title":"Schizophrenia Trial (MMRM Analysis)","text":"graphs example outputs code GenerateMMRMResponses function. always good review example data sets verify data realistic.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"clinical-trial-simulation-process","dir":"Articles","previous_headings":"Introduction","what":"Clinical Trial Simulation Process","title":"Schizophrenia Trial (MMRM Analysis)","text":"flowchart shows points R integration Cytel products, outlines steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"project-setup","dir":"Articles","previous_headings":"","what":"Project Setup","title":"Schizophrenia Trial (MMRM Analysis)","text":"recreate example East Horizon, start creating new project East Horizon Two Arm Confirmatory study objective. Plan page, select Continuous endpoint type choose Repeated Measure option. Better Response, select Smaller Value since patient’s outcome improved smaller score. Lastly, click Add Visit project total 5 visits: 4 interim visits 1 final visit. visit times set follows: Visit 1: 0 Visit 2: 0.25 Visit 3: 0.5 Visit 4: 0.75 Final Visit: 1 project setup look like following. create Project, need create input set using Explore option.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"design-page","dir":"Articles","previous_headings":"Input Setup","what":"Design Page","title":"Schizophrenia Trial (MMRM Analysis)","text":"MMRM fixed-sample card, sample size 266. group sequential MMRM card input “200:360:20.” create samples ranging 200-360 patients counting steps 20. cards use Type error 0.025 allocation ration 1. Test type, select User Specified-R, upload file AnalyzeUsingMMRM.R. design card fixed design look something like : add group sequential option, can duplicate card sample sizes retained. Switch Statistical Design Group Sequential. card look like:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"response-page","dir":"Articles","previous_headings":"Input Setup","what":"Response Page","title":"Schizophrenia Trial (MMRM Analysis)","text":"example, create total 6 different response cards. first card uses result data Correll et. al.  mean differences treatment control arms (Mean Difference = 6 points) given standard deviation (Std. Dev = 15). two cards called “Diff 4” “Diff 8”. cards change mean difference arms 4 8, respectively. Next, two response cards change standard deviation 15 10 20. different standard deviations mean differences included understand impact power. Lastly, null card standard deviation 15 mean difference treatment control 0. null case used understand false-positive analysis method. (Note: UserParam needed) cards use R integration GenerateMMRMResponses.R file can uploaded. response cards look:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"dropout-page","dir":"Articles","previous_headings":"Input Setup","what":"Dropout Page","title":"Schizophrenia Trial (MMRM Analysis)","text":"dropout cards share dropout rates publication (0.26 control 0.15 experimental arm). dropout card look like:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"enrollment-page","dir":"Articles","previous_headings":"Input Setup","what":"Enrollment Page","title":"Schizophrenia Trial (MMRM Analysis)","text":"one enrollment card accrual rate 30 subjects per month. Enrollment card look like:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"simulation-page","dir":"Articles","previous_headings":"Input Setup","what":"Simulation Page","title":"Schizophrenia Trial (MMRM Analysis)","text":"simulation setup, total 1000 repetitions random number seed set clock. Simulation Setup card look like:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Schizophrenia Trial (MMRM Analysis)","text":"Target power: Approximately 90% power achieved 266 completers standard deviation 15 mean difference 6 (using MMRM Fixed Design). reaching power 2 designs effectively accomplish . One MMRM fixed design (named “Fixed”) MMRM Group-sequential sample size 300 (named “Selected Design GS300”). Either designs viable trade discussed results discussion section.  Sensitivity: Power changed standard deviation mean difference varied (Std. Dev ↑ → power ↓; Std. Dev ↓ → power ↑). cards standard deviation 20 (named “SD20”) cards mean difference 4 (named “Diff 4”) resulted significantly lower power ranging 36% 76%. contrast, cards standard deviation 10 (named “SD10”) mean difference 8 (named “Diff 8”) showed substantially higher power, designs achieving 95% 100%.   Null behavior (MMRM): Type error observed 2.1 3.6%, close nominal 2.5%.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"Schizophrenia Trial (MMRM Analysis)","text":"Fixed Vs. Selected Sample GS300: Selected Sample GS300 design (.e., group sequential design allows interim analyses potential early stopping) feature lower power Fixed design, come several benefits worth weight simulating study. Selected Sample GS300 design boasts 30% chance stopping early, shorter average study duration, smaller average sample size. return, comes decrease power ~1.4%. difference significant can save money trial even one improved results. designs considered larger sample sizes due meeting required 90% power smallest sample sizes.   Sensitivity Analysis: reason including difference means cards standard deviation cards illustrate sensitive power study researchers’ initial assumptions . increasing standard deviation 20 decreasing difference means 4 led power becoming powered. suggests increase sample size detect significant difference. standard deviation set 10 difference means 8, power increased, reaching mid--high 90% range. allow reduction study’s sample size still maintaining 90% power. Null Cases: Across null cases, observed rates consistently ranged 2.1% 3.6%. percentages fall within tolerable range. demonstrates MMRM analysis code detects false positive rate approximately 2.5%, matches originally specified type error.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Schizophrenia Trial (MMRM Analysis)","text":"work successfully built validated MMRM analysis framework R East Horizon. R pipeline enables transparent simulation, analysis, visualization, East Horizon supports large-scale scenario evaluation. Together, provide trial designers flexible tools plan studies, anticipate power, identify risks. findings confirm MMRM’s suitability longitudinal endpoints highlight areas improvement, particularly around sequential testing dropout handling. R integration analysis added MMRM analysis can better support clinical trial decision-making design optimization native analysis option East Horizon particular trial example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/SchizophreniaTrial.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Schizophrenia Trial (MMRM Analysis)","text":"Correll CU, Davis RE, Weingart M, et al. Efficacy Safety Lumateperone Treatment Schizophrenia: Randomized Clinical Trial. JAMA Psychiatry. 2020;77(4):349–358. doi:10.1001/jamapsychiatry.2019.4379","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TimeToEventConditionalPowerFutilityAnalysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Time-To-Event Weighted Conditional Power Futility Analysis","text":"example demonstrates perform time--event (TTE) analysis evaluation futility interim look extending East Horizon: Design’s functionalities using custom R script Analysis integration point. analysis patient data based Logrank test interim analysis evaluates futility based Conditional Power threshold, computed using weighted hazard ratio. example, set East Horizon Two Arm Confirmatory trial single TTE endpoint using Design task Logrank Test Given Accrual Duration Study Duration (Parallel Design) option. East Horizon: Design, custom R scripts can applied simulations. Therefore, analytical design must first created, simulations can run based computation. simulation, futility evaluation original design replaced custom futility logic implemented R script.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TimeToEventConditionalPowerFutilityAnalysis.html","id":"why-do-we-need-r-integration-for-this-example","dir":"Articles","previous_headings":"Introduction","what":"Why do we need R Integration for this example?","title":"Time-To-Event Weighted Conditional Power Futility Analysis","text":"East Horizon: Design’s built-analysis algorithms natively support computation weighted conditional power using assumed hazard ratio observed hazard ratio interim analysis. requires integrating custom R file Analysis step : Compute Logrank test statistic p-value interim & final analyses. Estimate hazard ratio interim data. Compute conditional power using either target hazard ratio (.e. original assumption), estimated hazard ratio (.e. observed analysis), weighted combination two. Apply futility efficacy decision rules based pre-specified boundaries, specified conditional power thresholds. integrating R file, East Horizon users can perform adaptive interim analyses custom decision rules supported default framework, allowing flexible realistic trial simulations.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TimeToEventConditionalPowerFutilityAnalysis.html","id":"what-does-the-r-function-do","dir":"Articles","previous_headings":"Introduction","what":"What does the R function do?","title":"Time-To-Event Weighted Conditional Power Futility Analysis","text":"R directory example find following R file: AnalzyeTTEWithConditinalPowerFutility.R R file contains function analyzes simulated time--event clinical trial data interim final analyses. prepares event censoring information, runs log-rank test compare treatment groups, calculates conditional power based either target hazard ratio, estimated hazard ratio, weighted mix . applies futility rules using conditional power interim looks decide whether trial stop early continue, uses traditional Logrank test efficacy/futility decision final look. function returns test statistic, estimated hazard ratio, conditional power, decision code indicating outcome. information function, see Technical Information Example Values section .","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TimeToEventConditionalPowerFutilityAnalysis.html","id":"combining-it-all-together","dir":"Articles","previous_headings":"Introduction","what":"Combining it all together…","title":"Time-To-Event Weighted Conditional Power Futility Analysis","text":"figure illustrates example fits within R integration points Cytel products, accompanied flowcharts outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TimeToEventConditionalPowerFutilityAnalysis.html","id":"technical-information-and-example-values","dir":"Articles","previous_headings":"","what":"Technical Information and Example Values","title":"Time-To-Event Weighted Conditional Power Futility Analysis","text":"example related R file: AnalzyeTTEWithConditinalPowerFutility.R begin preparing simulated trial data based design parameters current look index. perform Logrank test, compares survival treatment control arms. test statistic (ZZ) computed : Z=χ2⋅sign(O2−E2) Z = \\sqrt{\\chi^2} \\cdot \\operatorname{sign}(O_2 - E_2) : χ2\\chi^2 Logrank chi-square statistic. O2O_2 E2E_2 observed expected number events treatment group. corresponding pp-value (pp) : p=1−Fχ12(χ2) p = 1 - F_{\\chi^2_1}(\\chi^2) Fχ12(χ2)F_{\\chi^2_1}(\\chi^2) cumulative distribution function (CDF) chi-square 1 degree freedom. also compute standard error log hazard ratio (selnHR\\text{se}_{\\ln HR}) : selnHR=1n⋅r(1−r) \\text{se}_{\\ln HR} = \\frac{1}{\\sqrt{n \\cdot r (1-r)}} : nn number events time analysis. r=AllocInfo1+AllocInfor = \\frac{\\text{AllocInfo}}{1+\\text{AllocInfo}} AllocInfo\\text{AllocInfo} ratio treatment arm sample size control arm sample size. Next, conditional power (CPCP), words probability ultimately crossing efficacy boundary given interim results, calculated : CP=Φ(zα1+n1n2−n1−Zn1n2−n1−ln(HR*)r(1−r)n2−n1) CP = \\Phi \\left(   z_\\alpha \\sqrt{1 + \\frac{n_1}{n_2 - n_1}}   - Z \\sqrt{\\frac{n_1}{n_2 - n_1}}   - \\ln(HR^*) \\sqrt{r(1-r)} \\sqrt{n_2 - n_1} \\right) : Φ(.)\\Phi(.) standard normal cumulative distribution function (CDF). zα=Φ−1(0.025)z_\\alpha = \\Phi^{-1}(0.025) critical value set efficacy boundary Z-test statistic scale (case, using one-sided significance level 2.5%). n1n_1 number events first look (interim analysis). n2n_2 number events second look (final analysis). HR*HR^* depends computation option (see ). futility decision rule interim analysis : CP<θfutility→stop futility. \\text{} CP < \\theta_{\\text{futility}} \\rightarrow \\text{stop futility.} decision rule final analysis : {Z≤zα→stop efficacy.Z>zα→stop futility. \\begin{cases}     \\text{} Z \\leq z_\\alpha \\rightarrow \\text{stop efficacy.} \\\\     \\text{} Z > z_\\alpha \\rightarrow \\text{stop futility.} \\end{cases}","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TimeToEventConditionalPowerFutilityAnalysis.html","id":"option-1-target-hazard-ratio","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Option 1: Target Hazard Ratio","title":"Time-To-Event Weighted Conditional Power Futility Analysis","text":"option, conditional power computed using user-specified target hazard ratio: HR*=TargetHazardRatioHR^* = \\text{TargetHazardRatio} enable option, set nComputationOption = 1 provide values FutilityThreshold TargetHazardRatio, shown table . option equivalent using East Horizon: Design’s built-functionality specifying Futility information computation stage, selecting Conditional Power Futility Boundary Family choosing Design HR Compute CP Using input field.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TimeToEventConditionalPowerFutilityAnalysis.html","id":"option-2-estimated-hazard-ratio","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Option 2: Estimated Hazard Ratio","title":"Time-To-Event Weighted Conditional Power Futility Analysis","text":"option, conditional power computed using estimated hazard ratio derived interim data: HR*=HR̂=exp(Z⋅selnHR) HR^* = \\widehat{HR} = \\exp\\big( Z \\cdot \\text{se}_{\\ln HR} \\big) : ZZ Logrank test statistic, defined . selnHR\\text{se}_{\\ln HR} standard error log hazard ratio, defined . enable option, set nComputationOption = 2 provide value FutilityThreshold, shown table . option equivalent using East Horizon: Design’s built-functionality specifying Futility information computation stage, selecting Conditional Power Futility Boundary Family choosing Estimated HR Compute CP Using input field.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TimeToEventConditionalPowerFutilityAnalysis.html","id":"option-3-weighted-hazard-ratio","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Option 3: Weighted Hazard Ratio","title":"Time-To-Event Weighted Conditional Power Futility Analysis","text":"option, conditional power computed using weighted hazard ratio combines estimated hazard ratio interim data user-specified target hazard ratio: HR*=HRw=west⋅HR̂+wtarget⋅HRtarget HR^* = HR_w = w_{\\text{est}} \\cdot \\widehat{HR} + w_{\\text{target}} \\cdot HR_{\\text{target}} : westw_{\\text{est}} weight assigned estimated hazard ratio. wtargetw_{\\text{target}} weight assigned target hazard ratio. HRtargetHR_{\\text{target}} user-specified target hazard ratio. enable option, set nComputationOption = 3 provide values FutilityThreshold, TargetHazardRatio, WeightEstimatedHR, WeightTargetHR, shown table . Unlike Options 1 2, option implemented using East Horizon: Design’s built-functionality. available R integration.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TimeToEventConditionalPowerFutilityAnalysis.html","id":"results","dir":"Articles","previous_headings":"Technical Information and Example Values","what":"Results","title":"Time-To-Event Weighted Conditional Power Futility Analysis","text":"ran 10,000 simulation replicates configuration using example values tables . results summarized : Options 1 2, results obtained via built-East Horizon functionality almost identical produced using R integration, confirming correctness custom implementation. Option 3, results depend analytical design (Option 1 Option 2) used baseline simulation. method available using East Horizon: Design’s built-functionality, sample size number events required reach target power using method must identified running range simulations varying sample size number events values. weighted hazard ratio approach can particularly valuable situations users want balance evidence observed interim data prior expectations treatment effect. conclusion, results demonstrate R script successfully reproduces East Horizon’s built-functionality available extends capabilities new features weighted hazard ratios.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TreatmentSelection.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Multiarm, Binary Outcome - Treatment Selection","text":"following examples illustrate integrate new treatment selection capabilities East Horizon East using R functions context multi-arm trial. example, trial design includes standard--care control arm three experimental treatment arms. design includes one interim analysis (IA) one final analysis (FA). IA, one experimental treatments selected continue stage 2 trial. trial stopped early efficacy futility, control arm selected treatments proceed final stage. examples showcase different approaches selecting treatments carry forward stage 2. CyneRgy installed, can load example R Studio following commands: Running command load RStudio project RStudio. East Workbook: TreatmentSelection.cywx RStudio Project File: TreatmentSelection.Rproj R directory example find following R files: SelectExpThatAreBetterThanCtrl.R - Contains function named SelectExpThatAreBetterThanCtrl demonstrate R code necessary Example 1 described . SelectExpWithPValueLessThanSpecified.R - Contains function named SelectExpWithPValueLessThanSpecified demonstrate R code necessary Example 2 described . SelectSpecifiedNumberOfExpWithHighestResponses.R - Contains function named SelectSpecifiedNumberOfExpWithHighestResponses demonstrate R code necessary Example 3 described . SelectExpUsingBayesianRule.R - Contains function named SelectExpUsingBayesianRule demonstrate R code necessary Example 4 described . addition, like experiment examples like code help get started provided fill---blank type code files FillInTheBlankR directory.","code":"CyneRgy::RunExample(\"TreatmentSelection\")"},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TreatmentSelection.html","id":"example-1---selection-based-on-response-rates-above-control","dir":"Articles","previous_headings":"","what":"Example 1 - Selection Based on Response Rates Above Control","title":"Multiarm, Binary Outcome - Treatment Selection","text":"example related R file: SelectExpThatAreBetterThanCtrl.R example, interim analysis: experimental treatment response rate higher control arm selected stage 2. experimental treatment exceeds control response rate, treatment highest estimated probability response selected instead. stage 2, 1:1 randomization ratio (experimental:control) used. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TreatmentSelection.html","id":"example-2---selection-based-on-p-value-less-than-specified","dir":"Articles","previous_headings":"","what":"Example 2 - Selection Based on P-Value Less Than Specified","title":"Multiarm, Binary Outcome - Treatment Selection","text":"example related R file: SelectExpWithPValueLessThanSpecified.R example, interim analysis: experimental treatment compared control arm using chi-squared test. treatment p-value less user-specified threshold (dMaxPValue) selected stage 2. treatment meets criterion, experimental arm smallest p-value selected. stage 2, 1:1 randomization ratio (experimental:control) used. Refer table definitions user-defined parameters used example. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TreatmentSelection.html","id":"example-3---select-treatments-with-highest-number-of-responses","dir":"Articles","previous_headings":"","what":"Example 3 - Select Treatments With Highest Number of Responses","title":"Multiarm, Binary Outcome - Treatment Selection","text":"example related R file: SelectSpecifiedNumberOfExpWithHighestResponses.R example, interim analysis: user-specified number experimental treatments (QtyOfArmsToSelect) highest observed number responses selected stage 2. Following IA, two treatment arms chosen advance, randomization proceeds according user-specified allocation ratios 1:Rank1AllocationRatio:Rank2AllocationRatio, : 1 corresponds control arm, Rank1AllocationRatio corresponds treatment responses, Rank2AllocationRatio corresponds treatment second-responses. Refer table definitions user-defined parameters used example. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/TreatmentSelection.html","id":"example-4---selection-based-on-bayesian-posterior-probabilities","dir":"Articles","previous_headings":"","what":"Example 4 - Selection Based on Bayesian Posterior Probabilities","title":"Multiarm, Binary Outcome - Treatment Selection","text":"example related R file: SelectExpUsingBayesianRule.R example, interim analysis: Bayesian model used evaluate experimental treatment. let pjp_j denote probability response treatment jj, j=1,2,3j = 1, 2, 3. prior distribution defined pj∼Beta(dPriorAlpha,dPriorBeta)p_j \\sim \\text{Beta}( \\text{dPriorAlpha}, \\text{dPriorBeta} ). select treatment jj least user-specified probability (dMinPosteriorProbability) greater user-specified historical response rate (dHistoricResponseRate). Specifically, meets criterion: Pr(pj>dHistoricResponseRate∣data)>dMinPosteriorProbability\\Pr( p_j > \\text{dHistoricResponseRate} \\mid \\text{data} ) > \\text{dMinPosteriorProbability}. treatment meets threshold, select treatment highest posterior probability exceeding historical response rate. stage 2, 2:1 randomization ratio (experimental:control) applied selected treatment. Refer table definitions user-defined parameters used example. figure illustrates example fits within R integration points Cytel products, accompanied flowchart outlining general steps performed R code.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/VariablesOfDesignParam.html","id":"for-endpoint-type-dual-tte-tte-or-tte-binary-including-for-multiplicity-adjustment","dir":"Articles","previous_headings":"For Study Objective = Two Arm Confirmatory","what":"For Endpoint Type = Dual (TTE-TTE or TTE-Binary) (including for Multiplicity Adjustment)","title":"Variables of DesignParam","text":"Notes: Dual endpoints available East Horizon: Design. “Endpoint 1” used sample endpoint name. actual endpoint name specified user.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/VariablesOfLookInfo.html","id":"for-endpoint-type-dual-tte-tte-or-tte-binary-including-for-multiplicity-adjustment","dir":"Articles","previous_headings":"For Study Objective = Two Arm Confirmatory","what":"For Endpoint Type = Dual (TTE-TTE or TTE-Binary) (including for Multiplicity Adjustment)","title":"Variables of LookInfo","text":"Named List length equal number endpoints, indicating trial type endpoint. example, TrialType[“Endpoint 1”] type Endpoint 1. Notes: Dual endpoints available East Horizon: Design. “Endpoint 1” used sample endpoint name. actual endpoint name specified user.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/articles/VariablesOfSimData.html","id":"variables-of-simdata","dir":"Articles","previous_headings":"","what":"Variables of SimData","title":"Variables of SimData","text":"variables SimData created data generation depend current simulation. stores outputs produced integration points response, enrollment, dropout, randomization. optional custom outputs defined endpoint also included columns data frame. Common useful variables include:","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"J. Kyle Wathen. Author, maintainer. Valeria . G. Mazzanti. Author. Gabriel Potvin. Author. Anoop Singh Rawat. Contributor. Julija Saltane. Contributor.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wathen J, Mazzanti V, Potvin G (2025). CyneRgy: CyneRgy - Integration Cytel Products R. R package version 1.1.8, https://Cytel-Inc.github.io/CyneRgy.","code":"@Manual{,   title = {CyneRgy: CyneRgy - Integration for Cytel Products and R},   author = {J. Kyle Wathen and Valeria A. G. Mazzanti and Gabriel Potvin},   year = {2025},   note = {R package version 1.1.8},   url = {https://Cytel-Inc.github.io/CyneRgy}, }"},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"CyneRgy - Integration for Cytel Products and R","text":"R integration Cytel’s products provides highly efficient way create custom adaptive clinical trial designs enhance simulation capabilities, without requiring develop entire R code base. CyneRgy R package demonstrates synergy R Cytel’s products East Horizon, providing tools, documentation, templates, examples. also offers streamlined R experience RStudio, simplifying creation new custom scripts.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"CyneRgy - Integration for Cytel Products and R","text":"quick start, visit Getting Started section. guide covers basics integrating R scripts Cytel’s products, including detailed steps accessing integration points, input variables available, output variables expected, links related templates examples.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/index.html","id":"examples-and-templates","dir":"","previous_headings":"","what":"Examples and Templates","title":"CyneRgy - Integration for Cytel Products and R","text":"variety examples highlighting R scripts can seamlessly integrate Cytel’s simulation tools can found package. Please see Examples Outline complete list examples descriptions. example directory provides: RStudio project file setup. Description file detailing example. R folder contains example R scripts. FillInTheBlankR folder contains practice scripts sections removed hands-learning. Templates available Templates directory, exploratory, -progress examples can found Sandbox directory. Note Sandbox examples incomplete untested.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/index.html","id":"functions","dir":"","previous_headings":"","what":"Functions","title":"CyneRgy - Integration for Cytel Products and R","text":"CyneRgy package also provides many built-functions facilitate creation custom R scripts. complete list available functions, see References.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CyneRgy - Integration for Cytel Products and R","text":"Currently, package officially released available CRAN. However, may installed directly GitHub using remotes package following code: must remotes package use command. launch examples, also need rstudioapi package.","code":"remotes::install_github( \"Cytel-Inc/CyneRgy@main\" )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AddUnrenderToList.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Unrendered Tags to List — AddUnrenderToList","title":"Add Unrendered Tags to List — AddUnrenderToList","text":"function used internally. scans template string tags format {{tag}} adds tags already present provided list list, assigning unrendered form ({{tag}}) value.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AddUnrenderToList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Unrendered Tags to List — AddUnrenderToList","text":"","code":"AddUnrenderToList(sTemplate, lList)"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AddUnrenderToList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Unrendered Tags to List — AddUnrenderToList","text":"sTemplate string template may contain tags form {{tag}}. lList named list existing tag-value pairs. function overwrite existing keys.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AddUnrenderToList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Unrendered Tags to List — AddUnrenderToList","text":"named list original elements lList, plus new tags found template already included.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingBetaBinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Binary Data Using Beta-Binomial Model — AnalyzeBinaryUsingBetaBinomial","title":"Analyze Binary Data Using Beta-Binomial Model — AnalyzeBinaryUsingBetaBinomial","text":"Perform analysis efficacy using Beta(\\(\\alpha\\), \\(\\beta\\)) prior compute posterior probability experimental treatment better control treatment care. analysis assumes Bayesian model uses posterior probabilities decision-making: Efficacy: \\(Pr(\\pi_{Exp} > \\pi_{Ctrl} | \\text{data}) > \\text{Upper Cutoff Efficacy}\\), declare efficacy. Futility: \\(Pr(\\pi_{Exp} > \\pi_{Ctrl} | \\text{data}) < \\text{Lower Cutoff Futility}\\), declare futility. final analysis (FA): Declare efficacy futility based posterior probability. simulating null case, setting \\(dLowerCutoffForFutility = 0\\) provides false-positive rate non-binding futility rule. Setting \\(dLowerCutoffForFutility > 0\\) provides operating characteristics (OC) binding futility rule, rule always followed.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingBetaBinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Binary Data Using Beta-Binomial Model — AnalyzeBinaryUsingBetaBinomial","text":"","code":"AnalyzeBinaryUsingBetaBinomial(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingBetaBinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Binary Data Using Beta-Binomial Model — AnalyzeBinaryUsingBetaBinomial","text":"SimData data frame containing data generated current simulation. DesignParam list input parameters necessary compute test statistic perform test. Variables accessed using names (e.g., DesignParam$Alpha). LookInfo list input parameters related multiple looks group sequential designs. Variables accessed names (e.g., LookInfo$NumLooks). Important variables include: LookInfo$NumLooks: Integer, number looks study. LookInfo$CurrLookIndex: Integer, current look index (starting 1). LookInfo$CumEvents: Vector, cumulative number events look. LookInfo$RejType: Code representing rejection types. Possible values include: Efficacy : 0: 1-Sided Efficacy Upper. 2: 1-Sided Efficacy Lower. Futility : 1: 1-Sided Futility Upper. 3: 1-Sided Futility Lower. Efficacy Futility: 4: 1-Sided Efficacy Upper Futility Lower. 5: 1-Sided Efficacy Lower Futility Upper. UserParam list user-defined parameters. Must contain following named elements: dAlphaCtrl Prior alpha parameter control treatment (prior successes). dBetaCtrl Prior beta parameter control treatment (prior failures). dAlphaExp Prior alpha parameter experimental treatment (prior successes). dBetaExp Prior beta parameter experimental treatment (prior failures). dUpperCutoffEfficacy Upper cutoff (0,1) efficacy check. value declares efficacy. dLowerCutoffForFutility Lower cutoff (0,1) futility check. value declares futility. specified, Beta(1, 1) prior used control experimental treatments.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingBetaBinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Binary Data Using Beta-Binomial Model — AnalyzeBinaryUsingBetaBinomial","text":"list containing following elements: TestStat double representing computed test statistic. Decision Required integer value indicating decision made: 0 boundary crossed (neither efficacy futility). 1 Lower efficacy boundary crossed. 2 Upper efficacy boundary crossed. 3 Futility boundary crossed. 4 Equivalence boundary crossed. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted. Delta Estimated difference experimental control treatments.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingEastManualFormula.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Binary Data Using Formula 28.2 from the East Manual — AnalyzeBinaryUsingEastManualFormula","title":"Analyze Binary Data Using Formula 28.2 from the East Manual — AnalyzeBinaryUsingEastManualFormula","text":"function computes test statistic using formula 28.2 East manual, designed analyzing binary data group sequential designs. demonstrates analysis decision-making can customized simple approach. test statistic compared upper efficacy boundary provided East East Horizon input. Note example include futility rule.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingEastManualFormula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Binary Data Using Formula 28.2 from the East Manual — AnalyzeBinaryUsingEastManualFormula","text":"","code":"AnalyzeBinaryUsingEastManualFormula(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingEastManualFormula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Binary Data Using Formula 28.2 from the East Manual — AnalyzeBinaryUsingEastManualFormula","text":"SimData data frame containing data generated current simulation. DesignParam list design simulation parameters required analysis. LookInfo list input parameters related multiple looks group sequential designs. Variables accessed names (e.g., LookInfo$NumLooks). Important variables include: LookInfo$NumLooks: Integer, number looks study. LookInfo$CurrLookIndex: Integer, current look index (starting 1). LookInfo$CumEvents: Vector, cumulative number events look. LookInfo$RejType: Code representing rejection types. Possible values include: Efficacy : 0: 1-Sided Efficacy Upper. 2: 1-Sided Efficacy Lower. Futility : 1: 1-Sided Futility Upper. 3: 1-Sided Futility Lower. Efficacy Futility: 4: 1-Sided Efficacy Upper Futility Lower. 5: 1-Sided Efficacy Lower Futility Upper. UserParam list user-defined parameters provided East East Horizon. Defaults NULL. example, user-defined parameters included.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingEastManualFormula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Binary Data Using Formula 28.2 from the East Manual — AnalyzeBinaryUsingEastManualFormula","text":"list containing following elements: TestStat double representing computed test statistic. Decision Required integer value indicating decision made: 0 boundary crossed (neither efficacy futility). 1 Lower efficacy boundary crossed. 2 Upper efficacy boundary crossed. 3 Futility boundary crossed. 4 Equivalence boundary crossed. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted. Delta Estimated difference experimental control treatments.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingPropLimitsOfCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Binary Data Using Proportion Limits of Confidence Interval — AnalyzeBinaryUsingPropLimitsOfCI","title":"Analyze Binary Data Using Proportion Limits of Confidence Interval — AnalyzeBinaryUsingPropLimitsOfCI","text":"function analyzes binary data using simplified confidence interval (CI) limits design. determines whether make \"Go\" \"Go\" decision based treatment difference user-specified thresholds CI lower upper limits. analysis uses prop.test function base R compute CIs user-defined confidence level. decision logic follows: lower limit (LL) CI greater UserParam$dLowerLimit, \"Go\" decision made. \"Go\" decision made, upper limit (UL) CI less UserParam$dUpperLimit, \"Go\" decision made. Otherwise, continue next analysis. final analysis: LL > UserParam$dLowerLimit, \"Go\" decision made. Otherwise, \"Go\" decision made.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingPropLimitsOfCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Binary Data Using Proportion Limits of Confidence Interval — AnalyzeBinaryUsingPropLimitsOfCI","text":"","code":"AnalyzeBinaryUsingPropLimitsOfCI(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingPropLimitsOfCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Binary Data Using Proportion Limits of Confidence Interval — AnalyzeBinaryUsingPropLimitsOfCI","text":"SimData data frame containing data generated current simulation. DesignParam list design simulation parameters required analysis. LookInfo list containing input parameters related multiple looks, used compute test statistics perform tests. Important variables include: LookInfo$NumLooks: Integer, number looks study. LookInfo$CurrLookIndex: Integer, current look index (starting 1). LookInfo$CumEvents: Vector, cumulative number events look. LookInfo$RejType: Code representing rejection types. Possible values include: Efficacy : 0: 1-Sided Efficacy Upper. 2: 1-Sided Efficacy Lower. Futility : 1: 1-Sided Futility Upper. 3: 1-Sided Futility Lower. Efficacy Futility: 4: 1-Sided Efficacy Upper Futility Lower. 5: 1-Sided Efficacy Lower Futility Upper. UserParam list user-defined parameters following required elements: dLowerLimit value (0,1) specifying lower limit, e.g., Minimum Acceptable Value (MAV). dUpperLimit value (0,1) specifying upper limit confidence interval, e.g., Target Value (TV). dConfLevel value (0,1) specifying confidence level prop.test function.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingPropLimitsOfCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Binary Data Using Proportion Limits of Confidence Interval — AnalyzeBinaryUsingPropLimitsOfCI","text":"list containing following elements: TestStat double representing computed test statistic. Decision Required integer value indicating decision made: 0 boundary crossed (neither efficacy futility). 1 Lower efficacy boundary crossed. 2 Upper efficacy boundary crossed. 3 Futility boundary crossed. 4 Equivalence boundary crossed. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted. Delta Estimated difference experimental control treatments.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingPropLimitsOfCI.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Analyze Binary Data Using Proportion Limits of Confidence Interval — AnalyzeBinaryUsingPropLimitsOfCI","text":"example, boundary information computed sent East East Horizon ignored implement decision approach.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingPropTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Binary Data Using the prop.test Function — AnalyzeBinaryUsingPropTest","title":"Analyze Binary Data Using the prop.test Function — AnalyzeBinaryUsingPropTest","text":"function analyzes binary data using prop.test function base R. calculated p-value prop.test used compute Z statistic, compared upper boundary provided input East. Note example include futility rule.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingPropTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Binary Data Using the prop.test Function — AnalyzeBinaryUsingPropTest","text":"","code":"AnalyzeBinaryUsingPropTest(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingPropTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Binary Data Using the prop.test Function — AnalyzeBinaryUsingPropTest","text":"SimData Data frame containing data generated current simulation. DesignParam List design simulation parameters required perform analysis. LookInfo list containing input parameters related multiple looks, user may need compute test statistics perform tests. Users access variables using names (e.g., LookInfo$NumLooks) rather order. Important variables group sequential designs include: LookInfo$NumLooks: Integer, number looks study. LookInfo$CurrLookIndex: Integer, current look index (starting 1). LookInfo$CumEvents: Vector, cumulative number events look. LookInfo$RejType: Code representing rejection types. Possible values include: Efficacy : 0: 1-Sided Efficacy Upper. 2: 1-Sided Efficacy Lower. Futility : 1: 1-Sided Futility Upper. 3: 1-Sided Futility Lower. Efficacy Futility: 4: 1-Sided Efficacy Upper Futility Lower. 5: 1-Sided Efficacy Lower Futility Upper. UserParam list user-defined parameters East East Horizon. Default NULL. user parameters defined example.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeBinaryUsingPropTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Binary Data Using the prop.test Function — AnalyzeBinaryUsingPropTest","text":"list containing following elements: TestStat double representing computed test statistic. Decision Required integer value indicating decision made: 0 boundary crossed (neither efficacy futility). 1 Lower efficacy boundary crossed. 2 Upper efficacy boundary crossed. 3 Futility boundary crossed. 4 Equivalence boundary crossed. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingEastManualFormula.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Continuous Data Using East Manual Formula — AnalyzeContinuousUsingEastManualFormula","title":"Analyze Continuous Data Using East Manual Formula — AnalyzeContinuousUsingEastManualFormula","text":"Compute test statistic using formula Q.3.3 East manual. example demonstrates analysis decision-making can modified simple approach. test statistic compared upper boundary computed sent East East Horizon input. Note example include futility rule. performs two-sample Z test normal distribution assumption number looks greater one.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingEastManualFormula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Continuous Data Using East Manual Formula — AnalyzeContinuousUsingEastManualFormula","text":"","code":"AnalyzeContinuousUsingEastManualFormula(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingEastManualFormula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Continuous Data Using East Manual Formula — AnalyzeContinuousUsingEastManualFormula","text":"SimData Data frame consisting data generated current simulation. DesignParam List design simulation parameters required perform analysis. LookInfo list input parameters related multiple looks group sequential designs. Variables accessed names (e.g., LookInfo$NumLooks). Important variables include: LookInfo$NumLooks: Integer, number looks study. LookInfo$CurrLookIndex: Integer, current look index (starting 1). LookInfo$CumEvents: Vector, cumulative number events look. LookInfo$RejType: Code representing rejection types. Possible values include: Efficacy : 0: 1-Sided Efficacy Upper. 2: 1-Sided Efficacy Lower. Futility : 1: 1-Sided Futility Upper. 3: 1-Sided Futility Lower. Efficacy Futility: 4: 1-Sided Efficacy Upper Futility Lower. 5: 1-Sided Efficacy Lower Futility Upper. UserParam list user-defined parameters East East Horizon. default NULL. example, user-defined parameters included.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingEastManualFormula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Continuous Data Using East Manual Formula — AnalyzeContinuousUsingEastManualFormula","text":"list containing following elements: TestStat double representing computed test statistic. Decision Required integer value indicating decision made: 0 boundary crossed (neither efficacy futility). 1 Lower efficacy boundary crossed. 2 Upper efficacy boundary crossed. 3 Futility boundary crossed. 4 Equivalence boundary crossed. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingMeanLimitsOfCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Continuous Data Using Mean Limits of Confidence Interval — AnalyzeContinuousUsingMeanLimitsOfCI","title":"Analyze Continuous Data Using Mean Limits of Confidence Interval — AnalyzeContinuousUsingMeanLimitsOfCI","text":"function performs analysis using simplified limits confidence interval design continuous outcomes. analysis determines whether \"Go\" \"-Go\" decision made based lower upper limits user-specified confidence interval. uses t.test function base R library compute confidence interval. decision-making process based following logic: lower limit confidence interval (LL) greater Minimum Acceptable Value (MAV), \"Go\" decision made. \"Go\" decision made, upper limit confidence interval (UL) less Target Value (TV), \"-Go\" decision made. Otherwise, continue next analysis. final analysis, LL > MAV, \"Go\" decision made; otherwise, \"-Go\" decision made. function assumes MAV ≤ TV ignores boundary information sent East East Horizon implement decision approach.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingMeanLimitsOfCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Continuous Data Using Mean Limits of Confidence Interval — AnalyzeContinuousUsingMeanLimitsOfCI","text":"","code":"AnalyzeContinuousUsingMeanLimitsOfCI(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingMeanLimitsOfCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Continuous Data Using Mean Limits of Confidence Interval — AnalyzeContinuousUsingMeanLimitsOfCI","text":"SimData Data frame consisting data generated current simulation. DesignParam List design simulation parameters required perform analysis. LookInfo list input parameters related multiple looks group sequential designs. Variables accessed names (e.g., LookInfo$NumLooks). Important variables include: LookInfo$NumLooks: Integer, number looks study. LookInfo$CurrLookIndex: Integer, current look index (starting 1). LookInfo$CumEvents: Vector, cumulative number events look. LookInfo$RejType: Code representing rejection types. Possible values include: Efficacy : 0: 1-Sided Efficacy Upper. 2: 1-Sided Efficacy Lower. Futility : 1: 1-Sided Futility Upper. 3: 1-Sided Futility Lower. Efficacy Futility: 4: 1-Sided Efficacy Upper Futility Lower. 5: 1-Sided Efficacy Lower Futility Upper. UserParam list user-defined parameters. Must contain following named elements: UserParam$dMAV Numeric; specifies Minimum Acceptable Value (MAV). UserParam$dTV Numeric; specifies Target Value (TV). UserParam$dConfLevel Numeric (0,1); specifies confidence level t.test() function.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingMeanLimitsOfCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Continuous Data Using Mean Limits of Confidence Interval — AnalyzeContinuousUsingMeanLimitsOfCI","text":"list containing following elements: TestStat double representing computed test statistic. Decision Required integer value indicating decision made: 0 boundary crossed (neither efficacy futility). 1 Lower efficacy boundary crossed. 2 Upper efficacy boundary crossed. 3 Futility boundary crossed. 4 Equivalence boundary crossed. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted. Delta Estimated difference experimental control treatments.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingMeanLimitsOfCI.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Analyze Continuous Data Using Mean Limits of Confidence Interval — AnalyzeContinuousUsingMeanLimitsOfCI","text":"function applicable MAV ≤ TV.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingTTestNormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Continuous Data Using t-Test — AnalyzeContinuousUsingTTestNormal","title":"Analyze Continuous Data Using t-Test — AnalyzeContinuousUsingTTestNormal","text":"Performs hypothesis testing using t.test() function base R analyze continuous data assumption normal distribution. function demonstrates analysis decision-making can modified simple approach. test statistic compared upper boundary computed sent East input. Note example include futility rule.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingTTestNormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Continuous Data Using t-Test — AnalyzeContinuousUsingTTestNormal","text":"","code":"AnalyzeContinuousUsingTTestNormal(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingTTestNormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Continuous Data Using t-Test — AnalyzeContinuousUsingTTestNormal","text":"SimData Data frame contains simulated data current simulation. DesignParam List design simulation parameters required perform analysis. LookInfo list input parameters related multiple looks group sequential designs. Variables accessed names (e.g., LookInfo$NumLooks). Important variables include: LookInfo$NumLooks: Integer, number looks study. LookInfo$CurrLookIndex: Integer, current look index (starting 1). LookInfo$CumEvents: Vector, cumulative number events look. LookInfo$RejType: Code representing rejection types. Possible values include: Efficacy : 0: 1-Sided Efficacy Upper. 2: 1-Sided Efficacy Lower. Futility : 1: 1-Sided Futility Upper. 3: 1-Sided Futility Lower. Efficacy Futility: 4: 1-Sided Efficacy Upper Futility Lower. 5: 1-Sided Efficacy Lower Futility Upper. UserParam list user-defined parameters East East Horizon. default NULL. example, user-defined parameters included.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeContinuousUsingTTestNormal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Continuous Data Using t-Test — AnalyzeContinuousUsingTTestNormal","text":"list containing following elements: TestStat double representing computed test statistic. Decision Required integer value indicating decision made: 0 boundary crossed (neither efficacy futility). 1 Lower efficacy boundary crossed. 2 Upper efficacy boundary crossed. 3 Futility boundary crossed. 4 Equivalence boundary crossed. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeTTEUsingHazardRatioLimitsOfCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Time-to-Event Data Using Hazard Ratio Limits of Confidence Interval — AnalyzeTTEUsingHazardRatioLimitsOfCI","title":"Analyze Time-to-Event Data Using Hazard Ratio Limits of Confidence Interval — AnalyzeTTEUsingHazardRatioLimitsOfCI","text":"function analyzes time--event data using simplified design based upper lower confidence boundaries hazard ratios (HR). determines whether make \"Go\" \"Go\" decision assessing likelihood HR specified limits. Specifically, function utilizes coxph() model survival package estimate log hazard ratio standard error. decision-making process follows: upper limit (UL) confidence interval Minimum Acceptable Value (MAV), \"Go\" decision made. lower limit (LL) confidence interval Target Value (TV), \"Go\" decision made. Otherwise, analysis continues next look. final analysis: UL < MAV, \"Go\" decision made. Otherwise, \"Go\" decision made. HR log HR monotonically related. Since coxph() outputs results log HR, function uses log HR scale decision-making.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeTTEUsingHazardRatioLimitsOfCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Time-to-Event Data Using Hazard Ratio Limits of Confidence Interval — AnalyzeTTEUsingHazardRatioLimitsOfCI","text":"","code":"AnalyzeTTEUsingHazardRatioLimitsOfCI(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeTTEUsingHazardRatioLimitsOfCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Time-to-Event Data Using Hazard Ratio Limits of Confidence Interval — AnalyzeTTEUsingHazardRatioLimitsOfCI","text":"SimData Data frame consisting data generated current simulation. DesignParam List design simulation parameters required perform analysis. LookInfo list containing input parameters related multiple looks. Users access variables using names, : LookInfo$NumLooks: Integer representing number looks study. LookInfo$CurrLookIndex: Integer representing current index look, starting 1. LookInfo$CumEvents: Vector cumulative number events look. LookInfo$RejType: Code representing rejection types, possible values: Efficacy : 0: 1-Sided Efficacy Upper. 2: 1-Sided Efficacy Lower. Futility : 1: 1-Sided Futility Upper. 3: 1-Sided Futility Lower. Efficacy Futility: 4: 1-Sided Efficacy Upper Futility Lower. 5: 1-Sided Efficacy Lower Futility Upper. UserParam list user-defined parameters. Must contain following named elements: UserParam$dMAV Numeric; specifies Minimum Acceptable Value (MAV). UserParam$dTV Numeric; specifies Target Value (TV). UserParam$dConfLevel Numeric (0,1); specifies confidence level t.test() function.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/AnalyzeTTEUsingHazardRatioLimitsOfCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Time-to-Event Data Using Hazard Ratio Limits of Confidence Interval — AnalyzeTTEUsingHazardRatioLimitsOfCI","text":"list containing following elements: HazardRatio double representing computed hazard ratio. Decision Required integer value indicating decision made: 0 boundary crossed (neither efficacy futility). 1 Lower efficacy boundary crossed. 2 Upper efficacy boundary crossed. 3 Futility boundary crossed. 4 Equivalence boundary crossed. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CombineAllRFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine All R Files — CombineAllRFiles","title":"Combine All R Files — CombineAllRFiles","text":"function combines contents R files specified directory one file. also replaces sequence one # characters single #.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CombineAllRFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine All R Files — CombineAllRFiles","text":"","code":"CombineAllRFiles(   strOutFileName = NA,   strDirectory = \"\",   strFileNameToIgnore = NA )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CombineAllRFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine All R Files — CombineAllRFiles","text":"strOutFileName name output file. provided, function return combined content. strDirectory directory R files located. Defaults current working directory. strFileNameToIgnore name file ignored combination process. Defaults NA.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CombineAllRFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine All R Files — CombineAllRFiles","text":"list containing following elements: nQtyCombinedFiles number files combined. strCombinedContents combined content R files (strOutFileName NA). strReturn string summarizing operation, including names combined files.","code":""},{"path":[]},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CombineAllRFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine All R Files — CombineAllRFiles","text":"","code":"if (FALSE) { # \\dontrun{   result <- CombineAllRFiles(strOutFileName = \"combined.R\", strDirectory = \"/path/to/your/directory\")   print(result$strReturn) } # }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeBayesianPredictiveProbabilityWithBayesianAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Bayesian Predictive Probability of Success — ComputeBayesianPredictiveProbabilityWithBayesianAnalysis","title":"Compute Bayesian Predictive Probability of Success — ComputeBayesianPredictiveProbabilityWithBayesianAnalysis","text":"Function compute Bayesian predictive probability success clinical trial using Bayesian analysis. function simulates future patient outcomes based posterior distributions derived observed interim data evaluates probability trial success end.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeBayesianPredictiveProbabilityWithBayesianAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Bayesian Predictive Probability of Success — ComputeBayesianPredictiveProbabilityWithBayesianAnalysis","text":"","code":"ComputeBayesianPredictiveProbabilityWithBayesianAnalysis(   dataS,   dataE,   priorAlphaS,   priorBetaS,   priorAlphaE,   priorBetaE,   nQtyOfPatsS,   nQtyOfPatsE,   nSimulations,   finalBoundary,   lAnalysisParams )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeBayesianPredictiveProbabilityWithBayesianAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Bayesian Predictive Probability of Success — ComputeBayesianPredictiveProbabilityWithBayesianAnalysis","text":"dataS vector binary outcomes (0 1) control treatment observed interim analysis. dataE vector binary outcomes (0 1) experimental treatment observed interim analysis. priorAlphaS alpha parameter Beta prior control treatment. priorBetaS beta parameter Beta prior control treatment. priorAlphaE alpha parameter Beta prior experimental treatment. priorBetaE beta parameter Beta prior experimental treatment. nQtyOfPatsS total number patients control treatment expected end trial. nQtyOfPatsE total number patients experimental treatment expected end trial. nSimulations number virtual trials simulate predictive probability computation. finalBoundary cutoff threshold posterior probability determine trial success. lAnalysisParams list analysis parameters posterior computation, including priors control experimental treatments.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeBayesianPredictiveProbabilityWithBayesianAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Bayesian Predictive Probability of Success — ComputeBayesianPredictiveProbabilityWithBayesianAnalysis","text":"list containing: predictiveProbabilityS Bayesian predictive probability trial success.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeBayesianPredictiveProbabilityWithBayesianAnalysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Bayesian Predictive Probability of Success — ComputeBayesianPredictiveProbabilityWithBayesianAnalysis","text":"function computes Bayesian predictive probability success clinical trial. uses observed interim data update Beta priors posterior distributions success probabilities control experimental treatments. Future patient outcomes simulated based posteriors, trial success evaluated based probability experimental treatment higher success rate control treatment. predictive probability calculated proportion simulated trials meeting success criteria.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeDEPAnalysisTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Analysis Time for Dual Endpoint (DEP) Designs — ComputeDEPAnalysisTime","title":"Compute Analysis Time for Dual Endpoint (DEP) Designs — ComputeDEPAnalysisTime","text":"Computes calendar analysis time trials one two endpoints, supporting Fixed Sample Designs Group Sequential Designs. function determines planned number events completers reached based simulated trial data design parameters. Group Sequential Designs, analysis time determined according current interim look synchronization endpoint. Fixed Sample Designs, analysis time corresponds final look required events completers observed.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeDEPAnalysisTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Analysis Time for Dual Endpoint (DEP) Designs — ComputeDEPAnalysisTime","text":"","code":"ComputeDEPAnalysisTime(SimData, DesignParam, LookInfo = NULL)"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeDEPAnalysisTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Analysis Time for Dual Endpoint (DEP) Designs — ComputeDEPAnalysisTime","text":"SimData data frame containing simulated subject-level data following required columns: ClndrRespTime Response times Endpoint 1. CensorIndOrg Censoring indicators Endpoint 1. ClndrRespTime2 Response times Endpoint 2. CensorIndOrg2 Censoring indicators Endpoint 2. DesignParam list design parameters containing: EndpointType Numeric vector specifying endpoint types (1 = completer, 2 = event). EndpointName Character vector endpoint names. PlanEndTrial Integer specifying endpoint(s) define trial end: 1 endpoints. 2 Endpoint 1 . 3 Endpoint 2 . MaxCompleters List target numbers completers endpoint. MaxEvents List target numbers events endpoint. SampleSize Total sample size. LookInfo Optional list specifying Group Sequential Design information (default = NULL). provided, indicates GSD used must include: SyncInterim Endpoint ID used interim look positioning. NumLooks Total number looks planned. CurrLookIndex Current look index. NumEndpointLooks Numeric vector giving number looks per endpoint. CumEvents List cumulative event targets per endpoint. CumCompleters List cumulative completer targets per endpoint.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeDEPAnalysisTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Analysis Time for Dual Endpoint (DEP) Designs — ComputeDEPAnalysisTime","text":"numeric value representing calendar analysis time (units ClndrRespTime).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeHazardWeibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Hazard of Weibull Distribution — ComputeHazardWeibull","title":"Compute Hazard of Weibull Distribution — ComputeHazardWeibull","text":"Function compute hazard Weibull distribution.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeHazardWeibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Hazard of Weibull Distribution — ComputeHazardWeibull","text":"","code":"ComputeHazardWeibull(vTime, dShape, dScale)"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeHazardWeibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Hazard of Weibull Distribution — ComputeHazardWeibull","text":"vTime vector times compute hazard Weibull distribution. dShape shape parameter Weibull distribution. See rweibull. dScale scale parameter Weibull distribution. See rweibull.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeScaleGivenShapeMedian.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Weibull scale parameter — ComputeScaleGivenShapeMedian","title":"Compute Weibull scale parameter — ComputeScaleGivenShapeMedian","text":"Compute scale parameter Weibull distribution given median (dMedian) shape parameter (dShape).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeScaleGivenShapeMedian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Weibull scale parameter — ComputeScaleGivenShapeMedian","text":"","code":"ComputeScaleGivenShapeMedian(dShape, dMedian)"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ComputeScaleGivenShapeMedian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Weibull scale parameter — ComputeScaleGivenShapeMedian","text":"dShape shape parameter Weibull distribution. dMedian median Weibull distribution.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CreateCyneRgyExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a New CyneRgy Example Using Templates — CreateCyneRgyExample","title":"Create a New CyneRgy Example Using Templates — CreateCyneRgyExample","text":"function creates new directory containing necessary files desired CyneRgy template. directory can used connection Cytel-R integration.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CreateCyneRgyExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a New CyneRgy Example Using Templates — CreateCyneRgyExample","text":"","code":"CreateCyneRgyExample(   strFunctionType,   strNewExampleName = \"\",   strDirectory = NA )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CreateCyneRgyExample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a New CyneRgy Example Using Templates — CreateCyneRgyExample","text":"strFunctionType type CyneRgy template use. Must valid template name. strNewExampleName string representing name new example directory. Defaults empty string. strDirectory directory path example created. provided, current working directory used.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CreateCyneRgyExample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a New CyneRgy Example Using Templates — CreateCyneRgyExample","text":"Creates specified example directory files within provided default directory path.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CreateCyneRgyFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a CyneRgy Function Template — CreateCyneRgyFunction","title":"Create a CyneRgy Function Template — CreateCyneRgyFunction","text":"function generates new R script file containing template CyneRgy function, can integrated Cytel products. template selected based provided function type.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CreateCyneRgyFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a CyneRgy Function Template — CreateCyneRgyFunction","text":"","code":"CreateCyneRgyFunction(   strFunctionType = \"\",   strNewFunctionName = NA,   strDirectory = NA,   bOpen = TRUE )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CreateCyneRgyFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a CyneRgy Function Template — CreateCyneRgyFunction","text":"strFunctionType string specifying type function create. determines integration template use. Valid values strFunctionType can obtained available templates. strNewFunctionName name new function created. also determines name resulting file, named [strNewFunctionName].R. value provided, default name derived strFunctionType. strDirectory directory new file created. provided, file created current working directory. sub-directory name also created exist. bOpen Logical value (TRUE/FALSE). TRUE, newly created file opened RStudio using RStudio API (works RStudio). FALSE, file created opened.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/CreateCyneRgyFunction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a CyneRgy Function Template — CreateCyneRgyFunction","text":"","code":"if (FALSE) { # \\dontrun{ CreateCyneRgyFunction()  # Run without arguments to see valid options for `strFunctionType`.  # Example: Create a new file named `NewBinaryAnalysis.R` using the `Analyze.Binary` template. CreateCyneRgyFunction(\"Analyze.Binary\", \"NewBinaryAnalysis\") } # }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/GetDecision.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine Decision Based on Decision String, Design and Look Information — GetDecision","title":"Determine Decision Based on Decision String, Design and Look Information — GetDecision","text":"function takes string indicating desired decision (\"Efficacy\", \"Futility\", \"Continue\"), design parameters, look information, returns appropriate decision value. LookInfo NULL, function uses LookInfo$RejType help determine design type: LookInfo$RejType Codes: Efficacy : 1-Sided Efficacy Upper = 0 1-Sided Efficacy Lower = 2 Futility : 1-Sided Futility Upper = 1 1-Sided Futility Lower = 3 Efficacy Futility: 1-Sided Efficacy Upper & Futility Lower = 4 1-Sided Efficacy Lower & Futility Upper = 5 Additional Scenarios East Horizon Explore: 2-Sided Efficacy = 6 2-Sided Futility = 7 2-Sided Efficacy & Futility = 8 Equivalence = 9 function also uses DesignParam$TailType determine tail direction: 0: Left-tailed 1: Right-tailed Based design type tail direction, function evaluates decision returns corresponding integer decision value. Errors raised invalid input combinations.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/GetDecision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine Decision Based on Decision String, Design and Look Information — GetDecision","text":"","code":"GetDecision(strDecision, DesignParam, LookInfo)"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/GetDecision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine Decision Based on Decision String, Design and Look Information — GetDecision","text":"strDecision string indicating desired decision: \"Efficacy\", \"Futility\", \"Continue\". DesignParam list containing design parameters sent East Horizon Explore R integration analysis. LookInfo list containing look information sent East Horizon Explore R integration analysis.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/GetDecisionString.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Decision String Based on Interim and Final Analysis Conditions — GetDecisionString","title":"Generate Decision String Based on Interim and Final Analysis Conditions — GetDecisionString","text":"function evaluates look information, efficacy conditions, futility conditions generate decision string (strDecision) required GetDecision function. LookInfo NULL, LookInfo$RejType parameter can used determine design type. LookInfo$RejType Codes: Efficacy : 1-Sided Efficacy Upper = 0 1-Sided Efficacy Lower = 2 Futility : 1-Sided Futility Upper = 1 1-Sided Futility Lower = 3 Efficacy Futility: 1-Sided Efficacy Upper Futility Lower = 4 1-Sided Efficacy Lower Futility Upper = 5 East Horizon Explore Yet: 2-Sided Efficacy = 6 2-Sided Futility = 7 2-Sided Efficacy Futility = 8 Equivalence = 9","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/GetDecisionString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Decision String Based on Interim and Final Analysis Conditions — GetDecisionString","text":"","code":"GetDecisionString(   LookInfo,   nLookIndex,   nQtyOfLooks,   bIAEfficacyCondition = FALSE,   bIAFutilityCondition = FALSE,   bFAEfficacyCondition = FALSE,   bFAFutilityCondition = FALSE )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/GetDecisionString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Decision String Based on Interim and Final Analysis Conditions — GetDecisionString","text":"LookInfo List containing look information passed East Horizon Explore R integration analysis. nLookIndex Integer indicating current look index, created user analysis code. nQtyOfLooks Integer indicating total number looks study, created user analysis code. bIAEfficacyCondition Logical condition evaluated determine interim efficacy look (defaults FALSE). bIAFutilityCondition Logical condition evaluated determine interim futility look (defaults FALSE). bFAEfficacyCondition Logical condition evaluated determine final efficacy last look (defaults FALSE). bFAFutilityCondition Logical condition evaluated determine final futility last look (defaults FALSE).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/InitLoadCyneRgy.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize CyneRgy Library for Simulations — InitLoadCyneRgy","title":"Initialize CyneRgy Library for Simulations — InitLoadCyneRgy","text":"Initialize function initializes R environment simulations. optional executed user-defined functions. Key functionalities include: Setting seed random number generation Loading required packages , CyneRgy library initialized.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/InitLoadCyneRgy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize CyneRgy Library for Simulations — InitLoadCyneRgy","text":"","code":"InitLoadCyneRgy(Seed, UserParam = NULL)"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/InitLoadCyneRgy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize CyneRgy Library for Simulations — InitLoadCyneRgy","text":"Seed integer value set seed used generating random numbers R. Default NULL. UserParam named list pass custom scalar variables defined users. Variables can accessed using names, e.g., UserParam$Var1. Default NULL.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/InitLoadCyneRgy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize CyneRgy Library for Simulations — InitLoadCyneRgy","text":"list containing: ErrorCode integer indicating success error status: ErrorCode = 0 error. ErrorCode > 0 Nonfatal error, current simulation aborted subsequent simulations run. ErrorCode < 0 Fatal error, simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/InitLoadCyneRgy.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Initialize CyneRgy Library for Simulations — InitLoadCyneRgy","text":"use install.packages attempt install new R packages East Horizon, fail. Please contact support install libraries.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/PlotExampleFlowchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Flowchart for a CyneRgy Example — PlotExampleFlowchart","title":"Generate a Flowchart for a CyneRgy Example — PlotExampleFlowchart","text":"function creates flowchart used integration points main steps CyneRgy R Integration example. Used integration points highlighted wider columns custom step boxes, unused points remain gray placeholders. Steps automatically wrapped fit.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/PlotExampleFlowchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Flowchart for a CyneRgy Example — PlotExampleFlowchart","text":"","code":"PlotExampleFlowchart(   lIntPoints = list(),   nBoxHeight = 0.7,   nBoxSpacing = 0.3,   nColumnWidth = 0.5,   nBigColWidth = 3,   bShowTreatmentSelection = FALSE,   bShowMultiplicityAdjustment = FALSE )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/PlotExampleFlowchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Flowchart for a CyneRgy Example — PlotExampleFlowchart","text":"lIntPoints named list name integration point (e.g., \"Response\") element character vector step labels integration point. Options: \"Initialization\", \"Enrollment\", \"Randomization\", \"Dropout\", \"Treatment Selection\", \"Response\", \"Analysis\", \"Multiplicity Adjustment\" nBoxHeight Numeric. Base height step box. Default = 0.7. nBoxSpacing Numeric. Vertical spacing boxes. Default = 0.3. nColumnWidth Numeric. Width unused integration point columns. Default = 0.5. nBigColWidth Numeric. Width used integration point columns. Default = 3. bShowTreatmentSelection Logical. Whether include \"Treatment Selection\" column. Default = FALSE. bShowMultiplicityAdjustment Logical. Whether include \"Multiplicity Adjustment\" column. Default = FALSE.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/PlotExampleFlowchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Flowchart for a CyneRgy Example — PlotExampleFlowchart","text":"ggplot object containing flowchart visualization.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/PlotExampleFlowchart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Flowchart for a CyneRgy Example — PlotExampleFlowchart","text":"","code":"if (FALSE) { # \\dontrun{ # Example with one used integration point p1 <- PlotExampleFlowchart(   lIntPoints = list(     \"Response\" = c(       \"Load MAV, TV, and confidence level\",       \"Run proportions test (treatment > control)\",       \"Calculate CI lower and upper limits\",       \"Return decision using CI thresholds\"     )   ) ) p1  # Example with two integration points p2 <- PlotExampleFlowchart(   lIntPoints = list(     \"Response\" = c(       \"Load MAV, TV, and confidence level\",       \"Run proportions test (treatment > control)\"     ),     \"Analysis\" = c(       \"Analyze PFS using Cox regression\",       \"Analyze OS using Cox regression\"     )   ) ) p2 } # }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ProbExpGreaterCtrlBeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Posterior Probability of Experimental Treatment Being Greater than Control — ProbExpGreaterCtrlBeta","title":"Compute Posterior Probability of Experimental Treatment Being Greater than Control — ProbExpGreaterCtrlBeta","text":"Function perform statistical analysis using Beta-Binomial Bayesian model. computes posterior probability success rate experimental treatment exceeds control treatment, based observed outcomes.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ProbExpGreaterCtrlBeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Posterior Probability of Experimental Treatment Being Greater than Control — ProbExpGreaterCtrlBeta","text":"","code":"ProbExpGreaterCtrlBeta(   vOutcomesS,   vOutcomesE,   dAlphaS,   dBetaS,   dAlphaE,   dBetaE )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ProbExpGreaterCtrlBeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Posterior Probability of Experimental Treatment Being Greater than Control — ProbExpGreaterCtrlBeta","text":"vOutcomesS vector binary outcomes (0 1) control treatment. vOutcomesE vector binary outcomes (0 1) experimental treatment. dAlphaS alpha parameter Beta prior control treatment. dBetaS beta parameter Beta prior control treatment. dAlphaE alpha parameter Beta prior experimental treatment. dBetaE beta parameter Beta prior experimental treatment.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ProbExpGreaterCtrlBeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Posterior Probability of Experimental Treatment Being Greater than Control — ProbExpGreaterCtrlBeta","text":"list containing: dPostProb posterior probability success rate experimental treatment greater control treatment.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ProbExpGreaterCtrlBeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Posterior Probability of Experimental Treatment Being Greater than Control — ProbExpGreaterCtrlBeta","text":"Beta-Binomial model, assumed probability success (\\(\\pi\\)) follows Beta distribution: \\(\\pi \\sim Beta(\\alpha, \\beta)\\). Given observed binary outcomes, posterior distribution \\(\\pi\\) : \\(\\pi | \\text{data} \\sim \\text{Beta}(\\alpha + \\text{\\# successes}, \\beta + \\text{\\# non-successes})\\). function samples posterior distributions success probabilities control experimental treatments, calculates posterior probability experimental treatment higher success rate control treatment.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ReplaceTagsInFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Tags in a File — ReplaceTagsInFile","title":"Replace Tags in a File — ReplaceTagsInFile","text":"function replaces tags template files corresponding values.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ReplaceTagsInFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Tags in a File — ReplaceTagsInFile","text":"","code":"ReplaceTagsInFile(strFileName, vTags, vReplace)"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ReplaceTagsInFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Tags in a File — ReplaceTagsInFile","text":"strFileName name file use input. Tags, defined tags, replaced corresponding values. vTags vector tag names, e.g., FUNCTION_NAME, VARIABLE_NAME, replaced values vReplace. vReplace vector values replace tags .","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ReplaceTagsInFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Tags in a File — ReplaceTagsInFile","text":"logical value (TRUE/FALSE) indicating whether function successful.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/ReplaceTagsInFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Tags in a File — ReplaceTagsInFile","text":"","code":"if (FALSE) { # \\dontrun{ vTags    <- c(\"FUNCTION_NAME\", \"CREATION_DATE\") vReplace <- c(strNewFunctionName, strToday) strFileName <- \"MyTemplate.R\" # A file that contains {{FUNCTION_NAME}} and {{CREATION_DATE}} ReplaceTagsInFile(strFileName, vTags, vReplace) } # }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/RunExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Example from the CyneRgy Package — RunExample","title":"Launch Example from the CyneRgy Package — RunExample","text":"function opens example included CyneRgy package. new instance RStudio launch open requested example. obtain current list available examples, call CyneRgy::RunExample(), display list.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/RunExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Example from the CyneRgy Package — RunExample","text":"","code":"RunExample(strExample)"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/RunExample.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Launch Example from the CyneRgy Package — RunExample","text":"function requires RStudio open example projects automatically. RStudio API unavailable, manual process needed.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/RunExample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch Example from the CyneRgy Package — RunExample","text":"","code":"if (FALSE) { # \\dontrun{ CyneRgy::RunExample(\"TreatmentSelection\") } # }"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpThatAreBetterThanCtrl.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Experimental Treatments Better Than Control — SelectExpThatAreBetterThanCtrl","title":"Select Experimental Treatments Better Than Control — SelectExpThatAreBetterThanCtrl","text":"Select treatments higher control , none greater, select treatment largest probability response. interim analysis, select treatment response rate higher control stage 2. none treatments higher response rate control, select treatment largest probability response. second stage, randomization ratio 1:1 (experimental:control).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpThatAreBetterThanCtrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Experimental Treatments Better Than Control — SelectExpThatAreBetterThanCtrl","text":"","code":"SelectExpThatAreBetterThanCtrl(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpThatAreBetterThanCtrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Experimental Treatments Better Than Control — SelectExpThatAreBetterThanCtrl","text":"SimData Dataframe consists data generated current simulation. DesignParam List Design Simulation Parameters required perform treatment selection. LookInfo List containing Design Simulation Parameters, might required perform treatment selection. UserParam list user-defined parameters East East Horizon. default must NULL.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpThatAreBetterThanCtrl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Experimental Treatments Better Than Control — SelectExpThatAreBetterThanCtrl","text":"list containing: TreatmentID vector experimental treatment IDs selected advance, e.g., 1, 2, ..., number experimental treatments. AllocRatio vector allocation ratios selected treatments relative control. ErrorCode integer indicating success error status: ErrorCode = 0 error. ErrorCode > 0 Nonfatal error, current simulation aborted subsequent simulations run. ErrorCode < 0 Fatal error, simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpThatAreBetterThanCtrl.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Select Experimental Treatments Better Than Control — SelectExpThatAreBetterThanCtrl","text":"length TreatmentID AllocRatio must . allocation ratio control always 1, AllocRatio values relative . example, allocation value 2 means twice many participants randomized experimental treatment compared control. order AllocRatio match TreatmentID, corresponding elements assigned respective allocation ratios. returned vector includes TreatmentID values experimental treatments. example, TreatmentID = c(0, 1, 2) invalid control (0) included. least one treatment one allocation ratio must returned.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpThatAreBetterThanCtrl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Experimental Treatments Better Than Control — SelectExpThatAreBetterThanCtrl","text":"","code":"# Example 1: Assuming the allocation in the second part of the trial is 1:2:2 for Control:Experimental 1:Experimental 2 vSelectedTreatments <- c(1, 2)  # Experimental 1 and 2 both have an allocation ratio of 2. vAllocationRatio    <- c(2, 2) nErrorCode          <- 0 lReturn             <- list(TreatmentID = vSelectedTreatments, AllocRatio = vAllocationRatio, ErrorCode = nErrorCode) return(lReturn) #> $TreatmentID #> [1] 1 2 #>  #> $AllocRatio #> [1] 2 2 #>  #> $ErrorCode #> [1] 0 #>   # Example 2: Assuming the allocation in the second part of the trial is 1:1:2 for Control:Experimental 1:Experimental 2 vSelectedTreatments <- c(1, 2)  # Experimental 2 will receive twice as many as Experimental 1 or Control. vAllocationRatio    <- c(1, 2) nErrorCode          <- 0 lReturn             <- list(TreatmentID = vSelectedTreatments, AllocRatio = vAllocationRatio, ErrorCode = nErrorCode) return(lReturn) #> $TreatmentID #> [1] 1 2 #>  #> $AllocRatio #> [1] 1 2 #>  #> $ErrorCode #> [1] 0 #>"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpUsingBayesianRule.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Experimental Treatments Using a Bayesian Rule — SelectExpUsingBayesianRule","title":"Select Experimental Treatments Using a Bayesian Rule — SelectExpUsingBayesianRule","text":"function implements MAMS design binary outcomes performs treatment selection interim analysis (IA) using Bayesian decision rule. IA, experimental treatment selected stage 2 posterior probability exceeding user-specified historical response rate (UserParam$dHistoricResponseRate) greater user-defined threshold (UserParam$dMinPosteriorProbability): Pr(pj > UserParam$dHistoricResponseRate | data) > UserParam$dMinPosteriorProbability. treatment satisfies criterion, treatment highest posterior probability selected. experimental arms assume prior distribution: pj ~ Beta(UserParam$dPriorAlpha, UserParam$dPriorBeta). stage 2, selected treatments randomized control arm 2:1 ratio (experimental:control).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpUsingBayesianRule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Experimental Treatments Using a Bayesian Rule — SelectExpUsingBayesianRule","text":"","code":"SelectExpUsingBayesianRule(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpUsingBayesianRule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Experimental Treatments Using a Bayesian Rule — SelectExpUsingBayesianRule","text":"SimData Dataframe containing data generated current simulation. DesignParam List design simulation parameters required perform treatment selection. LookInfo List containing design simulation parameters, might required perform treatment selection. UserParam list user-defined parameters East East Horizon. default NULL. list must contain following named elements: UserParam$dPriorAlpha value (0,1) defining prior alpha parameter beta distribution. UserParam$dPriorBeta value (0,1) specifying prior beta parameter beta distribution. UserParam$dHistoricResponseRate value (0,1) specifying historic response rate. UserParam$dMinPosteriorProbability value (0,1) specifying posterior probability needed exceed historic response rate experimental treatment selection.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpUsingBayesianRule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Experimental Treatments Using a Bayesian Rule — SelectExpUsingBayesianRule","text":"list containing: TreatmentID vector experimental treatment IDs selected advance, e.g., 1, 2, ..., number experimental treatments. AllocRatio vector allocation ratios selected treatments relative control. ErrorCode integer indicating success error status: ErrorCode = 0 error. ErrorCode > 0 Nonfatal error, current simulation aborted subsequent simulations run. ErrorCode < 0 Fatal error, simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpUsingBayesianRule.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Select Experimental Treatments Using a Bayesian Rule — SelectExpUsingBayesianRule","text":"length TreatmentID AllocRatio must . allocation ratio control always 1, AllocRatio values relative . example, allocation value 2 means twice many participants randomized experimental treatment compared control. order AllocRatio match TreatmentID, corresponding elements assigned respective allocation ratios. returned vector includes TreatmentID values experimental treatments. example, TreatmentID = c(0, 1, 2) invalid control (0) included. least one treatment one allocation ratio must returned.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpWithPValueLessThanSpecified.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Experimental Treatments Using P-value Comparison — SelectExpWithPValueLessThanSpecified","title":"Select Experimental Treatments Using P-value Comparison — SelectExpWithPValueLessThanSpecified","text":"interim analysis, experimental treatments compared control using chi-squared test. Treatments p-values less dMaxPValue selected stage 2. treatments meet threshold, treatment smallest p-value selected. second stage, randomization ratio 1:1 (experimental:control).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpWithPValueLessThanSpecified.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Experimental Treatments Using P-value Comparison — SelectExpWithPValueLessThanSpecified","text":"","code":"SelectExpWithPValueLessThanSpecified(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpWithPValueLessThanSpecified.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Experimental Treatments Using P-value Comparison — SelectExpWithPValueLessThanSpecified","text":"SimData Dataframe containing data generated current simulation. DesignParam List design simulation parameters required treatment selection. LookInfo List containing design simulation parameters might required treatment selection. UserParam list user-defined parameters East East Horizon. Default NULL. list must contain following named element: UserParam$dMaxPValue value (0,1) specifying chi-squared probability threshold selecting treatments advance. Treatments p-values less threshold advance second stage.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpWithPValueLessThanSpecified.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Experimental Treatments Using P-value Comparison — SelectExpWithPValueLessThanSpecified","text":"list containing: TreatmentID vector experimental treatment IDs selected advance, e.g., 1, 2, ..., number experimental treatments. AllocRatio vector allocation ratios selected treatments relative control. ErrorCode integer indicating success error status: ErrorCode = 0 error. ErrorCode > 0 Nonfatal error, current simulation aborted subsequent simulations run. ErrorCode < 0 Fatal error, simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpWithPValueLessThanSpecified.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Select Experimental Treatments Using P-value Comparison — SelectExpWithPValueLessThanSpecified","text":"length TreatmentID AllocRatio must . allocation ratio control always 1, AllocRatio values relative . example, allocation value 2 means twice many participants randomized experimental treatment compared control. order AllocRatio match TreatmentID, corresponding elements assigned respective allocation ratios. returned vector includes TreatmentID values experimental treatments. example, TreatmentID = c(0, 1, 2) invalid control (0) included. least one treatment one allocation ratio must returned.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectExpWithPValueLessThanSpecified.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Experimental Treatments Using P-value Comparison — SelectExpWithPValueLessThanSpecified","text":"","code":"# Example 1: Allocation in the second stage is 1:2:2 for Control:Experimental 1:Experimental 2 vSelectedTreatments <- c(1, 2)  # Experimental 1 and Experimental 2 both have an allocation ratio of 2. vAllocationRatio    <- c(2, 2) nErrorCode          <- 0 lReturn             <- list(TreatmentID = vSelectedTreatments,                               AllocRatio  = vAllocationRatio,                              ErrorCode   = nErrorCode) return(lReturn) #> $TreatmentID #> [1] 1 2 #>  #> $AllocRatio #> [1] 2 2 #>  #> $ErrorCode #> [1] 0 #>   # Example 2: Allocation in the second stage is 1:1:2 for Control:Experimental 1:Experimental 2 vSelectedTreatments <- c(1, 2)  # Experimental 2 will receive twice as many patients as Experimental 1 or Control. vAllocationRatio    <- c(1, 2) nErrorCode          <- 0 lReturn             <- list(TreatmentID = vSelectedTreatments,                               AllocRatio  = vAllocationRatio,                              ErrorCode   = nErrorCode) return(lReturn) #> $TreatmentID #> [1] 1 2 #>  #> $AllocRatio #> [1] 1 2 #>  #> $ErrorCode #> [1] 0 #>"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectSpecifiedNumberOfExpWithHighestResponses.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Treatments with the Highest Number of Responses — SelectSpecifiedNumberOfExpWithHighestResponses","title":"Select Treatments with the Highest Number of Responses — SelectSpecifiedNumberOfExpWithHighestResponses","text":"function used Multi-Arm Multi-Stage (MAMS) design binary outcome performs treatment selection interim analysis (IA). IA, user-specified number experimental treatments (QtyOfArmsToSelect) largest number responses selected. IA, randomization based user-specified inputs: 1:Rank1AllocationRatio:Rank2AllocationRatio (control, selected experimental arm highest number responses, selected experimental arm second highest number responses).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectSpecifiedNumberOfExpWithHighestResponses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Treatments with the Highest Number of Responses — SelectSpecifiedNumberOfExpWithHighestResponses","text":"","code":"SelectSpecifiedNumberOfExpWithHighestResponses(   SimData,   DesignParam,   LookInfo = NULL,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectSpecifiedNumberOfExpWithHighestResponses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Treatments with the Highest Number of Responses — SelectSpecifiedNumberOfExpWithHighestResponses","text":"SimData dataframe consisting data generated current simulation. DesignParam list design simulation parameters required perform treatment selection. LookInfo list containing design simulation parameters might required perform treatment selection. UserParam list user-defined parameters East East Horizon. default NULL. list must contain following named elements: QtyOfArmsToSelect value defining many treatment arms chosen advance. Note number must match number user-specified allocation values. Rank1AllocationRatio value specifying allocation arm highest response. Rank2AllocationRatio value specifying allocation arm next highest response.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectSpecifiedNumberOfExpWithHighestResponses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Treatments with the Highest Number of Responses — SelectSpecifiedNumberOfExpWithHighestResponses","text":"list containing: TreatmentID vector experimental treatment IDs selected advance, e.g., 1, 2, ..., number experimental treatments. AllocRatio vector allocation ratios selected treatments relative control. ErrorCode integer indicating success error status: ErrorCode = 0 error. ErrorCode > 0 Nonfatal error, current simulation aborted subsequent simulations run. ErrorCode < 0 Fatal error, simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectSpecifiedNumberOfExpWithHighestResponses.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Select Treatments with the Highest Number of Responses — SelectSpecifiedNumberOfExpWithHighestResponses","text":"length TreatmentID AllocRatio must . allocation ratio control always 1, AllocRatio values relative . example, allocation value 2 means twice many participants randomized experimental treatment compared control. order AllocRatio match TreatmentID, corresponding elements assigned respective allocation ratios. returned vector includes TreatmentID values experimental treatments. example, TreatmentID = c(0, 1, 2) invalid control (0) included. least one treatment one allocation ratio must returned.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SelectSpecifiedNumberOfExpWithHighestResponses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Treatments with the Highest Number of Responses — SelectSpecifiedNumberOfExpWithHighestResponses","text":"","code":"# Example 1: Assuming the allocation in the second part of the trial is 1:2:2 for Control:Experimental 1:Experimental 2 vSelectedTreatments <- c(1, 2)  # Experimental 1 and 2 both have an allocation ratio of 2. vAllocationRatio    <- c(2, 2) nErrorCode          <- 0 lReturn             <- list(   TreatmentID = vSelectedTreatments,    AllocRatio  = vAllocationRatio,   ErrorCode   = nErrorCode ) return(lReturn) #> $TreatmentID #> [1] 1 2 #>  #> $AllocRatio #> [1] 2 2 #>  #> $ErrorCode #> [1] 0 #>   # Example 2: Assuming the allocation in the second part of the trial is 1:1:2 for Control:Experimental 1:Experimental 2 vSelectedTreatments <- c(1, 2)  # Experimental 2 will receive twice as many participants as Experimental 1 or Control.  vAllocationRatio    <- c(1, 2) nErrorCode          <- 0 lReturn             <- list(   TreatmentID = vSelectedTreatments,    AllocRatio  = vAllocationRatio,   ErrorCode   = nErrorCode ) return(lReturn) #> $TreatmentID #> [1] 1 2 #>  #> $AllocRatio #> [1] 1 2 #>  #> $ErrorCode #> [1] 0 #>"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateContinuousPatientOutcomePercentAtZero.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Continuous Patient Outcomes with Proportion at Zero — SimulateContinuousPatientOutcomePercentAtZero","title":"Simulate Continuous Patient Outcomes with Proportion at Zero — SimulateContinuousPatientOutcomePercentAtZero","text":"Simulates patient outcomes normal distribution, specified percentage patients outcome 0. example, continuous outcome represents patient's change baseline. function generates patient outcomes , average: specified proportion patients value 0 outcome, defined UserParam. remaining patients values simulated normal distribution using provided mean standard deviation parameters.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateContinuousPatientOutcomePercentAtZero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Continuous Patient Outcomes with Proportion at Zero — SimulateContinuousPatientOutcomePercentAtZero","text":"","code":"SimulateContinuousPatientOutcomePercentAtZero(   NumSub,   TreatmentID,   Mean,   StdDev,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateContinuousPatientOutcomePercentAtZero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Continuous Patient Outcomes with Proportion at Zero — SimulateContinuousPatientOutcomePercentAtZero","text":"NumSub number subjects simulate. Must integer value. TreatmentID vector treatment IDs, : 0 represents Treatment 1. 1 represents Treatment 2. length TreatmentID must equal NumSub. Mean numeric vector length 2 specifying mean values two treatments. StdDev numeric vector length 2 specifying standard deviations treatment. UserParam list user-defined parameters. Must contain following named elements: UserParam$dProbOfZeroOutcomeCtrl Numeric (0, 1); defines probability patient outcome 0 control (Treatment 1). UserParam$dProbOfZeroOutcomeExp Numeric (0, 1); defines probability patient outcome 0 experimental (Treatment 2).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateContinuousPatientOutcomePercentAtZero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Continuous Patient Outcomes with Proportion at Zero — SimulateContinuousPatientOutcomePercentAtZero","text":"list containing following elements: Response numeric vector representing simulated outcomes patient. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateContinuousPatientOutcomePercentAtZeroBetaDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Continuous Patient Outcomes with Probability of Zero from a Beta Distribution — SimulateContinuousPatientOutcomePercentAtZeroBetaDist","title":"Simulate Continuous Patient Outcomes with Probability of Zero from a Beta Distribution — SimulateContinuousPatientOutcomePercentAtZeroBetaDist","text":"Simulates patient outcomes normal distribution, probability zero outcome random sampled Beta distribution. probability zero outcome determined follows: control treatment, sampled \\(Beta(UserParam$dCtrlBetaParam1, UserParam$dCtrlBetaParam2)\\) distribution. experimental treatment, sampled \\(Beta(UserParam$dExpBetaParam1, UserParam$dExpBetaParam2)\\) distribution. approach incorporates variability unknown probability response.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateContinuousPatientOutcomePercentAtZeroBetaDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Continuous Patient Outcomes with Probability of Zero from a Beta Distribution — SimulateContinuousPatientOutcomePercentAtZeroBetaDist","text":"","code":"SimulateContinuousPatientOutcomePercentAtZeroBetaDist(   NumSub,   TreatmentID,   Mean,   StdDev,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateContinuousPatientOutcomePercentAtZeroBetaDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Continuous Patient Outcomes with Probability of Zero from a Beta Distribution — SimulateContinuousPatientOutcomePercentAtZeroBetaDist","text":"NumSub number subjects simulate. Must integer value. TreatmentID vector treatment IDs, : 0 represents Treatment 1. 1 represents Treatment 2. length TreatmentID must equal NumSub. Mean numeric vector length 2 specifying mean values two treatments. StdDev numeric vector length 2 specifying standard deviations treatment. UserParam list user-defined parameters. Must contain following named elements: UserParam$dCtrlBetaParam1 Numeric; first parameter Beta distribution control (Treatment 1). UserParam$dCtrlBetaParam2 Numeric; second parameter Beta distribution control (Treatment 1). UserParam$dExpBetaParam1 Numeric; first parameter Beta distribution experimental (Treatment 2). UserParam$dExpBetaParam2 Numeric; second parameter Beta distribution experimental (Treatment 2).","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateContinuousPatientOutcomePercentAtZeroBetaDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Continuous Patient Outcomes with Probability of Zero from a Beta Distribution — SimulateContinuousPatientOutcomePercentAtZeroBetaDist","text":"list containing following elements: Response numeric vector representing simulated outcomes patient. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateTTEPatientMixtureExponentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate TTE Patient Outcomes from a Mixture Exponential Distribution — SimulateTTEPatientMixtureExponentials","title":"Simulate TTE Patient Outcomes from a Mixture Exponential Distribution — SimulateTTEPatientMixtureExponentials","text":"function simulates patient data mixture Exponential distributions. mixture based patient subgroups. subgroup, specify median time--event control experimental treatments well probability patient belongs specific group. required function signature integration East East Horizon includes SurvMethod, NumPrd, PrdTime, SurvParam, ignored function, parameters UserParam utilized.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateTTEPatientMixtureExponentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate TTE Patient Outcomes from a Mixture Exponential Distribution — SimulateTTEPatientMixtureExponentials","text":"","code":"SimulateTTEPatientMixtureExponentials(   NumSub,   NumArm,   TreatmentID,   SurvMethod,   NumPrd,   PrdTime,   SurvParam,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateTTEPatientMixtureExponentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate TTE Patient Outcomes from a Mixture Exponential Distribution — SimulateTTEPatientMixtureExponentials","text":"NumSub number patient times generate trial. single numeric value, e.g., 250. NumArm number arms trial, single numeric value. two-arm trial, 2. TreatmentID vector treatment IDs, 0 = treatment 1, 1 = treatment 2. length TreatmentID must equal NumSub. SurvMethod value pulled Input Method drop-list. 1 (Hazard Rate), 2 (Cumulative percentage survival), 3 (Medians). NumPrd number time periods provided. PrdTime SurvMethod = 1 PrdTime vector starting times hazard pieces. SurvMethod = 2 Times cumulative percentage survivals specified. SurvMethod = 3 Period time 0 default. SurvParam SurvMethod = 1 SurvParam array (NumPrd rows, NumArm columns) specifies arm--arm hazard rates (one rate per arm per piece). Thus, SurvParami, j specifies hazard rate ith period jth arm. Arms columns, column 1 control column 2 experimental. Time periods rows, row 1 time period 1, row 2 time period 2, etc. SurvMethod = 2 SurvParam array (NumPrd rows, NumArm columns) specifies arm--arm cumulative percentage survivals (one value per arm per piece). Thus, SurvParami, j specifies cumulative percentage survival ith period jth arm. SurvMethod = 3 SurvParam 1 x 2 array median survival times arm. Column 1 control, column 2 experimental. UserParam list user-defined parameters East East Horizon. default NULL. UserParam supplied, must contain following: UserParam$QtyOfSubgroups quantity patient subgroups. subgroup II = 1,2,...,QtyOfSubgroups, must specify ProbSubgroupII, MedianTTECtrlSubgroupII, MedianTTEExpSubgroupII. UserParam$ProbSubgroup1 probability patient subgroup 1. UserParam$MedianTTECtrlSubgroup1 median time--event patient subgroup 1 receives control treatment. UserParam$MedianTTEExpSubgroup1 median time--event patient subgroup 1 receives experimental treatment. UserParam$ProbSubgroup2 probability patient subgroup 2. UserParam$MedianTTECtrlSubgroup2 median time--event patient subgroup 2 receives control treatment. UserParam$MedianTTEExpSubgroup2 median time--event patient subgroup 2 receives experimental treatment.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateTTEPatientMixtureExponentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate TTE Patient Outcomes from a Mixture Exponential Distribution — SimulateTTEPatientMixtureExponentials","text":"list following components: SurvivalTime vector simulated survival times patients. Subgroup vector patient subgroups. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateTTEPatientWeibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate TTE Patient Outcomes from a Weibull Distribution — SimulateTTEPatientWeibull","title":"Simulate TTE Patient Outcomes from a Weibull Distribution — SimulateTTEPatientWeibull","text":"function simulates patient data Weibull (shape, scale) distribution. rweibull function stats package used simulate survival time. See help rweibull. required function signature integration East East Horizon includes SurvMethod, NumPrd, PrdTime, SurvParam, ignored function, parameters UserParam utilized.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateTTEPatientWeibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate TTE Patient Outcomes from a Weibull Distribution — SimulateTTEPatientWeibull","text":"","code":"SimulateTTEPatientWeibull(   NumSub,   NumArm,   TreatmentID,   SurvMethod,   NumPrd,   PrdTime,   SurvParam,   UserParam = NULL )"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateTTEPatientWeibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate TTE Patient Outcomes from a Weibull Distribution — SimulateTTEPatientWeibull","text":"NumSub number patient times generate trial. single numeric value, e.g., 250. NumArm number arms trial, single numeric value. two-arm trial, 2. TreatmentID vector treatment IDs. 0 = treatment 1, 1 = treatment 2. length TreatmentID must equal NumSub. SurvMethod value pulled Input Method drop-list. 1 Hazard Rate. 2 Cumulative percentage survival. 3 Medians. NumPrd Number time periods provided. PrdTime SurvMethod = 1 PrdTime vector starting times hazard pieces. SurvMethod = 2 Times cumulative percentage survivals specified. SurvMethod = 3 PrdTime 0 default. SurvParam 2-D array parameters generate survival times, depending table Response Generation tab. SurvMethod = 1 SurvParam array (NumPrd rows, NumArm columns) specifies arm--arm hazard rates (one rate per arm per piece). Thus, SurvParam[, j] specifies hazard rate ith period jth arm. Arms columns column 1 control column 2 experimental. Time periods rows, row 1 time period 1, row 2 time period 2, etc. SurvMethod = 2 SurvParam array (NumPrd rows, NumArm columns) specifies arm--arm cumulative percentage survivals (one value per arm per piece). Thus, SurvParam[, j] specifies cumulative percentage survivals ith period jth arm. SurvMethod = 3 SurvParam 1 x 2 array median survival times arm. Column 1 control, column 2 experimental. UserParam list user-defined parameters. Must contain following named elements: UserParam$dShapeCtrl shape parameter Weibull distribution control treatment. UserParam$dScaleCtrl scale parameter Weibull distribution control treatment. UserParam$dShapeExp shape parameter Weibull distribution experimental treatment. UserParam$dScaleExp scale parameter Weibull distribution experimental treatment.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/SimulateTTEPatientWeibull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate TTE Patient Outcomes from a Weibull Distribution — SimulateTTEPatientWeibull","text":"list following components: SurvivalTime vector simulated survival times patients. ErrorCode Optional integer value: 0 error. > 0 Non-fatal error; current simulation aborted subsequent simulations continue. < 0 Fatal error; simulations attempted.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/WhiskerKeepUnrender.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Template While Preserving Unmatched Tags — WhiskerKeepUnrender","title":"Render Template While Preserving Unmatched Tags — WhiskerKeepUnrender","text":"function used internally. renders template string using whisker package, preserves tags ({{tag}}) matching key provided list. first augmenting list missing tags using unrendered form, calling whisker.render().","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/WhiskerKeepUnrender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Template While Preserving Unmatched Tags — WhiskerKeepUnrender","text":"","code":"WhiskerKeepUnrender(sTemplate, lList)"},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/WhiskerKeepUnrender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Template While Preserving Unmatched Tags — WhiskerKeepUnrender","text":"sTemplate string template containing {{tag}} placeholders. lList named list tag-value pairs use rendering. Tags found list preserved unrendered form.","code":""},{"path":"https://Cytel-Inc.github.io/CyneRgy/reference/WhiskerKeepUnrender.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render Template While Preserving Unmatched Tags — WhiskerKeepUnrender","text":"rendered string known tags replaced, unknown tags kept {{tag}}.","code":""},{"path":[]}]
